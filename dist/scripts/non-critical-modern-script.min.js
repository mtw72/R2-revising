"use strict"; const copyrightDate = new Date; let copyrightYear = copyrightDate.getFullYear(); document.getElementById("year").textContent = copyrightYear; const navbarToggler = document.querySelector(".navbar__toggler"), navList = document.querySelector(".navbar__collapse"), navLinks = document.querySelectorAll(".navbar__nav-link"); function closeNavbar() { navList.classList.contains("is-opened") && (navList.style.maxHeight = null, navList.classList.remove("is-opened"), navbarToggler.setAttribute("aria-expanded", "false"), negativeTabIndex()) } navbarToggler.addEventListener("click", (e => { navList.classList.toggle("is-opened"), navList.style.maxHeight ? (navList.style.maxHeight = null, navbarToggler.setAttribute("aria-expanded", "false"), negativeTabIndex()) : (navList.style.maxHeight = navList.scrollHeight + "px", navbarToggler.setAttribute("aria-expanded", "true"), zeroTabIndex()), e.stopPropagation() })), document.addEventListener("click", (() => { navList.classList.contains("is-opened") && closeNavbar() })); const findusLink = document.getElementById("findus-link"); function closeNavbarByTab(e) { const t = e.keyCode || e.which; e.shiftKey && 9 == e.keyCode || 9 === t && closeNavbar() } findusLink.addEventListener("keydown", closeNavbarByTab); let prevScrollpos = window.scrollY; function addDefaultAriaAttributes() { navbarToggler.setAttribute("aria-expanded", "false") } function removeDefaultAriaAttributes() { navbarToggler.removeAttribute("aria-expanded", "false") } function zeroTabIndex() { for (let e = 0; e < navLinks.length; e++)navLinks[e].setAttribute("tabindex", "0") } function negativeTabIndex() { for (let e = 0; e < navLinks.length; e++)navLinks[e].setAttribute("tabindex", "-1") } function checkScreenSize() { closeNavbar(), window.innerWidth <= 576 ? (addDefaultAriaAttributes(), negativeTabIndex()) : (removeDefaultAriaAttributes(), zeroTabIndex()) } window.onscroll = function () { let e = window.scrollY; prevScrollpos > e ? document.getElementById("navbar").style.top = "0" : (document.getElementById("navbar").style.top = "-500px", closeNavbar()), prevScrollpos = e }, window.addEventListener("load", checkScreenSize), window.addEventListener("resize", checkScreenSize); let slideIndex = 1; function showSlides(e) { let t, n = document.getElementsByClassName("small-menu__carousel__slide"), a = document.getElementsByClassName("small-menu__carousel-dot"); for ((e > n.length || slideIndex > n.length) && (slideIndex = 1), e < 1 && (slideIndex = n.length), t = 0; t < n.length; t++)n[t].style.display = "none"; for (t = 0; t < a.length; t++)a[t].className = a[t].className.replace(" carousel-dot--active", ""), a[t].setAttribute("aria-selected", "false"); n[slideIndex - 1].style.display = "block", a[slideIndex - 1].className += " carousel-dot--active", a[slideIndex - 1].setAttribute("aria-selected", "true") } function autoplay() { slideIndex++, showSlides() } showSlides(slideIndex); let timer = setInterval(autoplay, 3500); function resetTimer() { clearInterval(timer), timer = setInterval(autoplay, 3500) } function plusSlides(e) { showSlides(slideIndex += e), resetTimer() } function currentSlide(e) { showSlides(slideIndex = e), resetTimer() } function openMenu(e, t) { let n, a, r; for (a = document.getElementsByClassName("large-menu__tab"), n = 0; n < a.length; n++)a[n].classList.remove("large-menu__tab--active"), a[n].setAttribute("aria-selected", "false"); for (e.currentTarget.classList.add("large-menu__tab--active"), e.currentTarget.setAttribute("aria-selected", "true"), r = document.getElementsByClassName("large-food-menu"), n = 0; n < r.length; n++)r[n].style.display = "none"; document.getElementById(t).style.display = "grid" } document.getElementById("pasta-tab").click(); const menuAccordion = document.getElementsByClassName("small-menu__accordion"); function openMenuPanel() { for (let e = 0; e < menuAccordion.length; e++)if (menuAccordion[e].classList.contains("small-menu__accordion--active")) { menuAccordion[e].setAttribute("aria-expanded", "true"); let t = menuAccordion[e].nextElementSibling; t.style.maxHeight = t.scrollHeight + "px", t.style.border = "1px solid rgba(226, 186, 137, 0.842)", t.classList.add("small-menu__panel--open"), t.setAttribute("role", "region") } } window.addEventListener("load", openMenuPanel); for (let e = 0; e < menuAccordion.length; e++)menuAccordion[e].addEventListener("click", (function () { this.classList.toggle("small-menu__accordion--active"), "true" === this.getAttribute("aria-expanded") ? this.setAttribute("aria-expanded", "false") : this.setAttribute("aria-expanded", "true"); let e = this.nextElementSibling; e.classList.contains("small-menu__panel--open") ? (e.style.maxHeight = null, e.classList.remove("small-menu__panel--open"), e.style.border = "none", e.removeAttribute("role", "region")) : (e.style.maxHeight = e.scrollHeight + "px", e.style.border = "1px solid rgba(226, 186, 137, 0.842)", e.classList.add("small-menu__panel--open"), e.setAttribute("role", "region")) })); function handleResize() { window.innerWidth <= 450 && openMenuPanel() } window.addEventListener("resize", handleResize); const dateOfToday = new Date, tdyDay = dateOfToday.getDay(); let tdyDate = dateOfToday.getDate(), tdyMth = dateOfToday.getMonth() + 1; const tdyYear = dateOfToday.getFullYear(), tdyHour = dateOfToday.getHours(); tdyDate < 10 && (tdyDate = "0" + tdyDate), tdyMth < 10 && (tdyMth = "0" + tdyMth); const today = tdyYear + "-" + tdyMth + "-" + tdyDate, dateOfTmr = new Date((new Date).setDate(dateOfToday.getDate() + 1)); let tmrDate = dateOfTmr.getDate(), tmrMth = dateOfTmr.getMonth() + 1; const tmrYear = dateOfTmr.getFullYear(); tmrDate < 10 && (tmrDate = "0" + tmrDate), tmrMth < 10 && (tmrMth = "0" + tmrMth); const tomorrow = tmrYear + "-" + tmrMth + "-" + tmrDate, dateInput = document.getElementById("date"); switch (tdyDay) { case 0: tdyHour > 15 ? (dateInput.value = tomorrow, dateInput.min = tomorrow) : (dateInput.value = today, dateInput.min = today); break; case 5: case 6: tdyHour > 19 ? (dateInput.value = tomorrow, dateInput.min = tomorrow) : (dateInput.value = today, dateInput.min = today); break; default: tdyHour > 18 ? (dateInput.value = tomorrow, dateInput.min = tomorrow) : (dateInput.value = today, dateInput.min = today) }function pad(e) { return (e < 10 ? "0" : "") + e } function isWithinOpeningHours(e, t, n) { const a = 100 * t + n, { start: r, end: i } = { Sunday: { start: 1200, end: 1600 }, Monday: { start: 1200, end: 1900 }, Tuesday: { start: 1200, end: 1900 }, Wednesday: { start: 1200, end: 1900 }, Thursday: { start: 1200, end: 1900 }, Friday: { start: 1200, end: 2e3 }, Saturday: { start: 1200, end: 2e3 } }[e]; return a >= r && a <= i } function generateTimeOptions() { const e = new Date, t = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"][e.getDay()], n = e.getHours(), a = e.getMinutes(), r = document.getElementById("time"); if (r.innerHTML = "", dateInput.value === today) for (let e = 12; e <= 21; e++)for (let i = 0; i < 60; i += 15) { const o = e > 12 ? e - 12 : e, s = e >= 12 ? "pm" : "am"; if (isWithinOpeningHours(t, e, i) && (e > n + 1 || e === n + 1 && i >= a)) { const e = new Option(o + ":" + pad(i) + s, time); r.add(e) } } else { switch (new Date(dateInput.value).getDay()) { case 0: for (let e = 12; e <= 16; e++)for (let t = 0; t < 60; t += 15) { const n = e >= 12 ? "pm" : "am", a = new Option((e > 12 ? e - 12 : e) + ":" + pad(t) + n, time); r.add(a) } break; case 5: case 6: for (let e = 12; e <= 20; e++)for (let t = 0; t < 60; t += 15) { const n = e >= 12 ? "pm" : "am", a = new Option((e > 12 ? e - 12 : e) + ":" + pad(t) + n, time); r.add(a) } break; default: for (let e = 12; e <= 19; e++)for (let t = 0; t < 60; t += 15) { const n = e >= 12 ? "pm" : "am", a = new Option((e > 12 ? e - 12 : e) + ":" + pad(t) + n, time); r.add(a) } } } } function formSubmitted() { alert("Thanks for choosing our restaurant!\nWe will contact you shortly to confirm your reservation.") } dateInput.addEventListener("input", generateTimeOptions), generateTimeOptions(); const textarea = document.getElementById("message"); function clearPlaceholder() { "(e.g. Dietary Restriction, Special Occasions)" === textarea.value.trim() && (textarea.value = ""), textarea.removeEventListener("focus", clearPlaceholder) } textarea.addEventListener("blur", (function () { "" === textarea.value.trim() && (textarea.value = "(e.g. Dietary Restriction, Special Occasions)", textarea.addEventListener("focus", clearPlaceholder)) })), textarea.addEventListener("input", (function () { "" !== textarea.value.trim() ? textarea.classList.add("input") : textarea.classList.remove("input") })); const submitButton = document.getElementById("formSumbitButton"), nameInput = document.getElementById("name"), nameError = document.getElementById("name-error"), phoneNumberInput = document.getElementById("tel"), phoneNumberError = document.getElementById("phone-error"), emailInput = document.getElementById("email"), emailError = document.getElementById("email-error"), dateError = document.getElementById("date-error"), timeError = document.getElementById("time-error"); function nameInputEvent() { const e = nameInput.value.trim(); e.length > 1 && /^[A-Za-z ]+$/.test(e) ? (nameInput.classList.remove("error-input"), nameInput.removeAttribute("aria-describedby", "name-error"), nameInput.removeAttribute("aria-invalid", "true"), nameError.style.display = "none") : (nameInput.classList.add("error-input"), nameInput.setAttribute("aria-describedby", "name-error"), nameInput.setAttribute("aria-invalid", "true"), nameError.style.display = "block") } function phoneNumberInputEvent() { phoneNumberInput.value.length > 6 && /[0-9+]/g.test(phoneNumberInput.value) ? (phoneNumberInput.classList.remove("error-input"), phoneNumberInput.removeAttribute("aria-describedby", "phone-error"), phoneNumberInput.removeAttribute("aria-invalid", "true"), phoneNumberError.style.display = "none") : (phoneNumberInput.classList.add("error-input"), phoneNumberInput.setAttribute("aria-describedby", "phone-error"), phoneNumberInput.setAttribute("aria-invalid", "true"), phoneNumberError.style.display = "block") } function emailInputEvent() { /^[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,}$/.test(emailInput.value) ? (emailInput.classList.remove("error-input"), emailInput.removeAttribute("aria-describedby", "email-error"), emailInput.removeAttribute("aria-invalid", "true"), emailError.style.display = "none") : (emailInput.classList.add("error-input"), emailInput.setAttribute("aria-describedby", "email-error"), emailInput.setAttribute("aria-invalid", "true"), emailError.style.display = "block") } function dateInputEvent() { new Date(dateInput.value) >= new Date(dateInput.min) ? (dateInput.classList.remove("error-input"), dateInput.removeAttribute("aria-describedby", "date-error"), dateInput.removeAttribute("aria-invalid", "true"), dateError.style.display = "none") : (dateInput.classList.add("error-input"), dateInput.setAttribute("aria-describedby", "date-error"), dateInput.setAttribute("aria-invalid", "true"), dateError.style.display = "block") } submitButton.addEventListener("click", (e => { const t = nameInput.value.trim(); nameInput.validity.patternMismatch || t.length < 2 || "" === nameInput.value ? (e.preventDefault(), nameInput.classList.add("error-input"), nameInput.setAttribute("aria-describedby", "name-error"), nameInput.setAttribute("aria-invalid", "true"), nameError.style.display = "block") : (nameInput.classList.remove("error-input"), nameError.style.display = "none"), phoneNumberInput.validity.patternMismatch || "" === phoneNumberInput.value ? (e.preventDefault(), phoneNumberInput.classList.add("error-input"), phoneNumberInput.setAttribute("aria-describedby", "phone-error"), phoneNumberInput.setAttribute("aria-invalid", "true"), phoneNumberError.style.display = "block") : (phoneNumberInput.classList.remove("error-input"), phoneNumberError.style.display = "none"), emailInput.validity.patternMismatch || "" === emailInput.value ? (e.preventDefault(), emailInput.classList.add("error-input"), emailInput.setAttribute("aria-describedby", "email-error"), emailInput.setAttribute("aria-invalid", "true"), emailError.style.display = "block") : (emailInput.classList.remove("error-input"), emailError.style.display = "none"); const n = new Date(dateInput.value); n < new Date(dateInput.min) || "" === n ? (e.preventDefault(), dateInput.classList.add("error-input"), dateInput.setAttribute("aria-describedby", "date-error"), dateInput.setAttribute("aria-invalid", "true"), dateError.style.display = "block") : (dateInput.classList.remove("error-input"), dateError.style.display = "none"), nameInput.addEventListener("input", nameInputEvent), phoneNumberInput.addEventListener("input", phoneNumberInputEvent), emailInput.addEventListener("input", emailInputEvent), dateInput.addEventListener("input", dateInputEvent), timeInput.addEventListener("input", timeInputEvent) }));
//# sourceMappingURL=non-critical-modern-script.min.js.map
