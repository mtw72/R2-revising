{"version":3,"sources":["footer.js","navbar.js","menu/carousel.js","menu/largeMenu.js","menu/smallMenu.js","reservationForm/formdefaultValues.js","reservationForm/formSelect.js","reservationForm/formTextarea.js","reservationForm/formValidation.js","reservationForm/popUpMessage.js"],"names":["copyrightDate","Date","copyrightYear","getFullYear","document","getElementById","textContent","navBar","navbarToggler","querySelector","navList","navLinks","querySelectorAll","home","negativeTabIndex","i","length","setAttribute","zeroTabIndex","removeTabIndex","removeAttribute","closeNavbar","classList","contains","style","maxHeight","remove","addEventListener","event","toggle","scrollHeight","stopPropagation","findusLink","closeNavbarByTab","keyCode","which","shiftKey","checkScreenSize","window","innerWidth","addAriaExpandedAttributes","removeAriaExpandedAttributes","onresize","screenWidth","paddingTop","prevScrollPos","scrollY","onscroll","currentScrollPos","navbar","top","slideIndex","showSlides","n","slides","getElementsByClassName","dots","className","replace","autoplay","timer","setInterval","resetTimer","clearInterval","plusSlides","currentSlide","openMenu","menuName","menutabs","menus","currentTarget","add","display","click","menuAccordion","openMenuPanel","menuPanel","nextElementSibling","border","this","getAttribute","handleResize","dateOfToday","tdyDay","getDay","tdyDate","getDate","tdyMth","getMonth","tdyYear","tdyHour","getHours","tdyMinute","getMinutes","today","dateOfTmr","setDate","tmrDate","tmrMth","tmrYear","tomorrow","dateInput","generateDefaultDate","value","min","pad","number","isWithinOpeningHours","day","hour","minute","currentTime","start","end","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","generateTimeOptions","now","days","currentHour","currentMinute","timeSelect","timeFirstOption","innerHTML","appendChild","optionText","option","Option","updateAtSpecificTimes","selectGuestNumberElement","selectTimeElement","optionSelected","selectedElement","textarea","clearPlaceholder","trim","removeEventListener","submitButton","nameInput","nameError","phoneNumberInput","phoneNumberError","emailInput","emailError","guestNumberInput","guestNumberError","dateError","timeInput","timeError","nameInputEvent","trimmedValue","test","phoneNumberInputEvent","emailInputEvent","guestNumberInputEvent","dateInputEvent","timeInputEvent","validity","patternMismatch","preventDefault","selectedDate","alert","confirmationMessage","confirmButton","closeButton","cancelButton","messageInput","nameValue","phoneValue","emailValue","guestNumberValue","dateValue","timeValue","messageValue","messageTimer","openModal","options","selectedIndex","text","encodedMessage","encodeHTML","formSubmitted","selectedDateComponents","innerText","split","selectedYear","parseInt","selectedMonth","benchmarkDateComponents","benchmarkYear","benchmarkMonth","benchmarkDate","timeComponents","selectedHour","selectedMinute","closeMessage","submit","reset","closeMessageByEsc"],"mappings":"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","file":"non-critical-modern-script.min.js","sourcesContent":["'use strict';\r\n\r\n// year for the copyright in footer\r\nconst copyrightDate = new Date();\r\nlet copyrightYear = copyrightDate.getFullYear();\r\ndocument.getElementById(\"year\").textContent = copyrightYear;\r\n","'use strict';\r\n\r\nconst navBar = document.getElementById(\"navbar\");\r\nconst navbarToggler = document.querySelector('.navbar__toggler');\r\nconst navList = document.querySelector('.navbar__collapse');\r\nconst navLinks = document.querySelectorAll('.navbar__nav-link');\r\nconst home = document.getElementById(\"home\");\r\n\r\n// Show or hide the collapsible navbar when toggler is clicked\r\nnavbarToggler.addEventListener('click', (event) => {\r\n  navList.classList.toggle('is-opened');\r\n  if (navList.style.maxHeight) {\r\n    navList.style.maxHeight = null;\r\n    navbarToggler.setAttribute('aria-expanded', 'false');\r\n    negativeTabIndex(); //set the navlinks to be aria-hidden and tab-index = -1\r\n  } else {\r\n    navList.style.maxHeight = navList.scrollHeight + \"px\";\r\n    navbarToggler.setAttribute('aria-expanded', 'true');\r\n    zeroTabIndex(); //set the navlinks NOT to be aria-hidden and tab-index = 0\r\n  }\r\n  event.stopPropagation();\r\n});\r\n\r\n\r\n\r\n// Functions to change the tabindex and aria-hidden attribute of navlinks\r\nfunction negativeTabIndex() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '-1');\r\n    navLinks[i].setAttribute('aria-hidden', 'true');\r\n  }\r\n}\r\n\r\nfunction zeroTabIndex() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '0');\r\n    navLinks[i].setAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\nfunction removeTabIndex() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].removeAttribute('tabindex', '0');\r\n    navLinks[i].removeAttribute('tabindex', '-1');\r\n    navLinks[i].removeAttribute('aria-hidden', 'true');\r\n    navLinks[i].removeAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\n// Function to close the collapsible navbar\r\nfunction closeNavbar() {\r\n  if (navList.classList.contains('is-opened')) {\r\n    navList.style.maxHeight = null;\r\n    navList.classList.remove('is-opened');\r\n    navbarToggler.setAttribute('aria-expanded', 'false');\r\n    negativeTabIndex();\r\n  }\r\n}\r\n\r\n\r\n\r\n// Hide the collapsible navbar when the nav link is clicked \r\n// or when the user clicks anywhere outside of the navbar\r\ndocument.addEventListener('click', () => {\r\n  closeNavbar();\r\n});\r\n\r\n\r\n\r\n// For keyboard user, close the navbar if the key \"TAB\" is pressed\r\n// let the navbar stay open if the key \"SHIFT\" + \"TAB\" are pressed\r\nconst findusLink = document.getElementById('findus-link');\r\nfindusLink.addEventListener('keydown', closeNavbarByTab);\r\n\r\nfunction closeNavbarByTab(event) {\r\n  const keyCode = event.keyCode || event.which;\r\n  if (event.shiftKey && event.keyCode == 9) { // Check if the key pressed is 'tab'\r\n    // act normally if pressing \"shift\" + \"tab\" (going backwards)\r\n  } else if (keyCode === 9) {\r\n    closeNavbar();\r\n  }\r\n}\r\n\r\n\r\n\r\n// ** On Screen resize\r\n// Close the navbar when the page is loaded or the screen is re-sized\r\n// On small screen, set the aria-expanded attribute of the toggler, set the navlinks to be aria-hidden and tab-index = -1\r\n// On large screen, remove the aria-expanded attribute of the toggler, remove aria-hidden and tab-index attributes of navlinks\r\nwindow.addEventListener('load', checkScreenSize);\r\nwindow.addEventListener('resize', checkScreenSize);\r\n\r\nfunction checkScreenSize() {\r\n  closeNavbar();\r\n\r\n  let screenWidth = window.innerWidth;\r\n  if (screenWidth <= 576) {\r\n    addAriaExpandedAttributes();\r\n    negativeTabIndex();\r\n  } else {\r\n    removeAriaExpandedAttributes();\r\n    removeTabIndex();\r\n  }\r\n}\r\n\r\nfunction addAriaExpandedAttributes() {\r\n  navbarToggler.setAttribute('aria-expanded', 'false');\r\n}\r\n\r\nfunction removeAriaExpandedAttributes() {\r\n  navbarToggler.removeAttribute('aria-expanded', 'false');\r\n}\r\n\r\n// Adjust the padding top of the hero image according to the screen size\r\nwindow.onresize = function () {\r\n  // Update the screenWidth variable with the current window width\r\n  let screenWidth = window.innerWidth;\r\n\r\n  // Check the screenWidth and adjust value of paddingTop accordingly\r\n  if (screenWidth <= 350 || (screenWidth <= 600 && screenWidth > 450)) {\r\n    home.style.paddingTop = \"70px\";\r\n  } else {\r\n    home.style.paddingTop = \"0px\";\r\n  }\r\n}\r\n\r\n\r\n\r\n// ** On Scroll\r\n// On screen wider than 900px, when the user scrolls down, hide the navbar. When the user scrolls up, show the navbar \r\nlet prevScrollPos = window.scrollY;\r\n\r\nwindow.onscroll = function () {\r\n  let currentScrollPos = window.scrollY;\r\n  let screenWidth = window.innerWidth;\r\n\r\n  if (screenWidth > 900) {\r\n    if (prevScrollPos > currentScrollPos) {\r\n      navbar.style.top = \"0\";\r\n    } else {\r\n      navbar.style.top = \"-500px\";\r\n    }\r\n  }\r\n\r\n  prevScrollPos = currentScrollPos;\r\n}","'use strict';\r\n\r\n//carousel for small & medium menu\r\nlet slideIndex = 1;\r\nshowSlides(slideIndex);\r\n\r\nfunction showSlides(n) {\r\n  let i;\r\n  let slides = document.getElementsByClassName(\"small-menu__carousel__slide\");\r\n  let dots = document.getElementsByClassName(\"small-menu__carousel-dot\");\r\n  if (n > slides.length || slideIndex > slides.length) { slideIndex = 1 }\r\n  if (n < 1) { slideIndex = slides.length }\r\n  for (i = 0; i < slides.length; i++) {\r\n    slides[i].className = slides[i].className.replace(\" current-slide\", \"\");\r\n  }\r\n  for (i = 0; i < dots.length; i++) {\r\n    dots[i].className = dots[i].className.replace(\" current-dot\", \"\");\r\n    dots[i].setAttribute('aria-current', 'false');\r\n  }\r\n  slides[slideIndex - 1].className += \" current-slide\";\r\n  dots[slideIndex - 1].className += \" current-dot\";\r\n  dots[slideIndex - 1].setAttribute('aria-current', 'true');\r\n}\r\n\r\nfunction autoplay() {\r\n  slideIndex++;\r\n  showSlides();\r\n}\r\n\r\nlet timer = setInterval(autoplay, 3500)\r\n\r\nfunction resetTimer() {\r\n  clearInterval(timer);\r\n  timer = setInterval(autoplay, 3500);\r\n}\r\n\r\nfunction plusSlides(n) {\r\n  showSlides(slideIndex += n);\r\n  resetTimer();\r\n}\r\n\r\nfunction currentSlide(n) {\r\n  showSlides(slideIndex = n);\r\n  resetTimer();\r\n}","'use strict';\r\n\r\nfunction openMenu(event, menuName) {\r\n  let i, menutabs, menus;\r\n\r\n  menutabs = document.getElementsByClassName(\"large-menu__tab\");\r\n  for (i = 0; i < menutabs.length; i++) {\r\n    menutabs[i].classList.remove(\"large-menu__tab--active\");\r\n    menutabs[i].setAttribute('aria-selected', 'false');\r\n  }\r\n  event.currentTarget.classList.add(\"large-menu__tab--active\");\r\n  event.currentTarget.setAttribute('aria-selected', 'true');\r\n\r\n  menus = document.getElementsByClassName(\"large-menu__panel\");\r\n  for (i = 0; i < menus.length; i++) {\r\n    menus[i].style.display = \"none\";\r\n  }\r\n  document.getElementById(menuName).style.display = \"grid\";\r\n}\r\n\r\ndocument.getElementById(\"pasta-tab\").click();","'use strict';\r\n\r\nconst menuAccordion = document.getElementsByClassName(\"small-menu__accordion__button\");\r\n\r\n// open the accordion when the website is loaded\r\nwindow.addEventListener('load', openMenuPanel)\r\n\r\nfunction openMenuPanel() {\r\n  for (let i = 0; i < menuAccordion.length; i++) {\r\n    if (menuAccordion[i].classList.contains(\"small-menu__accordion__button--active\")) {\r\n      menuAccordion[i].setAttribute('aria-expanded', 'true');\r\n      let menuPanel = menuAccordion[i].nextElementSibling;\r\n      menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n      menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n      menuPanel.classList.add(\"small-menu__accordion__panel--open\");\r\n      menuPanel.setAttribute('role', 'region');\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// open or close the accordion through clicks\r\nfor (let i = 0; i < menuAccordion.length; i++) {\r\n  menuAccordion[i].addEventListener(\"click\", function () {\r\n    this.classList.toggle(\"small-menu__accordion__button--active\");\r\n\r\n    // toggle aria-expanded value\r\n    let expanded = this.getAttribute('aria-expanded');\r\n    if (expanded === 'true') {\r\n      this.setAttribute('aria-expanded', 'false');\r\n    } else {\r\n      this.setAttribute('aria-expanded', 'true');\r\n    };\r\n\r\n    // toggle open or close panel, and aria-hidden value\r\n    let menuPanel = this.nextElementSibling;\r\n    if (menuPanel.classList.contains(\"small-menu__accordion__panel--open\")) {\r\n      menuPanel.style.maxHeight = null;\r\n      menuPanel.classList.remove(\"small-menu__accordion__panel--open\");\r\n      menuPanel.style.border = \"none\";\r\n      menuPanel.removeAttribute('role', 'region');\r\n    } else {\r\n      menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n      menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n      menuPanel.classList.add(\"small-menu__accordion__panel--open\");\r\n      menuPanel.setAttribute('role', 'region');\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// when the screen re-sizes, open the accordion\r\nwindow.addEventListener('resize', handleResize);\r\n\r\nfunction handleResize() {\r\n  let screenWidth = window.innerWidth;\r\n  if (screenWidth <= 450) {\r\n    openMenuPanel();\r\n  }\r\n}","'use strict';\r\n\r\n// default date and time values in reservation form\r\n// get date of today\r\nconst dateOfToday = new Date();\r\nconst tdyDay = dateOfToday.getDay();\r\nlet tdyDate = dateOfToday.getDate();\r\nlet tdyMth = dateOfToday.getMonth() + 1;\r\nconst tdyYear = dateOfToday.getFullYear();\r\nconst tdyHour = dateOfToday.getHours();\r\nconst tdyMinute = dateOfToday.getMinutes();\r\n\r\n//make the date and/or month in 2-digit format\r\nif (tdyDate < 10) {\r\n  tdyDate = \"0\" + tdyDate;\r\n}\r\nif (tdyMth < 10) {\r\n  tdyMth = \"0\" + tdyMth;\r\n}\r\n\r\nconst today = tdyYear + \"-\" + tdyMth + \"-\" + tdyDate;\r\n\r\n// get date of tomorrow\r\nconst dateOfTmr = new Date(new Date().setDate(dateOfToday.getDate() + 1));\r\nlet tmrDate = dateOfTmr.getDate();\r\nlet tmrMth = dateOfTmr.getMonth() + 1;\r\nconst tmrYear = dateOfTmr.getFullYear();\r\n\r\n//make the date and/or month in 2-digit format\r\nif (tmrDate < 10) {\r\n  tmrDate = \"0\" + tmrDate;\r\n}\r\nif (tmrMth < 10) {\r\n  tmrMth = \"0\" + tmrMth;\r\n}\r\n\r\nconst tomorrow = tmrYear + \"-\" + tmrMth + \"-\" + tmrDate;\r\n\r\n\r\n// date picker - set default date (.value) and prevent choosing invalid dates (.min)\r\nconst dateInput = document.getElementById('date');\r\n\r\nfunction generateDefaultDate() {\r\n  switch (tdyDay) {\r\n    case 0: //Sunday\r\n      if ((tdyHour > 15) || (tdyHour === 15 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n      break;\r\n    case 5:\r\n    case 6: //Friday & Saturday\r\n      if ((tdyHour > 19) || (tdyHour === 19 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n      break;\r\n    default: //Monday to Thursday\r\n      if ((tdyHour > 18) || (tdyHour === 18 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n  }\r\n}\r\n\r\n// Generate default date when the page loads\r\ngenerateDefaultDate();\r\n\r\ndateInput.addEventListener('input', generateTimeOptions);\r\n\r\n\r\n// time picker - set default time\r\n// Function to pad single digit numbers with leading zero\r\nfunction pad(number) {\r\n  return (number < 10 ? '0' : '') + number;\r\n}\r\n\r\n// Function to check if current time is within restaurant opening hours\r\nfunction isWithinOpeningHours(day, hour, minute) {\r\n  const openingHours = {\r\n    Sunday: { start: 1200, end: 1700 },\r\n    Monday: { start: 1200, end: 2000 },\r\n    Tuesday: { start: 1200, end: 2000 },\r\n    Wednesday: { start: 1200, end: 2000 },\r\n    Thursday: { start: 1200, end: 2000 },\r\n    Friday: { start: 1200, end: 2100 },\r\n    Saturday: { start: 1200, end: 2100 }\r\n  };\r\n\r\n  const currentTime = hour * 100 + minute;\r\n  const { start, end } = openingHours[day];\r\n\r\n  return currentTime >= start && currentTime <= end;\r\n}\r\n\r\n// Function to generate time options based on current day and time\r\nfunction generateTimeOptions() {\r\n  const now = new Date();\r\n  const day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][now.getDay()];\r\n  const days = now.getDay();\r\n  const currentHour = now.getHours();\r\n  const currentMinute = now.getMinutes();\r\n  const timeSelect = document.getElementById('time');\r\n  const timeFirstOption = document.getElementById('time-first-option');\r\n\r\n  // Clear existing options (if any)\r\n  timeSelect.innerHTML = '';\r\n\r\n  // Add initial option\r\n  timeSelect.appendChild(timeFirstOption);\r\n\r\n  if (dateInput.value === today) {\r\n    switch (days) {\r\n      case 0:\r\n        for (let hour = 12; hour <= 16; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 4:15pm, 4:30pm, and 4:45pm\r\n            if (hour === 16 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        for (let hour = 12; hour <= 20; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 8:15pm, 8:30pm, and 8:45pm\r\n            if (hour === 20 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      default: //Monday to Thursday\r\n        for (let hour = 12; hour <= 19; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 7:15pm, 7:30pm, and 7:45pm\r\n            if (hour === 19 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n  else if (dateInput.value > today) {\r\n    const selectedDate = new Date(dateInput.value);\r\n    const chosenDay = selectedDate.getDay();\r\n    switch (chosenDay) {\r\n      case 0:\r\n        for (let hour = 12; hour <= 16; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 4:15pm, 4:30pm, and 4:45pm\r\n            if (hour === 16 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        for (let hour = 12; hour <= 20; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 8:15pm, 8:30pm, and 8:45pm\r\n            if (hour === 20 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n        break;\r\n      default: //Monday to Thursday\r\n        for (let hour = 12; hour <= 19; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 7:15pm, 7:30pm, and 7:45pm\r\n            if (hour === 19 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\n// Generate time options when the page loads\r\ngenerateTimeOptions();\r\n\r\n// update the default date and time at certain interval\r\nfunction updateAtSpecificTimes() {\r\n  let currentTime = new Date();\r\n  let currentHour = currentTime.getHours();\r\n  let currentMinute = currentTime.getMinutes();\r\n\r\n  // Check if the current time is between 11am and 8pm\r\n  if (currentHour >= 11 && currentHour < 20) {\r\n    // Check if the current minute is 01, 16, 31, or 46\r\n    if (currentMinute === 1 || currentMinute === 16 || currentMinute === 31 || currentMinute === 46) {\r\n      generateDefaultDate();\r\n      generateTimeOptions();\r\n    }\r\n  }\r\n}\r\n\r\nsetInterval(updateAtSpecificTimes, 60 * 1000);","'use strict';\r\n\r\nlet selectGuestNumberElement = document.getElementById('guest-number');\r\nlet selectTimeElement = document.getElementById('time');\r\n\r\nfunction optionSelected(selectedElement) {\r\n    // Check if a valid option (not the disabled one) is selected\r\n    if (selectedElement.value !== \"\") {\r\n        // If a valid option is selected, add the 'valid' class to change its color\r\n        selectedElement.classList.add('valid');\r\n    } else {\r\n        // If the disabled option is selected, remove the 'valid' class to revert to the default color\r\n        selectedElement.classList.remove('valid');\r\n    }\r\n}\r\n\r\nselectGuestNumberElement.addEventListener('change', function () {\r\n    optionSelected(selectGuestNumberElement);\r\n});\r\n\r\nselectTimeElement.addEventListener('change', function () {\r\n    optionSelected(selectTimeElement);\r\n});","'use strict';\r\n\r\n// textarea in reservation form\r\nconst textarea = document.getElementById('message');\r\n\r\nfunction clearPlaceholder() {\r\n  // Check if the current value is equal to the placeholder text\r\n  if (textarea.value.trim() === '(e.g. Dietary Restriction, Special Occasions)') {\r\n    textarea.value = ''; // Clear the text\r\n  }\r\n\r\n  // Remove the onfocus event to prevent further clearing\r\n  textarea.removeEventListener('focus', clearPlaceholder);\r\n}\r\n\r\n// Add an event listener to reset the placeholder if the textarea is empty when it loses focus\r\ntextarea.addEventListener('blur', function () {\r\n  if (textarea.value.trim() === '') {\r\n    textarea.value = '(e.g. Dietary Restriction, Special Occasions)';\r\n    textarea.addEventListener('focus', clearPlaceholder);\r\n  }\r\n});\r\n\r\n// change color of textarea when user inputs\r\ntextarea.addEventListener('input', function () {\r\n  if (textarea.value.trim() !== '') {\r\n    textarea.classList.add('input');\r\n  } else {\r\n    textarea.classList.remove('input');\r\n  }\r\n});","'use strict';\r\n\r\nconst submitButton = document.getElementById('formSumbitButton');\r\n\r\nconst nameInput = document.getElementById(\"name\");\r\nconst nameError = document.getElementById(\"name-error\");\r\nconst phoneNumberInput = document.getElementById(\"phone\");\r\nconst phoneNumberError = document.getElementById(\"phone-error\");\r\nconst emailInput = document.getElementById(\"email\");\r\nconst emailError = document.getElementById(\"email-error\");\r\nconst guestNumberInput = document.getElementById(\"guest-number\");\r\nconst guestNumberError = document.getElementById(\"guest-number-error\");\r\nconst dateError = document.getElementById(\"date-error\");\r\nconst timeInput = document.getElementById(\"time\");\r\nconst timeError = document.getElementById(\"time-error\");\r\n\r\n// first validation on submit\r\nsubmitButton.addEventListener('click', (event) => {\r\n\r\n    //validate name input\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (nameInput.validity.patternMismatch || trimmedValue.length < 2 || nameInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    } else {\r\n        nameInput.classList.remove('error-input');\r\n        nameError.style.display = \"none\";\r\n    }\r\n\r\n    //validate phone number input\r\n    if (phoneNumberInput.validity.patternMismatch || phoneNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    } else {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //validate email input\r\n    if (emailInput.validity.patternMismatch || emailInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    } else {\r\n        emailInput.classList.remove('error-input');\r\n        emailError.style.display = \"none\";\r\n    }\r\n\r\n    //validate guest number input\r\n    if (guestNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //validate date input\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    // Check if the selected date\r\n    if (selectedDate < minDate || selectedDate === '') {\r\n        event.preventDefault();\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    } else {\r\n        dateInput.classList.remove('error-input');\r\n        dateError.style.display = \"none\";\r\n    }\r\n\r\n    //validate time input\r\n    if (timeInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeError.style.display = \"none\";\r\n    }\r\n\r\n    if (nameError.style.display === \"block\" || phoneNumberError.style.display === \"block\" || emailError.style.display === \"block\" || guestNumberError.style.display === \"block\" || dateError.style.display === \"block\" || timeError.style.display === \"block\") {\r\n        alert(\"Please provide valid input.\");\r\n    }\r\n\r\n    // Add the input event listener after first submission\r\n    nameInput.addEventListener('input', nameInputEvent);\r\n    phoneNumberInput.addEventListener('input', phoneNumberInputEvent);\r\n    emailInput.addEventListener('input', emailInputEvent);\r\n    guestNumberInput.addEventListener('input', guestNumberInputEvent);\r\n    dateInput.addEventListener('input', dateInputEvent);\r\n    timeInput.addEventListener('input', timeInputEvent);\r\n});\r\n\r\nfunction nameInputEvent() {\r\n    const letterPattern = /^[A-Za-z\\.' \\-]+$/;\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (trimmedValue.length > 1 && letterPattern.test(trimmedValue)) {\r\n        nameInput.classList.remove('error-input');\r\n        nameInput.removeAttribute('aria-describedby', 'name-error');\r\n        nameInput.removeAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"none\";\r\n    } else {\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction phoneNumberInputEvent() {\r\n    const numberPattern = /[0-9+]/g;\r\n\r\n    if (phoneNumberInput.value.length > 6 && numberPattern.test(phoneNumberInput.value)) {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberInput.removeAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.removeAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"none\";\r\n    } else {\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction emailInputEvent() {\r\n    const emailPattern = /^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$/;\r\n\r\n    if (emailPattern.test(emailInput.value)) {\r\n        emailInput.classList.remove('error-input');\r\n        emailInput.removeAttribute('aria-describedby', 'email-error');\r\n        emailInput.removeAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"none\";\r\n    } else {\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction guestNumberInputEvent() {\r\n    if (guestNumberInput.value === '') {\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberInput.removeAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.removeAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n}\r\n\r\nfunction dateInputEvent() {\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate >= minDate) {\r\n        dateInput.classList.remove('error-input');\r\n        dateInput.removeAttribute('aria-describedby', 'date-error');\r\n        dateInput.removeAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"none\";\r\n    } else {\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction timeInputEvent() {\r\n    if (timeInput.value === '') {\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeInput.removeAttribute('aria-describedby', 'time-error');\r\n        timeInput.removeAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"none\";\r\n    }\r\n}","'use strict';\r\n\r\nconst confirmationMessage = document.getElementById(\"confirmation-message\");\r\nconst confirmButton = document.querySelector(\".reservation__confirmation-message__bottom-button--confirm\");\r\nconst closeButton = document.querySelector(\".reservation__confirmation-message__close-button\");\r\nconst cancelButton = document.querySelector(\".reservation__confirmation-message__bottom-button--cancel\");\r\n\r\nconst messageInput = document.getElementById(\"message\");\r\n\r\nlet nameValue = document.getElementById(\"name-value\");\r\nlet phoneValue = document.getElementById(\"phone-value\");\r\nlet emailValue = document.getElementById(\"email-value\");\r\nlet guestNumberValue = document.getElementById(\"guest-number-value\");\r\nlet dateValue = document.getElementById(\"date-value\");\r\nlet timeValue = document.getElementById(\"time-value\");\r\nlet messageValue = document.getElementById(\"optional-message-value\");\r\nlet messageTimer = document.getElementById(\"message-timer\");\r\n\r\n// Open the modal\r\nfunction openModal(event) {\r\n    event.preventDefault(); // Prevent default form submission\r\n    confirmationMessage.style.display = \"flex\";\r\n    confirmationMessage.setAttribute('aria-modal', 'true');\r\n    nameValue.textContent = nameInput.value;\r\n    phoneValue.textContent = phoneNumberInput.value;\r\n    emailValue.textContent = emailInput.value;\r\n    guestNumberValue.textContent = guestNumberInput.value;\r\n    dateValue.textContent = dateInput.value;\r\n    timeValue.textContent = timeInput.options[timeInput.selectedIndex].text\r\n    if (messageInput.value === '' || messageInput.value === '(e.g. Dietary Restriction, Special Occasions)') {\r\n        messageValue.textContent = \"N/A\";\r\n    } else {\r\n        // Encode the message input value to prevent HTML injection\r\n        const encodedMessage = encodeHTML(messageInput.value);\r\n        messageValue.innerHTML = encodedMessage;\r\n    }\r\n}\r\n\r\n// Function to encode HTML entities\r\nfunction encodeHTML(text) {\r\n    return text.replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/(\\r\\n|\\n|\\r)/g, '<br>'); // Preserve line breaks\r\n}\r\n\r\n// Submit form upon confirmation of information\r\nconfirmButton.addEventListener(\"click\", formSubmitted);\r\n\r\nfunction formSubmitted() {\r\n    // Parse the selected date and time values from the form\r\n    const selectedDateString = dateValue.innerText.trim();\r\n    const selectedDateComponents = selectedDateString.split('-');\r\n    const selectedYear = parseInt(selectedDateComponents[0]);\r\n    const selectedMonth = parseInt(selectedDateComponents[1]);\r\n    const selectedDate = parseInt(selectedDateComponents[2]);\r\n\r\n    const benchmarkDateComponents = today.split('-');\r\n    const benchmarkYear = parseInt(benchmarkDateComponents[0]);\r\n    const benchmarkMonth = parseInt(benchmarkDateComponents[1]);\r\n    const benchmarkDate = parseInt(benchmarkDateComponents[2]);\r\n    // console.log(\"selected date: \" + selectedDate);\r\n    // console.log(\"benchmark date: \" + benchmarkDate);\r\n\r\n    let currentTime = new Date();\r\n    let currentHour = currentTime.getHours();\r\n    let currentMinute = currentTime.getMinutes();\r\n\r\n\r\n    const timeString = timeValue.innerText.trim(); // Get the time string and remove leading/trailing spaces\r\n    const timeComponents = timeString.split(':');\r\n    const selectedHour = parseInt(timeComponents[0]);\r\n    const selectedMinute = parseInt(timeComponents[1]);\r\n\r\n    // console.log(\"selected time: \" + timeString);\r\n    // console.log(\"current hour: \" + currentHour);\r\n    // console.log(\"current minute: \" + currentMinute);\r\n\r\n    // Check if the selected date is before today's date or if it's today but the selected time has passed\r\n    if (selectedYear < benchmarkYear || selectedMonth < benchmarkMonth || selectedDate < benchmarkDate || (selectedDate === benchmarkDate && (selectedHour < currentHour + 1 || (selectedHour === currentHour + 1 && selectedMinute < currentMinute)))) {\r\n        alert(\"Please select another available day or time slot.\");\r\n        closeMessage();\r\n        generateDefaultDate();\r\n        generateTimeOptions();\r\n    } else {\r\n        // Trigger form submission\r\n        document.querySelector('form').submit();\r\n        alert(\"Thanks for choosing our restaurant!\\nWe will contact you shortly to confirm your reservation.\");\r\n\r\n        // Hide the following 2 lines if the PHP file is ready\r\n        closeMessage();\r\n        document.getElementById(\"myForm\").reset();\r\n    }\r\n}\r\n\r\n\r\n// Add an event listener to the close button and cancel button to close the message\r\ncloseButton.addEventListener(\"click\", closeMessage);\r\n\r\ncancelButton.addEventListener(\"click\", closeMessage);\r\n\r\nfunction closeMessage() {\r\n    confirmationMessage.style.display = \"none\";\r\n    confirmationMessage.setAttribute('aria-modal', 'false');\r\n}\r\n\r\nwindow.addEventListener('keydown', closeMessageByEsc);\r\n\r\nfunction closeMessageByEsc(event) {\r\n    if (event.keyCode == 27) { // Check if the key pressed is 'esc'\r\n        closeMessage();\r\n    }\r\n}"]}