{"version":3,"sources":["footer.js","navbar.js","menu/carousel.js","menu/largeMenu.js","menu/smallMenu.js","reservationForm/formdefaultValues.js","reservationForm/formSelect.js","reservationForm/formTextarea.js","reservationForm/formValidation.js","reservationForm/popUpMessage.js"],"names":["copyrightDate","Date","copyrightYear","getFullYear","document","getElementById","textContent","navBar","navbarToggler","querySelector","navList","navLinks","querySelectorAll","findusLink","home","togglerAriaExpanded","setAttribute","togglerAriaNotExpanded","togglerAriaRemoved","removeAttribute","navlinkAriaHidden","i","length","navlinkAriaNotHidden","navlinkAriaRemoved","closeNavbar","classList","contains","style","maxHeight","remove","closeNavbarByTab","event","keyCode","which","shiftKey","addEventListener","toggle","scrollHeight","stopPropagation","prevScrollPos","window","scrollY","adjustHeroImagePadding","screenWidth","innerWidth","paddingTop","checkScreenSize","onscroll","currentScrollPos","navbar","top","slideIndex","showSlides","n","slides","getElementsByClassName","dots","className","replace","autoplay","timer","setInterval","resetTimer","clearInterval","plusSlides","currentSlide","openMenu","menuName","menutabs","menus","currentTarget","add","display","click","menuAccordion","openMenuPanel","menuPanel","nextElementSibling","border","this","getAttribute","handleResize","dateOfToday","tdyDay","getDay","tdyDate","getDate","tdyMth","getMonth","tdyYear","tdyHour","getHours","tdyMinute","getMinutes","today","dateOfTmr","setDate","tmrDate","tmrMth","tmrYear","tomorrow","dateInput","generateDefaultDate","value","min","pad","number","isWithinOpeningHours","day","hour","minute","currentTime","start","end","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","generateTimeOptions","now","days","currentHour","currentMinute","timeSelect","timeFirstOption","innerHTML","appendChild","optionText","option","Option","updateAtSpecificTimes","selectGuestNumberElement","selectTimeElement","optionSelected","selectedElement","textarea","clearPlaceholder","trim","removeEventListener","submitButton","nameInput","nameError","phoneNumberInput","phoneNumberError","emailInput","emailError","guestNumberInput","guestNumberError","dateError","timeInput","timeError","nameInputEvent","trimmedValue","test","phoneNumberInputEvent","emailInputEvent","guestNumberInputEvent","dateInputEvent","timeInputEvent","validity","patternMismatch","preventDefault","selectedDate","alert","confirmationMessage","confirmButton","closeButton","cancelButton","messageInput","nameValue","phoneValue","emailValue","guestNumberValue","dateValue","timeValue","messageValue","messageTimer","openModal","options","selectedIndex","text","encodedMessage","encodeHTML","formSubmitted","selectedDateComponents","innerText","split","selectedYear","parseInt","selectedMonth","benchmarkDateComponents","benchmarkYear","benchmarkMonth","benchmarkDate","timeComponents","selectedHour","selectedMinute","closeMessage","submit","reset","closeMessageByEsc"],"mappings":"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","file":"non-critical-modern-script.min.js","sourcesContent":["'use strict';\r\n\r\n// automatically update the year for the copyright in footer\r\nconst copyrightDate = new Date();\r\nlet copyrightYear = copyrightDate.getFullYear();\r\ndocument.getElementById(\"year\").textContent = copyrightYear;\r\n","'use strict';\r\n\r\n// Get the elements inside the navbar and the home section\r\nconst navBar = document.getElementById(\"navbar\");\r\nconst navbarToggler = document.querySelector('.navbar__toggler');\r\nconst navList = document.querySelector('.navbar__collapse');\r\nconst navLinks = document.querySelectorAll('.navbar__nav-link');\r\nconst findusLink = document.getElementById('findus-link');\r\nconst home = document.getElementById(\"home\");\r\n\r\n\r\n// Functions to set / remove the aria attribute(s) of toggler (aria-expanded)\r\nfunction togglerAriaExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'true');\r\n}\r\n\r\nfunction togglerAriaNotExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'false');\r\n}\r\n\r\nfunction togglerAriaRemoved() {\r\n  navbarToggler.removeAttribute('aria-expanded', 'true');\r\n  navbarToggler.removeAttribute('aria-expanded', 'false');\r\n}\r\n\r\n\r\n// Functions to set / remove the aria attributes of navlinks (tabindex and aria-hidden)\r\nfunction navlinkAriaHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '-1');\r\n    navLinks[i].setAttribute('aria-hidden', 'true');\r\n  }\r\n}\r\n\r\nfunction navlinkAriaNotHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '0');\r\n    navLinks[i].setAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\nfunction navlinkAriaRemoved() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].removeAttribute('tabindex', '0');\r\n    navLinks[i].removeAttribute('tabindex', '-1');\r\n    navLinks[i].removeAttribute('aria-hidden', 'true');\r\n    navLinks[i].removeAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\n\r\n// Function to close the collapsible navbar\r\nfunction closeNavbar() {\r\n  if (navList.classList.contains('is-opened')) {\r\n    navList.style.maxHeight = null;\r\n    navList.classList.remove('is-opened');\r\n    togglerAriaNotExpanded();\r\n    navlinkAriaHidden();\r\n  }\r\n}\r\n\r\n\r\n// Show or hide the collapsible navbar when toggler is clicked\r\nnavbarToggler.addEventListener('click', (event) => {\r\n  // Toggle the visibility of navList\r\n  navList.classList.toggle('is-opened');\r\n  if (navList.style.maxHeight) {\r\n    // If navList is open, close it\r\n    navList.style.maxHeight = null;\r\n    // Set the toggler NOT to be aria-expanded\r\n    togglerAriaNotExpanded();\r\n    // Set the navlinks to be aria-hidden and tab-index = -1\r\n    navlinkAriaHidden();\r\n  } else {\r\n    // If navList is closed, open it\r\n    navList.style.maxHeight = navList.scrollHeight + \"px\";\r\n    // Set the toggler to be aria-expanded\r\n    togglerAriaExpanded();\r\n    // Set the navlinks NOT to be aria-hidden and tab-index = 0\r\n    navlinkAriaNotHidden();\r\n  }\r\n  event.stopPropagation();\r\n});\r\n\r\n\r\n// Hide the collapsible navbar when the nav link is clicked \r\n// or when the user clicks anywhere outside of the navbar\r\ndocument.addEventListener('click', () => {\r\n  closeNavbar();\r\n});\r\n\r\n\r\n// For keyboard user, close the navbar if the key \"TAB\" is pressed\r\n// let the navbar stay open if the key \"SHIFT\" + \"TAB\" are pressed\r\nfunction closeNavbarByTab(event) {\r\n  const keyCode = event.keyCode || event.which;\r\n  // Check if the key pressed is 'tab'\r\n  if (event.shiftKey && event.keyCode == 9) {\r\n    // act normally if pressing \"shift\" + \"tab\" (going backwards)\r\n  } else if (keyCode === 9) {\r\n    closeNavbar();\r\n  }\r\n}\r\n\r\nfindusLink.addEventListener('keydown', closeNavbarByTab);\r\n\r\n\r\n// On Scroll\r\n// On screen wider than 900px, when the user scrolls down, hide the navbar. \r\n// When the user scrolls up, show the navbar \r\nlet prevScrollPos = window.scrollY;\r\n\r\nwindow.onscroll = function () {\r\n  let currentScrollPos = window.scrollY;\r\n  let screenWidth = window.innerWidth;\r\n\r\n  if (screenWidth > 900) {\r\n    if (prevScrollPos > currentScrollPos) {\r\n      navbar.style.top = \"0\";\r\n    } else {\r\n      navbar.style.top = \"-500px\";\r\n    }\r\n  }\r\n\r\n  prevScrollPos = currentScrollPos;\r\n}\r\n\r\n\r\n// Function to adjust the padding top of the hero image according to the screen size\r\nfunction adjustHeroImagePadding() {\r\n  // Update the screenWidth variable with the current window width\r\n  let screenWidth = window.innerWidth;\r\n\r\n  // Check the screenWidth and adjust value of paddingTop accordingly\r\n  if (screenWidth <= 350 || (screenWidth <= 600 && screenWidth > 450)) {\r\n    home.style.paddingTop = \"70px\";\r\n  } else {\r\n    home.style.paddingTop = \"0px\";\r\n  }\r\n}\r\n\r\n\r\n// Function to check the screen size and assign aria attributes to HTML elements\r\n// For use when onload and onresize\r\nfunction checkScreenSize() {\r\n  let screenWidth = window.innerWidth;\r\n  // On small screen, set the toggler to be aria-expanded,\r\n  // set the navlinks to be aria-hidden and tab-index = -1\r\n  if (screenWidth <= 576) {\r\n    togglerAriaNotExpanded();\r\n    navlinkAriaHidden();\r\n  }\r\n  // On large screen, remove the aria-expanded attribute of the toggler,\r\n  // remove aria-hidden and tab-index attributes of navlinks\r\n  else {\r\n    togglerAriaRemoved();\r\n    navlinkAriaRemoved();\r\n  }\r\n}\r\n\r\n\r\n// On Screen resize\r\n// 1. Close the navbar\r\n// 2. Check the screen size and assign appropriate aria attributes to HTML elements\r\n// 3. Check if needed to adjust the padding-top value of hero-image\r\nwindow.addEventListener('resize', function () {\r\n  closeNavbar();\r\n  checkScreenSize();\r\n  adjustHeroImagePadding();\r\n});\r\n\r\n\r\n//Check the screen size onload and assign appropriate aria attributes to HTML elements\r\nwindow.addEventListener('load', checkScreenSize);","'use strict';\r\n\r\n//carousel for small & medium menu\r\nlet slideIndex = 1;\r\nshowSlides(slideIndex);\r\n\r\nfunction showSlides(n) {\r\n  let i;\r\n  let slides = document.getElementsByClassName(\"carousel__slide\");\r\n  let dots = document.getElementsByClassName(\"carousel__dot\");\r\n  if (n > slides.length || slideIndex > slides.length) { slideIndex = 1 }\r\n  if (n < 1) { slideIndex = slides.length }\r\n  for (i = 0; i < slides.length; i++) {\r\n    slides[i].className = slides[i].className.replace(\" current-slide\", \"\");\r\n  }\r\n  for (i = 0; i < dots.length; i++) {\r\n    dots[i].className = dots[i].className.replace(\" current-dot\", \"\");\r\n    dots[i].setAttribute('aria-current', 'false');\r\n  }\r\n  slides[slideIndex - 1].className += \" current-slide\";\r\n  dots[slideIndex - 1].className += \" current-dot\";\r\n  dots[slideIndex - 1].setAttribute('aria-current', 'true');\r\n}\r\n\r\nfunction autoplay() {\r\n  slideIndex++;\r\n  showSlides();\r\n}\r\n\r\nlet timer = setInterval(autoplay, 3500)\r\n\r\nfunction resetTimer() {\r\n  clearInterval(timer);\r\n  timer = setInterval(autoplay, 3500);\r\n}\r\n\r\nfunction plusSlides(n) {\r\n  showSlides(slideIndex += n);\r\n  resetTimer();\r\n}\r\n\r\nfunction currentSlide(n) {\r\n  showSlides(slideIndex = n);\r\n  resetTimer();\r\n}","'use strict';\r\n\r\nfunction openMenu(event, menuName) {\r\n  let i, menutabs, menus;\r\n\r\n  menutabs = document.getElementsByClassName(\"menu__tab\");\r\n  for (i = 0; i < menutabs.length; i++) {\r\n    menutabs[i].classList.remove(\"menu__tab--active\");\r\n    menutabs[i].setAttribute('aria-selected', 'false');\r\n  }\r\n  event.currentTarget.classList.add(\"menu__tab--active\");\r\n  event.currentTarget.setAttribute('aria-selected', 'true');\r\n\r\n  menus = document.getElementsByClassName(\"menu__panel\");\r\n  for (i = 0; i < menus.length; i++) {\r\n    menus[i].style.display = \"none\";\r\n  }\r\n  document.getElementById(menuName).style.display = \"grid\";\r\n}\r\n\r\ndocument.getElementById(\"pasta-tab\").click();","'use strict';\r\n\r\nconst menuAccordion = document.getElementsByClassName(\"accordion__button\");\r\n\r\n// open the accordion when the website is loaded\r\nwindow.addEventListener('load', openMenuPanel)\r\n\r\nfunction openMenuPanel() {\r\n  for (let i = 0; i < menuAccordion.length; i++) {\r\n    if (menuAccordion[i].classList.contains(\"accordion__button--active\")) {\r\n      menuAccordion[i].setAttribute('aria-expanded', 'true');\r\n      let menuPanel = menuAccordion[i].nextElementSibling;\r\n      menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n      menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n      menuPanel.classList.add(\"accordion__panel--open\");\r\n      menuPanel.setAttribute('role', 'region');\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// open or close the accordion through clicks\r\nfor (let i = 0; i < menuAccordion.length; i++) {\r\n  menuAccordion[i].addEventListener(\"click\", function () {\r\n    this.classList.toggle(\"accordion__button--active\");\r\n\r\n    // toggle aria-expanded value\r\n    let expanded = this.getAttribute('aria-expanded');\r\n    if (expanded === 'true') {\r\n      this.setAttribute('aria-expanded', 'false');\r\n    } else {\r\n      this.setAttribute('aria-expanded', 'true');\r\n    };\r\n\r\n    // toggle open or close panel, and aria-hidden value\r\n    let menuPanel = this.nextElementSibling;\r\n    if (menuPanel.classList.contains(\"accordion__panel--open\")) {\r\n      menuPanel.style.maxHeight = null;\r\n      menuPanel.classList.remove(\"accordion__panel--open\");\r\n      menuPanel.style.border = \"none\";\r\n      menuPanel.removeAttribute('role', 'region');\r\n    } else {\r\n      menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n      menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n      menuPanel.classList.add(\"accordion__panel--open\");\r\n      menuPanel.setAttribute('role', 'region');\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// when the screen re-sizes, open the accordion\r\nwindow.addEventListener('resize', handleResize);\r\n\r\nfunction handleResize() {\r\n  let screenWidth = window.innerWidth;\r\n  if (screenWidth <= 450) {\r\n    openMenuPanel();\r\n  }\r\n}","'use strict';\r\n\r\n// default date and time values in reservation form\r\n// get date of today\r\nconst dateOfToday = new Date();\r\nconst tdyDay = dateOfToday.getDay();\r\nlet tdyDate = dateOfToday.getDate();\r\nlet tdyMth = dateOfToday.getMonth() + 1;\r\nconst tdyYear = dateOfToday.getFullYear();\r\nconst tdyHour = dateOfToday.getHours();\r\nconst tdyMinute = dateOfToday.getMinutes();\r\n\r\n//make the date and/or month in 2-digit format\r\nif (tdyDate < 10) {\r\n  tdyDate = \"0\" + tdyDate;\r\n}\r\nif (tdyMth < 10) {\r\n  tdyMth = \"0\" + tdyMth;\r\n}\r\n\r\nconst today = tdyYear + \"-\" + tdyMth + \"-\" + tdyDate;\r\n\r\n// get date of tomorrow\r\nconst dateOfTmr = new Date(new Date().setDate(dateOfToday.getDate() + 1));\r\nlet tmrDate = dateOfTmr.getDate();\r\nlet tmrMth = dateOfTmr.getMonth() + 1;\r\nconst tmrYear = dateOfTmr.getFullYear();\r\n\r\n//make the date and/or month in 2-digit format\r\nif (tmrDate < 10) {\r\n  tmrDate = \"0\" + tmrDate;\r\n}\r\nif (tmrMth < 10) {\r\n  tmrMth = \"0\" + tmrMth;\r\n}\r\n\r\nconst tomorrow = tmrYear + \"-\" + tmrMth + \"-\" + tmrDate;\r\n\r\n\r\n// date picker - set default date (.value) and prevent choosing invalid dates (.min)\r\nconst dateInput = document.getElementById('date');\r\n\r\nfunction generateDefaultDate() {\r\n  switch (tdyDay) {\r\n    case 0: //Sunday\r\n      if ((tdyHour > 15) || (tdyHour === 15 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n      break;\r\n    case 5:\r\n    case 6: //Friday & Saturday\r\n      if ((tdyHour > 19) || (tdyHour === 19 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n      break;\r\n    default: //Monday to Thursday\r\n      if ((tdyHour > 18) || (tdyHour === 18 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n  }\r\n}\r\n\r\n// Generate default date when the page loads\r\ngenerateDefaultDate();\r\n\r\ndateInput.addEventListener('input', generateTimeOptions);\r\n\r\n\r\n// time picker - set default time\r\n// Function to pad single digit numbers with leading zero\r\nfunction pad(number) {\r\n  return (number < 10 ? '0' : '') + number;\r\n}\r\n\r\n// Function to check if current time is within restaurant opening hours\r\nfunction isWithinOpeningHours(day, hour, minute) {\r\n  const openingHours = {\r\n    Sunday: { start: 1200, end: 1700 },\r\n    Monday: { start: 1200, end: 2000 },\r\n    Tuesday: { start: 1200, end: 2000 },\r\n    Wednesday: { start: 1200, end: 2000 },\r\n    Thursday: { start: 1200, end: 2000 },\r\n    Friday: { start: 1200, end: 2100 },\r\n    Saturday: { start: 1200, end: 2100 }\r\n  };\r\n\r\n  const currentTime = hour * 100 + minute;\r\n  const { start, end } = openingHours[day];\r\n\r\n  return currentTime >= start && currentTime <= end;\r\n}\r\n\r\n// Function to generate time options based on current day and time\r\nfunction generateTimeOptions() {\r\n  const now = new Date();\r\n  const day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][now.getDay()];\r\n  const days = now.getDay();\r\n  const currentHour = now.getHours();\r\n  const currentMinute = now.getMinutes();\r\n  const timeSelect = document.getElementById('time');\r\n  const timeFirstOption = document.getElementById('time-first-option');\r\n\r\n  // Clear existing options (if any)\r\n  timeSelect.innerHTML = '';\r\n\r\n  // Add initial option\r\n  timeSelect.appendChild(timeFirstOption);\r\n\r\n  if (dateInput.value === today) {\r\n    switch (days) {\r\n      case 0:\r\n        for (let hour = 12; hour <= 16; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 4:15pm, 4:30pm, and 4:45pm\r\n            if (hour === 16 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        for (let hour = 12; hour <= 20; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 8:15pm, 8:30pm, and 8:45pm\r\n            if (hour === 20 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      default: //Monday to Thursday\r\n        for (let hour = 12; hour <= 19; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 7:15pm, 7:30pm, and 7:45pm\r\n            if (hour === 19 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n  else if (dateInput.value > today) {\r\n    const selectedDate = new Date(dateInput.value);\r\n    const chosenDay = selectedDate.getDay();\r\n    switch (chosenDay) {\r\n      case 0:\r\n        for (let hour = 12; hour <= 16; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 4:15pm, 4:30pm, and 4:45pm\r\n            if (hour === 16 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        for (let hour = 12; hour <= 20; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 8:15pm, 8:30pm, and 8:45pm\r\n            if (hour === 20 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n        break;\r\n      default: //Monday to Thursday\r\n        for (let hour = 12; hour <= 19; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 7:15pm, 7:30pm, and 7:45pm\r\n            if (hour === 19 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\n// Generate time options when the page loads\r\ngenerateTimeOptions();\r\n\r\n// update the default date and time at certain interval\r\nfunction updateAtSpecificTimes() {\r\n  let currentTime = new Date();\r\n  let currentHour = currentTime.getHours();\r\n  let currentMinute = currentTime.getMinutes();\r\n\r\n  // Check if the current time is between 11am and 8pm\r\n  if (currentHour >= 11 && currentHour < 20) {\r\n    // Check if the current minute is 01, 16, 31, or 46\r\n    if (currentMinute === 1 || currentMinute === 16 || currentMinute === 31 || currentMinute === 46) {\r\n      generateDefaultDate();\r\n      generateTimeOptions();\r\n    }\r\n  }\r\n}\r\n\r\nsetInterval(updateAtSpecificTimes, 60 * 1000);","'use strict';\r\n\r\nlet selectGuestNumberElement = document.getElementById('guest-number');\r\nlet selectTimeElement = document.getElementById('time');\r\n\r\nfunction optionSelected(selectedElement) {\r\n    // Check if a valid option (not the disabled one) is selected\r\n    if (selectedElement.value !== \"\") {\r\n        // If a valid option is selected, add the 'valid' class to change its color\r\n        selectedElement.classList.add('valid');\r\n    } else {\r\n        // If the disabled option is selected, remove the 'valid' class to revert to the default color\r\n        selectedElement.classList.remove('valid');\r\n    }\r\n}\r\n\r\nselectGuestNumberElement.addEventListener('change', function () {\r\n    optionSelected(selectGuestNumberElement);\r\n});\r\n\r\nselectTimeElement.addEventListener('change', function () {\r\n    optionSelected(selectTimeElement);\r\n});","'use strict';\r\n\r\n// textarea in reservation form\r\nconst textarea = document.getElementById('message');\r\n\r\nfunction clearPlaceholder() {\r\n  // Check if the current value is equal to the placeholder text\r\n  if (textarea.value.trim() === '(e.g. Dietary Restriction, Special Occasions)') {\r\n    textarea.value = ''; // Clear the text\r\n  }\r\n\r\n  // Remove the onfocus event to prevent further clearing\r\n  textarea.removeEventListener('focus', clearPlaceholder);\r\n}\r\n\r\n// Add an event listener to reset the placeholder if the textarea is empty when it loses focus\r\ntextarea.addEventListener('blur', function () {\r\n  if (textarea.value.trim() === '') {\r\n    textarea.value = '(e.g. Dietary Restriction, Special Occasions)';\r\n    textarea.addEventListener('focus', clearPlaceholder);\r\n  }\r\n});\r\n\r\n// change color of textarea when user inputs\r\ntextarea.addEventListener('input', function () {\r\n  if (textarea.value.trim() !== '') {\r\n    textarea.classList.add('input');\r\n  } else {\r\n    textarea.classList.remove('input');\r\n  }\r\n});","'use strict';\r\n\r\nconst submitButton = document.getElementById('formSumbitButton');\r\n\r\nconst nameInput = document.getElementById(\"name\");\r\nconst nameError = document.getElementById(\"name-error\");\r\nconst phoneNumberInput = document.getElementById(\"phone\");\r\nconst phoneNumberError = document.getElementById(\"phone-error\");\r\nconst emailInput = document.getElementById(\"email\");\r\nconst emailError = document.getElementById(\"email-error\");\r\nconst guestNumberInput = document.getElementById(\"guest-number\");\r\nconst guestNumberError = document.getElementById(\"guest-number-error\");\r\nconst dateError = document.getElementById(\"date-error\");\r\nconst timeInput = document.getElementById(\"time\");\r\nconst timeError = document.getElementById(\"time-error\");\r\n\r\n// first validation on submit\r\nsubmitButton.addEventListener('click', (event) => {\r\n\r\n    //validate name input\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (nameInput.validity.patternMismatch || trimmedValue.length < 2 || nameInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    } else {\r\n        nameInput.classList.remove('error-input');\r\n        nameError.style.display = \"none\";\r\n    }\r\n\r\n    //validate phone number input\r\n    if (phoneNumberInput.validity.patternMismatch || phoneNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    } else {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //validate email input\r\n    if (emailInput.validity.patternMismatch || emailInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    } else {\r\n        emailInput.classList.remove('error-input');\r\n        emailError.style.display = \"none\";\r\n    }\r\n\r\n    //validate guest number input\r\n    if (guestNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //validate date input\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    // Check if the selected date\r\n    if (selectedDate < minDate || selectedDate === '') {\r\n        event.preventDefault();\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    } else {\r\n        dateInput.classList.remove('error-input');\r\n        dateError.style.display = \"none\";\r\n    }\r\n\r\n    //validate time input\r\n    if (timeInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeError.style.display = \"none\";\r\n    }\r\n\r\n    if (nameError.style.display === \"block\" || phoneNumberError.style.display === \"block\" || emailError.style.display === \"block\" || guestNumberError.style.display === \"block\" || dateError.style.display === \"block\" || timeError.style.display === \"block\") {\r\n        alert(\"Please provide valid input.\");\r\n    }\r\n\r\n    // Add the input event listener after first submission\r\n    nameInput.addEventListener('input', nameInputEvent);\r\n    phoneNumberInput.addEventListener('input', phoneNumberInputEvent);\r\n    emailInput.addEventListener('input', emailInputEvent);\r\n    guestNumberInput.addEventListener('input', guestNumberInputEvent);\r\n    dateInput.addEventListener('input', dateInputEvent);\r\n    timeInput.addEventListener('input', timeInputEvent);\r\n});\r\n\r\nfunction nameInputEvent() {\r\n    const letterPattern = /^[A-Za-z\\.' \\-]+$/;\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (trimmedValue.length > 1 && letterPattern.test(trimmedValue)) {\r\n        nameInput.classList.remove('error-input');\r\n        nameInput.removeAttribute('aria-describedby', 'name-error');\r\n        nameInput.removeAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"none\";\r\n    } else {\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction phoneNumberInputEvent() {\r\n    const numberPattern = /[0-9+]/g;\r\n\r\n    if (phoneNumberInput.value.length > 6 && numberPattern.test(phoneNumberInput.value)) {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberInput.removeAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.removeAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"none\";\r\n    } else {\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction emailInputEvent() {\r\n    const emailPattern = /^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$/;\r\n\r\n    if (emailPattern.test(emailInput.value)) {\r\n        emailInput.classList.remove('error-input');\r\n        emailInput.removeAttribute('aria-describedby', 'email-error');\r\n        emailInput.removeAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"none\";\r\n    } else {\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction guestNumberInputEvent() {\r\n    if (guestNumberInput.value === '') {\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberInput.removeAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.removeAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n}\r\n\r\nfunction dateInputEvent() {\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate >= minDate) {\r\n        dateInput.classList.remove('error-input');\r\n        dateInput.removeAttribute('aria-describedby', 'date-error');\r\n        dateInput.removeAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"none\";\r\n    } else {\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction timeInputEvent() {\r\n    if (timeInput.value === '') {\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeInput.removeAttribute('aria-describedby', 'time-error');\r\n        timeInput.removeAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"none\";\r\n    }\r\n}","'use strict';\r\n\r\nconst confirmationMessage = document.getElementById(\"confirmation-message\");\r\nconst confirmButton = document.querySelector(\".confirmation-message__bottom-button--confirm\");\r\nconst closeButton = document.querySelector(\".confirmation-message__close-button\");\r\nconst cancelButton = document.querySelector(\".confirmation-message__bottom-button--cancel\");\r\n\r\nconst messageInput = document.getElementById(\"message\");\r\n\r\nlet nameValue = document.getElementById(\"name-value\");\r\nlet phoneValue = document.getElementById(\"phone-value\");\r\nlet emailValue = document.getElementById(\"email-value\");\r\nlet guestNumberValue = document.getElementById(\"guest-number-value\");\r\nlet dateValue = document.getElementById(\"date-value\");\r\nlet timeValue = document.getElementById(\"time-value\");\r\nlet messageValue = document.getElementById(\"optional-message-value\");\r\nlet messageTimer = document.getElementById(\"message-timer\");\r\n\r\n// Open the modal\r\nfunction openModal(event) {\r\n    event.preventDefault(); // Prevent default form submission\r\n    confirmationMessage.style.display = \"flex\";\r\n    confirmationMessage.setAttribute('aria-modal', 'true');\r\n\r\n    // Copy the input value or options of the form to the confirmation message\r\n    nameValue.textContent = nameInput.value;\r\n    phoneValue.textContent = phoneNumberInput.value;\r\n    emailValue.textContent = emailInput.value;\r\n    guestNumberValue.textContent = guestNumberInput.value;\r\n    dateValue.textContent = dateInput.value;\r\n    timeValue.textContent = timeInput.options[timeInput.selectedIndex].text\r\n\r\n    // If the message input value is blank or default value,\r\n    // the corresponding text in the confirmation message will be N/A\r\n    if (messageInput.value === '' || messageInput.value === '(e.g. Dietary Restriction, Special Occasions)') {\r\n        messageValue.textContent = \"N/A\";\r\n    } else {\r\n        // Encode the message input value to prevent HTML injection\r\n        const encodedMessage = encodeHTML(messageInput.value);\r\n        messageValue.innerHTML = encodedMessage;\r\n    }\r\n}\r\n\r\n// Function to encode HTML entities\r\nfunction encodeHTML(text) {\r\n    return text.replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/(\\r\\n|\\n|\\r)/g, '<br>'); // Preserve line breaks\r\n}\r\n\r\n// Submit form upon confirmation of information\r\nconfirmButton.addEventListener(\"click\", formSubmitted);\r\n\r\nfunction formSubmitted() {\r\n    // Parse the selected date and time values from the form\r\n    const selectedDateString = dateValue.innerText.trim();\r\n    const selectedDateComponents = selectedDateString.split('-');\r\n    const selectedYear = parseInt(selectedDateComponents[0]);\r\n    const selectedMonth = parseInt(selectedDateComponents[1]);\r\n    const selectedDate = parseInt(selectedDateComponents[2]);\r\n\r\n    const benchmarkDateComponents = today.split('-');\r\n    const benchmarkYear = parseInt(benchmarkDateComponents[0]);\r\n    const benchmarkMonth = parseInt(benchmarkDateComponents[1]);\r\n    const benchmarkDate = parseInt(benchmarkDateComponents[2]);\r\n    // console.log(\"selected date: \" + selectedDate);\r\n    // console.log(\"benchmark date: \" + benchmarkDate);\r\n\r\n    let currentTime = new Date();\r\n    let currentHour = currentTime.getHours();\r\n    let currentMinute = currentTime.getMinutes();\r\n\r\n\r\n    const timeString = timeValue.innerText.trim(); // Get the time string and remove leading/trailing spaces\r\n    const timeComponents = timeString.split(':');\r\n    const selectedHour = parseInt(timeComponents[0]);\r\n    const selectedMinute = parseInt(timeComponents[1]);\r\n\r\n    // console.log(\"selected time: \" + timeString);\r\n    // console.log(\"current hour: \" + currentHour);\r\n    // console.log(\"current minute: \" + currentMinute);\r\n\r\n    // Check if the selected date is before today's date or if it's today but the selected time has passed\r\n    if (selectedYear < benchmarkYear || selectedMonth < benchmarkMonth || selectedDate < benchmarkDate || (selectedDate === benchmarkDate && (selectedHour < currentHour + 1 || (selectedHour === currentHour + 1 && selectedMinute < currentMinute)))) {\r\n        alert(\"Please select another available day or time slot.\");\r\n        closeMessage();\r\n        generateDefaultDate();\r\n        generateTimeOptions();\r\n    } else {\r\n        // Trigger form submission\r\n        document.querySelector('form').submit();\r\n        alert(\"Thanks for choosing our restaurant!\\nWe will contact you shortly to confirm your reservation.\");\r\n\r\n        // Hide the following 2 lines if the PHP file is ready\r\n        closeMessage();\r\n        document.getElementById(\"myForm\").reset();\r\n    }\r\n}\r\n\r\n\r\n// Add an event listener to the close button and cancel button to close the message\r\ncloseButton.addEventListener(\"click\", closeMessage);\r\n\r\ncancelButton.addEventListener(\"click\", closeMessage);\r\n\r\n// Function to close the message\r\nfunction closeMessage() {\r\n    confirmationMessage.style.display = \"none\";\r\n    confirmationMessage.setAttribute('aria-modal', 'false');\r\n}\r\n\r\n// Add an event listener to the window to close the message\r\nwindow.addEventListener('keydown', closeMessageByEsc);\r\n\r\n// Function to close the message by hitting the \"ESC\" key\r\nfunction closeMessageByEsc(event) {\r\n    if (event.keyCode == 27) { // Check if the key pressed is 'esc'\r\n        closeMessage();\r\n    }\r\n}"]}