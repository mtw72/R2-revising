{"version":3,"sources":["navbar.js","accordion.js","carousel.js","menu.js","formVariables.js","formDefaultDate.js","formDefaultTime.js","formSelect.js","formValidation.js","popUpMessage.js","formTextarea.js","footer.js"],"names":["navbar","document","getElementById","navbarToggler","querySelector","navList","navLinks","querySelectorAll","findusLink","home","addEventListener","event","classList","toggle","style","maxHeight","togglerAriaNotExpanded","navLinkAriaHidden","scrollHeight","togglerAriaExpanded","navLinkAriaNotHidden","stopPropagation","closeNavbar","shiftKey","key","window","checkScreenSize","debounce","adjustHeroImagePadding","prevScrollPos","scrollY","func","wait","timeout","_this","this","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","setAttribute","togglerAriaRemoved","removeAttribute","i","navLinkAriaRemoved","contains","remove","screenWidth","innerWidth","paddingTop","currentScrollPos","top","menuAccordion","getElementsByClassName","handlePanelState","button","isActive","isSmallScreen","menuPanel","nextElementSibling","add","border","openOrClosePanels","memo","dynamicFrame","slides","playButton","pauseButton","progressContainers","currentProgressContainer","progressBars","currentProgressBar","finishedProgressBars","bar1","bar2","bar3","time","timeInterval","width","isPaused","slideIndex","progressStart","frame","setInterval","clearInterval","showSlides","checkDotColor","n","progressPause","console","log","progressResume","plusSlides","currentSlide","openMenu","menuName","menutabs","menus","currentTarget","display","click","reservationForm","submitButton","confirmationMessage","closeButton","confirmButton","cancelButton","nameInput","phoneNumberInput","emailInput","guestNumberInput","dateInput","timeInput","timeFirstOption","messageInput","placeholderText","nameError","phoneNumberError","emailError","guestNumberError","dateError","timeError","nameValue","phoneValue","emailValue","guestNumberValue","dateValue","timeValue","messageValue","dateOfToday","Date","today","getFormattedDate","dateOfTmr","setDate","getDate","tomorrow","pad","number","date","dd","mm","getMonth","getFullYear","generateDefaultDate","tdyDay","getDay","tdyHour","getHours","tdyMinute","getMinutes","isAfterCutoff","cutoffHour","setDefaultDate","value","min","generateOptionsForRange","endHour","currentHour","currentMinute","hour","minute","optionText","option","Option","generateTimeOptions","now","dayIndex","innerHTML","appendChild","updateAtSpecificTimes","currentTime","selectOption","selectedElement","nameInputEvent","trimmedValue","trim","test","phoneNumberInputEvent","emailInputEvent","guestNumberInputEvent","dateInputEvent","timeInputEvent","openModal","preventDefault","textContent","options","selectedIndex","text","encodedMessage","encodeHTML","replace","submitForm","selectedDateComponents","innerText","split","selectedYear","parseInt","selectedMonth","selectedDate","benchmarkDateComponents","benchmarkYear","benchmarkMonth","benchmarkDate","timeComponents","selectedHour","selectedMinute","alert","closeMessage","submit","reset","closeMessageByEsc","keyCode","validity","patternMismatch"],"mappings":"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","file":"non-critical-legacy-script.min.js","sourcesContent":["'use strict';\r\n\r\n// Get the elements inside the navbar and the home section\r\nconst navbar = document.getElementById(\"navbar\");\r\nconst navbarToggler = document.querySelector('.navbar__toggler');\r\nconst navList = document.querySelector('.navbar__collapse');\r\nconst navLinks = document.querySelectorAll('.navbar__nav-link');\r\nconst findusLink = document.getElementById('findus-link');\r\nconst home = document.getElementById(\"home\");\r\n\r\n// Show or hide the collapsible navbar when toggler is clicked\r\nnavbarToggler.addEventListener('click', (event) => {\r\n  // Toggle the visibility of navList\r\n  navList.classList.toggle('is-opened');\r\n  if (navList.style.maxHeight) {\r\n    // If navList is open, close it\r\n    navList.style.maxHeight = null;\r\n    // Set the toggler NOT to be aria-expanded\r\n    togglerAriaNotExpanded();\r\n    // Set the navlinks to be aria-hidden and tab-index = -1\r\n    navLinkAriaHidden();\r\n  } else {\r\n    // If navList is closed, open it\r\n    navList.style.maxHeight = navList.scrollHeight + \"px\";\r\n    // Set the toggler to be aria-expanded\r\n    togglerAriaExpanded();\r\n    // Set the navlinks NOT to be aria-hidden and tab-index = 0\r\n    navLinkAriaNotHidden();\r\n  }\r\n  event.stopPropagation();\r\n});\r\n\r\n// Hide the collapsible navbar when the nav link is clicked or when the user clicks anywhere outside of the navbar\r\ndocument.addEventListener('click', closeNavbar);\r\n\r\n// For keyboard user, close the navbar if the key \"TAB\" is pressed\r\n// let the navbar stay open if the key \"SHIFT\" + \"TAB\" are pressed\r\n// Close the navbar on \"TAB\" key press\r\nfindusLink.addEventListener('keydown', (event) => {\r\n  if (!event.shiftKey && event.key === 'Tab') {\r\n    closeNavbar();\r\n  }\r\n});\r\n\r\n//Check the screen size onload and assign appropriate aria attributes to HTML elements\r\nwindow.addEventListener('load', checkScreenSize);\r\n\r\n// Handle resize event with debounce\r\n// 1. Close the navbar\r\n// 2. Check the screen size and assign appropriate aria attributes to HTML elements\r\n// 3. Check if needed to adjust the padding-top value of hero-image\r\nwindow.addEventListener('resize', debounce(() => {\r\n  closeNavbar();\r\n  checkScreenSize();\r\n  adjustHeroImagePadding();\r\n}, 50));\r\n\r\n// Handle scroll event with debounce\r\n// On screen wider than 900px, when the user scrolls down, hide the navbar.\r\n// Show the navbar when the user scrolls up\r\nlet prevScrollPos = window.scrollY;\r\nwindow.addEventListener('scroll', debounce(() => {\r\n  const currentScrollPos = window.scrollY;\r\n  if (window.innerWidth > 900) {\r\n    navbar.style.top = prevScrollPos > currentScrollPos ? \"0\" : \"-500px\";\r\n  }\r\n  prevScrollPos = currentScrollPos;\r\n}, 50));\r\n\r\n// Debounce function\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function (...args) {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func.apply(this, args), wait);\r\n  };\r\n}\r\n\r\n// Functions to set / remove the aria attribute(s) of toggler (aria-expanded)\r\nfunction togglerAriaExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'true');\r\n}\r\n\r\nfunction togglerAriaNotExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'false');\r\n}\r\n\r\nfunction togglerAriaRemoved() {\r\n  navbarToggler.removeAttribute('aria-expanded', 'true');\r\n  navbarToggler.removeAttribute('aria-expanded', 'false');\r\n}\r\n\r\n// Functions to set / remove the aria attributes of navlinks (tabindex and aria-hidden)\r\nfunction navLinkAriaHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '-1');\r\n    navLinks[i].setAttribute('aria-hidden', 'true');\r\n  }\r\n}\r\n\r\nfunction navLinkAriaNotHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '0');\r\n    navLinks[i].setAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\nfunction navLinkAriaRemoved() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].removeAttribute('tabindex', '0');\r\n    navLinks[i].removeAttribute('tabindex', '-1');\r\n    navLinks[i].removeAttribute('aria-hidden', 'true');\r\n    navLinks[i].removeAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\n// Function to close the collapsible navbar\r\nfunction closeNavbar() {\r\n  if (navList.classList.contains('is-opened')) {\r\n    navList.style.maxHeight = null;\r\n    navList.classList.remove('is-opened');\r\n    togglerAriaNotExpanded();\r\n    navLinkAriaHidden();\r\n  }\r\n}\r\n\r\n// Function to adjust the padding top of the hero image according to the screen size\r\nfunction adjustHeroImagePadding() {\r\n  // Update the screenWidth variable with the current window width\r\n  let screenWidth = window.innerWidth;\r\n\r\n  // Check the screenWidth and adjust value of paddingTop accordingly\r\n  home.style.paddingTop = (screenWidth <= 350 || (screenWidth <= 600 && screenWidth > 450)) ? \"70px\" : \"0px\";\r\n}\r\n\r\n// Function to check the screen size and assign aria attributes to HTML elements\r\n// For use when onload and onresize\r\nfunction checkScreenSize() {\r\n  let screenWidth = window.innerWidth;\r\n  // On small screen, set the toggler to be aria-expanded,\r\n  // set the navlinks to be aria-hidden and tab-index = -1\r\n  if (screenWidth <= 576) {\r\n    togglerAriaNotExpanded();\r\n    navLinkAriaHidden();\r\n  }\r\n  // On large screen, remove the aria-expanded attribute of the toggler,\r\n  // remove aria-hidden and tab-index attributes of navlinks\r\n  else {\r\n    togglerAriaRemoved();\r\n    navLinkAriaRemoved();\r\n  }\r\n}","'use strict';\r\n\r\n// Get all elements with the class \"accordion__button\"\r\nconst menuAccordion = document.getElementsByClassName(\"accordion__button\");\r\n\r\n// Add event listener for window load to open active panels\r\nwindow.addEventListener('load', openOrClosePanels);\r\n\r\n// Add event listener for window resize to open active panels or remove aria attributes\r\nwindow.addEventListener('resize', openOrClosePanels);\r\n\r\n// Function to handle panel state based on button and screen size\r\nfunction handlePanelState(button, isActive, isSmallScreen) {\r\n  const menuPanel = button.nextElementSibling;\r\n\r\n  // Set aria-expanded attribute\r\n  button.setAttribute('aria-expanded', isActive && isSmallScreen);\r\n\r\n  if (isActive && isSmallScreen) {\r\n    // Open the panel\r\n    menuPanel.classList.add(\"accordion__panel--open\");\r\n    menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n    menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n    menuPanel.setAttribute('role', 'region');\r\n  } else {\r\n    // Close the panel\r\n    menuPanel.classList.remove(\"accordion__panel--open\");\r\n    menuPanel.style.maxHeight = null;\r\n    menuPanel.style.border = \"none\";\r\n    menuPanel.removeAttribute('role', 'region');\r\n  }\r\n}\r\n\r\n// Function to open active panels when window width is <= 450px\r\nfunction openOrClosePanels() {\r\n  const isSmallScreen = window.innerWidth <= 450;\r\n\r\n  for (let i = 0; i < menuAccordion.length; i++) {\r\n    const button = menuAccordion[i];\r\n    const isActive = button.classList.contains(\"accordion__button--active\");\r\n    handlePanelState(button, isActive, isSmallScreen);\r\n  }\r\n}\r\n\r\n// Toggle panel open or close on click\r\nfor (let i = 0; i < menuAccordion.length; i++) {\r\n  menuAccordion[i].addEventListener(\"click\", function () {\r\n    this.classList.toggle(\"accordion__button--active\");\r\n    const isActive = this.classList.contains(\"accordion__button--active\");\r\n    handlePanelState(this, isActive, true); // Always handle click events as small screen actions\r\n  });\r\n}","'use strict';\r\n\r\n//Carousel for small & medium menu\r\n\r\n// Get the elements in carousel\r\nlet slides = document.getElementsByClassName(\"carousel__slide\");\r\nconst playButton = document.querySelector(\".carousel__play-button\");\r\nconst pauseButton = document.querySelector(\".carousel__pause-button\");\r\nlet progressContainers = document.getElementsByClassName(\"carousel__progress-container\");\r\nlet currentProgressContainer = document.querySelector(\".carousel__progress-container.current-container\");\r\nlet progressBars = document.getElementsByClassName(\"carousel__progress-bar\");\r\nlet currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\nlet finishedProgressBars = document.getElementsByClassName(\"finished-bar\");\r\nlet bar1 = document.getElementById(\"bar1\");\r\nlet bar2 = document.getElementById(\"bar2\");\r\nlet bar3 = document.getElementById(\"bar3\");\r\nconst time = 3.5;\r\nconst timeInterval = time * 1000 / 100;\r\n\r\nlet width = 0, memo, dynamicFrame;\r\nlet isPaused = false;\r\n\r\n// Initialize the slide index to the first slide\r\nlet slideIndex = 1;\r\nshowSlides(slideIndex);\r\nprogressStart();\r\n\r\n// start the progress initially\r\nfunction progressStart() {\r\n  frame();\r\n  dynamicFrame = setInterval(frame, timeInterval);\r\n}\r\n\r\nfunction frame() {\r\n  let currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  if (width < 100) {\r\n    width++;\r\n    currentProgressBar.style.width = width + \"%\";\r\n    memo = width;\r\n  } else {\r\n    clearInterval(dynamicFrame); // Clear the next round\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    slideIndex++; // Advance to the next slide\r\n    showSlides();\r\n    checkDotColor(slideIndex);\r\n    currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n    width = 0; // Reset width\r\n    currentProgressBar.style.width = width + \"%\";\r\n    memo = width;\r\n    progressStart();\r\n  }\r\n}\r\n\r\n// Function to display the slide corresponding to the given index 'n'\r\nfunction showSlides(n) {\r\n  let i;\r\n\r\n  // If 'n' is greater than the number of slides or the current slide index is greater than the number of slides, reset to the first slide\r\n  if (n > slides.length || slideIndex > slides.length) { slideIndex = 1 }\r\n  // If 'n' is less than 1, set the slide index to the last slide\r\n  if (n < 1) { slideIndex = slides.length }\r\n\r\n  // Hide all the slides by removing the 'current-slide' class\r\n  for (i = 0; i < slides.length; i++) {\r\n    slides[i].classList.remove(\"current-slide\");\r\n    progressContainers[i].classList.remove(\"current-container\");\r\n    progressBars[i].classList.remove(\"current-bar\");\r\n    slides[i].setAttribute('aria-current', 'false');\r\n    progressContainers[i].setAttribute('aria-current', 'false');\r\n    progressBars[i].setAttribute('aria-current', 'false');\r\n  }\r\n\r\n  // Show the current slide by adding the 'current-slide' class, and setting 'aria-current' attribute to true\r\n  slides[slideIndex - 1].classList.add(\"current-slide\");\r\n  progressContainers[slideIndex - 1].classList.add(\"current-container\");\r\n  progressBars[slideIndex - 1].classList.add(\"current-bar\");\r\n  slides[slideIndex - 1].setAttribute('aria-current', 'true');\r\n  progressContainers[slideIndex - 1].setAttribute('aria-current', 'true');\r\n  progressBars[slideIndex - 1].setAttribute('aria-current', 'true');\r\n}\r\n\r\nfunction progressPause() {\r\n  console.log(memo);\r\n  isPaused = true;\r\n  console.log(\"paused:\" + isPaused);\r\n  clearInterval(dynamicFrame);\r\n}\r\n\r\n// Ensure to reset the progress bar width when you resume\r\nfunction progressResume() {\r\n  let currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  isPaused = false;\r\n  console.log(\"paused:\" + isPaused);\r\n  width = memo; // Restore the width from memo\r\n  if (width < 100) {\r\n    currentProgressBar.style.width = width + \"%\";\r\n    progressStart();\r\n  } else {\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    slideIndex++; // Advance to the next slide\r\n    showSlides();\r\n    currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n    width = 0; // Reset width\r\n    currentProgressBar.style.width = width + \"%\";\r\n    memo = width;\r\n    progressStart();\r\n  }\r\n}\r\n\r\n// Function to advance the slide by a given number 'n' (positive or negative)\r\nfunction plusSlides(n) {\r\n  let currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n\r\n  if (isPaused) {\r\n    clearInterval(dynamicFrame);\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    // Change the slide index and display the corresponding slide\r\n    showSlides(slideIndex += n);\r\n    checkDotColor(slideIndex);\r\n    currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n    width = 0; // Reset width\r\n    currentProgressBar.style.width = width + \"%\";\r\n    memo = width;\r\n  }\r\n  else {\r\n    clearInterval(dynamicFrame);\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    // Change the slide index and display the corresponding slide\r\n    showSlides(slideIndex += n);\r\n    checkDotColor(slideIndex);\r\n    currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n    width = 0; // Reset width\r\n    currentProgressBar.style.width = width + \"%\";\r\n    memo = width;\r\n    progressStart();\r\n  }\r\n}\r\n\r\n// Function to display the slide corresponding to a given dot\r\nfunction currentSlide(n) {\r\n  let currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n\r\n  if (isPaused) {\r\n    clearInterval(dynamicFrame);\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    showSlides(slideIndex = n);\r\n    checkDotColor(slideIndex);\r\n    currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n    width = 0; // Reset width\r\n    currentProgressBar.style.width = width + \"%\";\r\n    memo = width;\r\n  }\r\n  else {\r\n    // Set the slide index to 'n' and display the corresponding slide\r\n    clearInterval(dynamicFrame);\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    // Change the slide index and display the corresponding slide\r\n    showSlides(slideIndex = n);\r\n    checkDotColor(slideIndex);\r\n    currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n    width = 0; // Reset width\r\n    currentProgressBar.style.width = width + \"%\";\r\n    memo = width;\r\n    progressStart();\r\n  }\r\n}\r\n\r\nfunction checkDotColor(slideIndex) {\r\n  for (let i = 0; i < progressBars.length; i++) {\r\n    progressBars[i].classList.remove(\"finished-bar\");\r\n  }\r\n  if (slideIndex === 2) {\r\n    bar1.classList.add(\"finished-bar\");\r\n  }\r\n  if (slideIndex === 3) {\r\n    bar1.classList.add(\"finished-bar\");\r\n    bar2.classList.add(\"finished-bar\");\r\n  }\r\n}\r\n\r\n// Add event listener to pause button\r\npauseButton.addEventListener(\"click\", function () {\r\n  progressPause();\r\n  // Add the \"hidden\" class to the pause button\r\n  pauseButton.classList.add(\"hidden\");\r\n  pauseButton.setAttribute('aria-hidden', 'true');\r\n  // Remove the \"hidden\" class from the play button\r\n  playButton.classList.remove(\"hidden\");\r\n  playButton.setAttribute('aria-hidden', 'false');\r\n});\r\n\r\n// Add event listener to play button\r\nplayButton.addEventListener(\"click\", function () {\r\n  progressResume();\r\n  // Add the \"hidden\" class to the pause button\r\n  playButton.classList.add(\"hidden\");\r\n  playButton.setAttribute('aria-hidden', 'true');\r\n  // Remove the \"hidden\" class from the play button\r\n  pauseButton.classList.remove(\"hidden\");\r\n  pauseButton.setAttribute('aria-hidden', 'false');\r\n});","'use strict';\r\n\r\n// Function to open a menu based on a tab click event\r\nfunction openMenu(event, menuName) {\r\n  let i, menutabs, menus;\r\n  menutabs = document.getElementsByClassName(\"menu__tab\");\r\n\r\n  // Loop through each menu tab to deactivate it\r\n  for (i = 0; i < menutabs.length; i++) {\r\n    menutabs[i].classList.remove(\"menu__tab--active\");\r\n    menutabs[i].setAttribute('aria-selected', 'false');\r\n  }\r\n  // Activate the clicked tab\r\n  event.currentTarget.classList.add(\"menu__tab--active\");\r\n  event.currentTarget.setAttribute('aria-selected', 'true');\r\n\r\n  menus = document.getElementsByClassName(\"menu__panel\");\r\n  // Loop through each menu panel to hide it\r\n  for (i = 0; i < menus.length; i++) {\r\n    menus[i].style.display = \"none\";\r\n  }\r\n  // Display the selected menu panel\r\n  document.getElementById(menuName).style.display = \"grid\";\r\n}\r\n\r\n// Automatically click the tab with the ID \"pasta-tab\" to initialize the menu on page load\r\ndocument.getElementById(\"pasta-tab\").click();","'use strict';\r\n\r\n// Get the form elements\r\nconst reservationForm = document.getElementById(\"reservation-form\");\r\nconst submitButton = document.getElementById('formSumbitButton');\r\nconst confirmationMessage = document.getElementById(\"confirmation-message\");\r\nconst closeButton = document.querySelector(\".confirmation-message__close-button\");\r\nconst confirmButton = document.querySelector(\".confirmation-message__bottom-button--confirm\");\r\nconst cancelButton = document.querySelector(\".confirmation-message__bottom-button--cancel\");\r\n\r\n// Get the form input elements\r\nlet nameInput = document.getElementById(\"name\");\r\nlet phoneNumberInput = document.getElementById(\"phone\");\r\nlet emailInput = document.getElementById(\"email\");\r\nlet guestNumberInput = document.getElementById('guest-number');\r\nlet dateInput = document.getElementById('date');\r\nlet timeInput = document.getElementById('time');\r\nconst timeFirstOption = document.getElementById('time-first-option');\r\nlet messageInput = document.getElementById(\"optional-message\");\r\nconst placeholderText = '(e.g. Dietary Restriction, Special Occasions)';\r\n\r\n// Get the form error message of input elements\r\nconst nameError = document.getElementById(\"name-error\");\r\nconst phoneNumberError = document.getElementById(\"phone-error\");\r\nconst emailError = document.getElementById(\"email-error\");\r\nconst guestNumberError = document.getElementById(\"guest-number-error\");\r\nconst dateError = document.getElementById(\"date-error\");\r\nconst timeError = document.getElementById(\"time-error\");\r\n\r\n// Get the form output elements\r\nlet nameValue = document.getElementById(\"name-value\");\r\nlet phoneValue = document.getElementById(\"phone-value\");\r\nlet emailValue = document.getElementById(\"email-value\");\r\nlet guestNumberValue = document.getElementById(\"guest-number-value\");\r\nlet dateValue = document.getElementById(\"date-value\");\r\nlet timeValue = document.getElementById(\"time-value\");\r\nlet messageValue = document.getElementById(\"optional-message-value\");","'use strict';\r\n\r\n// Set default date for date picker\r\n// If the cutoff time has yet to be reached, set today as default date\r\n// If the cutoff time has been reached, set tomorrow as default date\r\n\r\n// Get date of today\r\nconst dateOfToday = new Date();\r\nconst today = getFormattedDate(dateOfToday);\r\n\r\n// Get date of tomorrow\r\nconst dateOfTmr = new Date(new Date().setDate(dateOfToday.getDate() + 1));\r\nconst tomorrow = getFormattedDate(dateOfTmr);\r\n\r\n// Helper function to pad single digit numbers with leading zero\r\nfunction pad(number) {\r\n  return (number < 10 ? '0' : '') + number;\r\n}\r\n\r\n// Function to get the formatted date string (yyyy-mm-dd)\r\nfunction getFormattedDate(date) {\r\n  const dd = date.getDate();\r\n  const mm = date.getMonth() + 1;\r\n  const yyyy = date.getFullYear();\r\n  return yyyy + \"-\" + pad(mm) + \"-\" + pad(dd);\r\n}\r\n\r\n// Generate default date when the page loads\r\ngenerateDefaultDate();\r\n\r\n// Set default date (.value) and prevent choosing invalid dates (.min)\r\nfunction generateDefaultDate() {\r\n  const tdyDay = dateOfToday.getDay();\r\n  const tdyHour = dateOfToday.getHours();\r\n  const tdyMinute = dateOfToday.getMinutes();\r\n\r\n  const isAfterCutoff = (cutoffHour) => {\r\n    return tdyHour > cutoffHour || (tdyHour === cutoffHour && tdyMinute >= 1);\r\n  };\r\n\r\n  switch (tdyDay) {\r\n    case 0: // Sunday\r\n      setDefaultDate(isAfterCutoff(15));\r\n      break;\r\n    case 5: // Friday\r\n    case 6: // Saturday\r\n      setDefaultDate(isAfterCutoff(19));\r\n      break;\r\n    default: // Monday to Thursday\r\n      setDefaultDate(isAfterCutoff(18));\r\n  }\r\n\r\n  // Helper function to set the default date and min date\r\n  function setDefaultDate(isAfterCutoff) {\r\n    if (isAfterCutoff) {\r\n      dateInput.value = tomorrow;\r\n      dateInput.min = tomorrow;\r\n    } else {\r\n      dateInput.value = today;\r\n      dateInput.min = today;\r\n    }\r\n  }\r\n}","'use strict';\r\n\r\n// Set default time for time picker\r\n\r\n// Generate time options when the page loads\r\ngenerateTimeOptions();\r\n\r\n// Add event listener to date input to generate time options\r\ndateInput.addEventListener('input', generateTimeOptions);\r\n\r\n// Update default date and time every minute\r\n// to ensure the booking time is not outdated\r\nsetInterval(updateAtSpecificTimes, 60 * 1000);\r\n\r\n// Helper function to generate time options for a specific range\r\nfunction generateOptionsForRange(endHour, currentHour, currentMinute) {\r\n  for (let hour = 12; hour <= endHour; hour++) {\r\n    for (let minute = 0; minute < 60; minute += 15) {\r\n      if (hour === endHour && (minute === 15 || minute === 30 || minute === 45)) {\r\n        continue;\r\n      }\r\n      if (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute)) {\r\n        const optionText = hour + ':' + pad(minute);\r\n        const option = new Option(optionText, optionText); // Set the value same as the text\r\n        timeInput.add(option);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Function to generate time options based on current day and time\r\nfunction generateTimeOptions() {\r\n  const now = new Date();\r\n  const dayIndex = now.getDay();\r\n  const currentHour = now.getHours();\r\n  const currentMinute = now.getMinutes();\r\n\r\n  // Clear existing options (if any)\r\n  timeInput.innerHTML = '';\r\n\r\n  // Add initial option for time (placeholder: Select Time)\r\n  timeInput.appendChild(timeFirstOption);\r\n\r\n  if (dateInput.value === today) {\r\n    switch (dayIndex) {\r\n      case 0: // Sunday\r\n        generateOptionsForRange(16, currentHour, currentMinute);\r\n        break;\r\n      case 5:\r\n      case 6: // Friday & Saturday\r\n        generateOptionsForRange(20, currentHour, currentMinute);\r\n        break;\r\n      default: // Monday to Thursday\r\n        generateOptionsForRange(19, currentHour, currentMinute);\r\n    }\r\n  }\r\n  else if (dateInput.value > today) {\r\n    // If the chosen day is not today\r\n    const selectedDate = new Date(dateInput.value);\r\n    const chosenDay = selectedDate.getDay();\r\n    switch (chosenDay) {\r\n      case 0: // Sunday\r\n        generateOptionsForRange(16, -1, -1);\r\n        break;\r\n      case 5:\r\n      case 6: // Friday & Saturday\r\n        generateOptionsForRange(20, -1, -1);\r\n        break;\r\n      default: // Monday to Thursday\r\n        generateOptionsForRange(19, -1, -1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAtSpecificTimes() {\r\n  let currentTime = new Date();\r\n  let currentHour = currentTime.getHours();\r\n  let currentMinute = currentTime.getMinutes();\r\n\r\n  // Check if the current time is between 11am and 8pm\r\n  if (currentHour >= 11 && currentHour < 20) {\r\n    // Check if the current minute is 01, 16, 31, or 46\r\n    if (currentMinute === 1 || currentMinute === 16 || currentMinute === 31 || currentMinute === 46) {\r\n      generateDefaultDate();\r\n      generateTimeOptions();\r\n    }\r\n  }\r\n}","'use strict';\r\n\r\n// Add event listeners to option elements to change the text color to solid black color\r\nguestNumberInput.addEventListener('change', function () {\r\n    selectOption(guestNumberInput);\r\n});\r\n\r\ntimeInput.addEventListener('change', function () {\r\n    selectOption(timeInput);\r\n});\r\n\r\n// Function to change the text color of selected option\r\nfunction selectOption(selectedElement) {\r\n    // Check if a valid option (not the disabled one) is selected\r\n    if (selectedElement.value !== \"\") {\r\n        // If a valid option is selected, add the 'valid' class to change its color\r\n        selectedElement.classList.add('valid');\r\n    } else {\r\n        // If a valid option is yet to be selected, remove the 'valid' class to revert to its default color\r\n        selectedElement.classList.remove('valid');\r\n    }\r\n}","'use strict';\r\n\r\n// First form validation on clicking the submit button\r\nsubmitButton.addEventListener('click', (event) => {\r\n\r\n    // If the input is incorrect or empty, \r\n    // show the error message and attach relevant class (styling) and aria-attributes to the elements\r\n\r\n    //Validate name input\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (nameInput.validity.patternMismatch || trimmedValue.length < 2 || nameInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    } else {\r\n        nameInput.classList.remove('error-input');\r\n        nameError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate phone number input\r\n    if (phoneNumberInput.validity.patternMismatch || phoneNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    } else {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate email input\r\n    if (emailInput.validity.patternMismatch || emailInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    } else {\r\n        emailInput.classList.remove('error-input');\r\n        emailError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate guest number input\r\n    if (guestNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate date input\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate < minDate || selectedDate === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    } else {\r\n        dateInput.classList.remove('error-input');\r\n        dateError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate time input\r\n    if (timeInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeError.style.display = \"none\";\r\n    }\r\n\r\n    // Alert the user about the erroneous input\r\n    if (nameError.style.display === \"block\" || phoneNumberError.style.display === \"block\" || emailError.style.display === \"block\" || guestNumberError.style.display === \"block\" || dateError.style.display === \"block\" || timeError.style.display === \"block\") {\r\n        alert(\"Please provide valid input.\");\r\n    }\r\n\r\n    // Add event listeners to form elements after the first submission of form,\r\n    // for ongoing validation of inputs\r\n    nameInput.addEventListener('input', nameInputEvent);\r\n    phoneNumberInput.addEventListener('input', phoneNumberInputEvent);\r\n    emailInput.addEventListener('input', emailInputEvent);\r\n    guestNumberInput.addEventListener('input', guestNumberInputEvent);\r\n    dateInput.addEventListener('input', dateInputEvent);\r\n    timeInput.addEventListener('input', timeInputEvent);\r\n});\r\n\r\n// Function to continuously validate name input after first submission\r\nfunction nameInputEvent() {\r\n    const letterPattern = /^[A-Za-z\\.' \\-]+$/;\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (trimmedValue.length > 1 && letterPattern.test(trimmedValue)) {\r\n        nameInput.classList.remove('error-input');\r\n        nameInput.removeAttribute('aria-describedby', 'name-error');\r\n        nameInput.removeAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"none\";\r\n    } else {\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Function to continuously validate phone number input after first submission\r\nfunction phoneNumberInputEvent() {\r\n    const numberPattern = /[0-9+]/g;\r\n\r\n    if (phoneNumberInput.value.length > 6 && numberPattern.test(phoneNumberInput.value)) {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberInput.removeAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.removeAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"none\";\r\n    } else {\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Function to continuously validate email input after first submission\r\nfunction emailInputEvent() {\r\n    const emailPattern = /^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$/;\r\n\r\n    if (emailPattern.test(emailInput.value)) {\r\n        emailInput.classList.remove('error-input');\r\n        emailInput.removeAttribute('aria-describedby', 'email-error');\r\n        emailInput.removeAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"none\";\r\n    } else {\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Function to continuously validate guest number input after first submission\r\nfunction guestNumberInputEvent() {\r\n    if (guestNumberInput.value === '') {\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberInput.removeAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.removeAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n}\r\n\r\n// Function to continuously validate date input after first submission\r\nfunction dateInputEvent() {\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate >= minDate) {\r\n        dateInput.classList.remove('error-input');\r\n        dateInput.removeAttribute('aria-describedby', 'date-error');\r\n        dateInput.removeAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"none\";\r\n    } else {\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Function to continuously validate time input after first submission\r\nfunction timeInputEvent() {\r\n    if (timeInput.value === '') {\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeInput.removeAttribute('aria-describedby', 'time-error');\r\n        timeInput.removeAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"none\";\r\n    }\r\n}","'use strict';\r\n\r\n// Submit form upon confirmation of information\r\nconfirmButton.addEventListener(\"click\", submitForm);\r\n\r\n// Add an event listener to the close button and cancel button to close the message\r\ncloseButton.addEventListener(\"click\", closeMessage);\r\ncancelButton.addEventListener(\"click\", closeMessage);\r\n\r\n// Add an event listener to the window to close the message\r\nwindow.addEventListener('keydown', closeMessageByEsc);\r\n\r\n// Function to open the modal when the user clicks the form submit button\r\nfunction openModal(event) {\r\n    event.preventDefault(); // Prevent default form submission\r\n    confirmationMessage.style.display = \"flex\";\r\n    confirmationMessage.setAttribute('aria-modal', 'true');\r\n\r\n    // Copy the value of inputs or options in the form to confirmation message\r\n    nameValue.textContent = nameInput.value;\r\n    phoneValue.textContent = phoneNumberInput.value;\r\n    emailValue.textContent = emailInput.value;\r\n    guestNumberValue.textContent = guestNumberInput.value;\r\n    dateValue.textContent = dateInput.value;\r\n    timeValue.textContent = timeInput.options[timeInput.selectedIndex].text\r\n\r\n    // If the message input value is blank or default value,\r\n    // the corresponding text in the confirmation message will be N/A\r\n    if (messageInput.value === '' || messageInput.value === '(e.g. Dietary Restriction, Special Occasions)') {\r\n        messageValue.textContent = \"N/A\";\r\n    } else {\r\n        // Encode the message input value to prevent HTML injection\r\n        const encodedMessage = encodeHTML(messageInput.value);\r\n        messageValue.innerHTML = encodedMessage;\r\n    }\r\n}\r\n\r\n// Function to encode HTML entities\r\nfunction encodeHTML(text) {\r\n    return text.replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/(\\r\\n|\\n|\\r)/g, '<br>'); // Preserve line breaks\r\n}\r\n\r\n// Function to submit form\r\nfunction submitForm() {\r\n    // Parse the selected date value from the form\r\n    const selectedDateString = dateValue.innerText.trim(); // Get the date string and remove leading/trailing spaces\r\n    const selectedDateComponents = selectedDateString.split('-');\r\n    const selectedYear = parseInt(selectedDateComponents[0]);\r\n    const selectedMonth = parseInt(selectedDateComponents[1]);\r\n    const selectedDate = parseInt(selectedDateComponents[2]);\r\n\r\n    // Set date of today as a benchmark date to do comparison\r\n    const benchmarkDateComponents = today.split('-');\r\n    const benchmarkYear = parseInt(benchmarkDateComponents[0]);\r\n    const benchmarkMonth = parseInt(benchmarkDateComponents[1]);\r\n    const benchmarkDate = parseInt(benchmarkDateComponents[2]);\r\n\r\n    // console.log(\"selected date: \" + selectedDate);\r\n    // console.log(\"benchmark date: \" + benchmarkDate);\r\n\r\n    // Parse the selected time value from the form\r\n    const timeString = timeValue.innerText.trim(); // Get the time string and remove leading/trailing spaces\r\n    const timeComponents = timeString.split(':');\r\n    const selectedHour = parseInt(timeComponents[0]);\r\n    const selectedMinute = parseInt(timeComponents[1]);\r\n\r\n    let currentTime = new Date();\r\n    let currentHour = currentTime.getHours();\r\n    let currentMinute = currentTime.getMinutes();\r\n\r\n    // console.log(\"selected time: \" + timeString);\r\n    // console.log(\"current hour: \" + currentHour);\r\n    // console.log(\"current minute: \" + currentMinute);\r\n\r\n    // Check if the selected date is before today's date or if it's today but the selected time has passed\r\n    if (selectedYear < benchmarkYear || selectedMonth < benchmarkMonth || selectedDate < benchmarkDate || (selectedDate === benchmarkDate && (selectedHour < currentHour + 1 || (selectedHour === currentHour + 1 && selectedMinute < currentMinute)))) {\r\n        alert(\"Please select another available day or time slot.\");\r\n        closeMessage();\r\n        generateDefaultDate();\r\n        generateTimeOptions();\r\n    } else {\r\n        // Trigger form submission\r\n        reservationForm.submit();\r\n        alert(\"Thanks for choosing our restaurant!\\nWe will contact you shortly to confirm your reservation.\");\r\n\r\n        // Hide the following 2 lines if the PHP file is ready\r\n        closeMessage();\r\n        reservationForm.reset();\r\n    }\r\n}\r\n\r\n// Function to close the message\r\nfunction closeMessage() {\r\n    confirmationMessage.style.display = \"none\";\r\n    confirmationMessage.setAttribute('aria-modal', 'false');\r\n}\r\n\r\n// Function to close the message by hitting the \"ESC\" key\r\nfunction closeMessageByEsc(event) {\r\n    if (event.keyCode == 27) { // Check if the key pressed is 'esc'\r\n        closeMessage();\r\n    }\r\n}","'use strict';\r\n// Textarea in reservation form\r\n// 1. When on focus, clear placeholder \r\n// 2. When input is detected, change the text to solid color\r\n// 3. When it is empty and loses focus, reset the placeholder\r\n\r\n// Add an event listener to clear placeholder when on focus\r\nmessageInput.addEventListener('focus', () => {\r\n  if (messageInput.value.trim() === placeholderText) {\r\n    messageInput.value = ''; // Clear the text\r\n  }\r\n});\r\n\r\n// Add an event listener to change color of messageInput when user inputs\r\nmessageInput.addEventListener('input', () => {\r\n  messageInput.classList.toggle('input', messageInput.value.trim() !== '');\r\n});\r\n\r\n// Add an event listener to reset the placeholder if the messageInput is empty when it loses focus\r\nmessageInput.addEventListener('blur', () => {\r\n  if (messageInput.value.trim() === '') {\r\n    messageInput.value = placeholderText;\r\n    messageInput.classList.remove('input');\r\n  }\r\n});","'use strict';\r\n\r\n// Automatically update the year for the copyright in footer\r\ndocument.getElementById(\"year\").textContent = dateOfToday.getFullYear();"]}