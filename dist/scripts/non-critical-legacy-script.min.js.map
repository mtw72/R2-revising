{"version":3,"sources":["footer.js","navbar.js","menu/carousel.js","menu/largeMenu.js","menu/smallMenu.js","reservationForm/formdefaultValues.js","reservationForm/formSelect.js","reservationForm/formTextarea.js","reservationForm/formValidation.js","reservationForm/popUpMessage.js"],"names":["copyrightDate","Date","copyrightYear","getFullYear","document","getElementById","textContent","navBar","navbarToggler","querySelector","navList","navLinks","querySelectorAll","findusLink","home","togglerAriaExpanded","setAttribute","togglerAriaNotExpanded","togglerAriaRemoved","removeAttribute","navlinkAriaHidden","i","length","navlinkAriaNotHidden","navlinkAriaRemoved","closeNavbar","classList","contains","style","maxHeight","remove","closeNavbarByTab","event","keyCode","which","shiftKey","addEventListener","toggle","scrollHeight","stopPropagation","prevScrollPos","window","scrollY","adjustHeroImagePadding","screenWidth","innerWidth","paddingTop","checkScreenSize","onscroll","currentScrollPos","navbar","top","slideIndex","showSlides","n","slides","getElementsByClassName","dots","className","replace","autoplay","timer","setInterval","resetTimer","clearInterval","plusSlides","currentSlide","openMenu","menuName","menutabs","menus","currentTarget","add","display","click","menuAccordion","openMenuPanel","menuPanel","nextElementSibling","border","this","getAttribute","handleResize","dateOfToday","tdyDay","getDay","tdyDate","getDate","tdyMth","getMonth","tdyYear","tdyHour","getHours","tdyMinute","getMinutes","today","dateOfTmr","setDate","tmrDate","tmrMth","tmrYear","tomorrow","dateInput","generateDefaultDate","value","min","pad","number","isWithinOpeningHours","day","hour","minute","currentTime","_openingHours$day","Sunday","start","end","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","generateTimeOptions","now","days","currentHour","currentMinute","timeSelect","timeFirstOption","innerHTML","appendChild","optionText","option","Option","updateAtSpecificTimes","selectGuestNumberElement","selectTimeElement","optionSelected","selectedElement","textarea","clearPlaceholder","trim","removeEventListener","submitButton","nameInput","nameError","phoneNumberInput","phoneNumberError","emailInput","emailError","guestNumberInput","guestNumberError","dateError","timeInput","timeError","nameInputEvent","trimmedValue","test","phoneNumberInputEvent","emailInputEvent","guestNumberInputEvent","dateInputEvent","timeInputEvent","validity","patternMismatch","preventDefault","selectedDate","alert","confirmationMessage","confirmButton","closeButton","cancelButton","messageInput","nameValue","phoneValue","emailValue","guestNumberValue","dateValue","timeValue","messageValue","messageTimer","openModal","options","selectedIndex","text","encodedMessage","encodeHTML","formSubmitted","selectedDateComponents","innerText","split","selectedYear","parseInt","selectedMonth","benchmarkDateComponents","benchmarkYear","benchmarkMonth","benchmarkDate","timeComponents","selectedHour","selectedMinute","closeMessage","submit","reset","closeMessageByEsc"],"mappings":"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","file":"non-critical-legacy-script.min.js","sourcesContent":["'use strict';\r\n\r\n// automatically update the year for the copyright in footer\r\nconst copyrightDate = new Date();\r\nlet copyrightYear = copyrightDate.getFullYear();\r\ndocument.getElementById(\"year\").textContent = copyrightYear;\r\n","'use strict';\r\n\r\n// Get the elements inside the navbar and the home section\r\nconst navBar = document.getElementById(\"navbar\");\r\nconst navbarToggler = document.querySelector('.navbar__toggler');\r\nconst navList = document.querySelector('.navbar__collapse');\r\nconst navLinks = document.querySelectorAll('.navbar__nav-link');\r\nconst findusLink = document.getElementById('findus-link');\r\nconst home = document.getElementById(\"home\");\r\n\r\n\r\n// Functions to set / remove the aria attribute(s) of toggler (aria-expanded)\r\nfunction togglerAriaExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'true');\r\n}\r\n\r\nfunction togglerAriaNotExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'false');\r\n}\r\n\r\nfunction togglerAriaRemoved() {\r\n  navbarToggler.removeAttribute('aria-expanded', 'true');\r\n  navbarToggler.removeAttribute('aria-expanded', 'false');\r\n}\r\n\r\n\r\n// Functions to set / remove the aria attributes of navlinks (tabindex and aria-hidden)\r\nfunction navlinkAriaHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '-1');\r\n    navLinks[i].setAttribute('aria-hidden', 'true');\r\n  }\r\n}\r\n\r\nfunction navlinkAriaNotHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '0');\r\n    navLinks[i].setAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\nfunction navlinkAriaRemoved() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].removeAttribute('tabindex', '0');\r\n    navLinks[i].removeAttribute('tabindex', '-1');\r\n    navLinks[i].removeAttribute('aria-hidden', 'true');\r\n    navLinks[i].removeAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\n\r\n// Function to close the collapsible navbar\r\nfunction closeNavbar() {\r\n  if (navList.classList.contains('is-opened')) {\r\n    navList.style.maxHeight = null;\r\n    navList.classList.remove('is-opened');\r\n    togglerAriaNotExpanded();\r\n    navlinkAriaHidden();\r\n  }\r\n}\r\n\r\n\r\n// Show or hide the collapsible navbar when toggler is clicked\r\nnavbarToggler.addEventListener('click', (event) => {\r\n  // Toggle the visibility of navList\r\n  navList.classList.toggle('is-opened');\r\n  if (navList.style.maxHeight) {\r\n    // If navList is open, close it\r\n    navList.style.maxHeight = null;\r\n    // Set the toggler NOT to be aria-expanded\r\n    togglerAriaNotExpanded();\r\n    // Set the navlinks to be aria-hidden and tab-index = -1\r\n    navlinkAriaHidden();\r\n  } else {\r\n    // If navList is closed, open it\r\n    navList.style.maxHeight = navList.scrollHeight + \"px\";\r\n    // Set the toggler to be aria-expanded\r\n    togglerAriaExpanded();\r\n    // Set the navlinks NOT to be aria-hidden and tab-index = 0\r\n    navlinkAriaNotHidden();\r\n  }\r\n  event.stopPropagation();\r\n});\r\n\r\n\r\n// Hide the collapsible navbar when the nav link is clicked \r\n// or when the user clicks anywhere outside of the navbar\r\ndocument.addEventListener('click', () => {\r\n  closeNavbar();\r\n});\r\n\r\n\r\n// For keyboard user, close the navbar if the key \"TAB\" is pressed\r\n// let the navbar stay open if the key \"SHIFT\" + \"TAB\" are pressed\r\nfunction closeNavbarByTab(event) {\r\n  const keyCode = event.keyCode || event.which;\r\n  // Check if the key pressed is 'tab'\r\n  if (event.shiftKey && event.keyCode == 9) {\r\n    // act normally if pressing \"shift\" + \"tab\" (going backwards)\r\n  } else if (keyCode === 9) {\r\n    closeNavbar();\r\n  }\r\n}\r\n\r\nfindusLink.addEventListener('keydown', closeNavbarByTab);\r\n\r\n\r\n// On Scroll\r\n// On screen wider than 900px, when the user scrolls down, hide the navbar. \r\n// When the user scrolls up, show the navbar \r\nlet prevScrollPos = window.scrollY;\r\n\r\nwindow.onscroll = function () {\r\n  let currentScrollPos = window.scrollY;\r\n  let screenWidth = window.innerWidth;\r\n\r\n  if (screenWidth > 900) {\r\n    if (prevScrollPos > currentScrollPos) {\r\n      navbar.style.top = \"0\";\r\n    } else {\r\n      navbar.style.top = \"-500px\";\r\n    }\r\n  }\r\n\r\n  prevScrollPos = currentScrollPos;\r\n}\r\n\r\n\r\n// Function to adjust the padding top of the hero image according to the screen size\r\nfunction adjustHeroImagePadding() {\r\n  // Update the screenWidth variable with the current window width\r\n  let screenWidth = window.innerWidth;\r\n\r\n  // Check the screenWidth and adjust value of paddingTop accordingly\r\n  if (screenWidth <= 350 || (screenWidth <= 600 && screenWidth > 450)) {\r\n    home.style.paddingTop = \"70px\";\r\n  } else {\r\n    home.style.paddingTop = \"0px\";\r\n  }\r\n}\r\n\r\n\r\n// Function to check the screen size and assign aria attributes to HTML elements\r\n// For use when onload and onresize\r\nfunction checkScreenSize() {\r\n  let screenWidth = window.innerWidth;\r\n  // On small screen, set the toggler to be aria-expanded,\r\n  // set the navlinks to be aria-hidden and tab-index = -1\r\n  if (screenWidth <= 576) {\r\n    togglerAriaNotExpanded();\r\n    navlinkAriaHidden();\r\n  }\r\n  // On large screen, remove the aria-expanded attribute of the toggler,\r\n  // remove aria-hidden and tab-index attributes of navlinks\r\n  else {\r\n    togglerAriaRemoved();\r\n    navlinkAriaRemoved();\r\n  }\r\n}\r\n\r\n\r\n// On Screen resize\r\n// 1. Close the navbar\r\n// 2. Check the screen size and assign appropriate aria attributes to HTML elements\r\n// 3. Check if needed to adjust the padding-top value of hero-image\r\nwindow.addEventListener('resize', function () {\r\n  closeNavbar();\r\n  checkScreenSize();\r\n  adjustHeroImagePadding();\r\n});\r\n\r\n\r\n//Check the screen size onload and assign appropriate aria attributes to HTML elements\r\nwindow.addEventListener('load', checkScreenSize);","'use strict';\r\n\r\n//carousel for small & medium menu\r\nlet slideIndex = 1;\r\nshowSlides(slideIndex);\r\n\r\nfunction showSlides(n) {\r\n  let i;\r\n  let slides = document.getElementsByClassName(\"carousel__slide\");\r\n  let dots = document.getElementsByClassName(\"carousel__dot\");\r\n  if (n > slides.length || slideIndex > slides.length) { slideIndex = 1 }\r\n  if (n < 1) { slideIndex = slides.length }\r\n  for (i = 0; i < slides.length; i++) {\r\n    slides[i].className = slides[i].className.replace(\" current-slide\", \"\");\r\n  }\r\n  for (i = 0; i < dots.length; i++) {\r\n    dots[i].className = dots[i].className.replace(\" current-dot\", \"\");\r\n    dots[i].setAttribute('aria-current', 'false');\r\n  }\r\n  slides[slideIndex - 1].className += \" current-slide\";\r\n  dots[slideIndex - 1].className += \" current-dot\";\r\n  dots[slideIndex - 1].setAttribute('aria-current', 'true');\r\n}\r\n\r\nfunction autoplay() {\r\n  slideIndex++;\r\n  showSlides();\r\n}\r\n\r\nlet timer = setInterval(autoplay, 3500)\r\n\r\nfunction resetTimer() {\r\n  clearInterval(timer);\r\n  timer = setInterval(autoplay, 3500);\r\n}\r\n\r\nfunction plusSlides(n) {\r\n  showSlides(slideIndex += n);\r\n  resetTimer();\r\n}\r\n\r\nfunction currentSlide(n) {\r\n  showSlides(slideIndex = n);\r\n  resetTimer();\r\n}","'use strict';\r\n\r\nfunction openMenu(event, menuName) {\r\n  let i, menutabs, menus;\r\n\r\n  menutabs = document.getElementsByClassName(\"menu__tab\");\r\n  for (i = 0; i < menutabs.length; i++) {\r\n    menutabs[i].classList.remove(\"menu__tab--active\");\r\n    menutabs[i].setAttribute('aria-selected', 'false');\r\n  }\r\n  event.currentTarget.classList.add(\"menu__tab--active\");\r\n  event.currentTarget.setAttribute('aria-selected', 'true');\r\n\r\n  menus = document.getElementsByClassName(\"menu__panel\");\r\n  for (i = 0; i < menus.length; i++) {\r\n    menus[i].style.display = \"none\";\r\n  }\r\n  document.getElementById(menuName).style.display = \"grid\";\r\n}\r\n\r\ndocument.getElementById(\"pasta-tab\").click();","'use strict';\r\n\r\nconst menuAccordion = document.getElementsByClassName(\"accordion__button\");\r\n\r\n// open the accordion when the website is loaded\r\nwindow.addEventListener('load', openMenuPanel)\r\n\r\nfunction openMenuPanel() {\r\n  for (let i = 0; i < menuAccordion.length; i++) {\r\n    if (menuAccordion[i].classList.contains(\"accordion__button--active\")) {\r\n      menuAccordion[i].setAttribute('aria-expanded', 'true');\r\n      let menuPanel = menuAccordion[i].nextElementSibling;\r\n      menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n      menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n      menuPanel.classList.add(\"accordion__panel--open\");\r\n      menuPanel.setAttribute('role', 'region');\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// open or close the accordion through clicks\r\nfor (let i = 0; i < menuAccordion.length; i++) {\r\n  menuAccordion[i].addEventListener(\"click\", function () {\r\n    this.classList.toggle(\"accordion__button--active\");\r\n\r\n    // toggle aria-expanded value\r\n    let expanded = this.getAttribute('aria-expanded');\r\n    if (expanded === 'true') {\r\n      this.setAttribute('aria-expanded', 'false');\r\n    } else {\r\n      this.setAttribute('aria-expanded', 'true');\r\n    };\r\n\r\n    // toggle open or close panel, and aria-hidden value\r\n    let menuPanel = this.nextElementSibling;\r\n    if (menuPanel.classList.contains(\"accordion__panel--open\")) {\r\n      menuPanel.style.maxHeight = null;\r\n      menuPanel.classList.remove(\"accordion__panel--open\");\r\n      menuPanel.style.border = \"none\";\r\n      menuPanel.removeAttribute('role', 'region');\r\n    } else {\r\n      menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n      menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n      menuPanel.classList.add(\"accordion__panel--open\");\r\n      menuPanel.setAttribute('role', 'region');\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// when the screen re-sizes, open the accordion\r\nwindow.addEventListener('resize', handleResize);\r\n\r\nfunction handleResize() {\r\n  let screenWidth = window.innerWidth;\r\n  if (screenWidth <= 450) {\r\n    openMenuPanel();\r\n  }\r\n}","'use strict';\r\n\r\n// default date and time values in reservation form\r\n// get date of today\r\nconst dateOfToday = new Date();\r\nconst tdyDay = dateOfToday.getDay();\r\nlet tdyDate = dateOfToday.getDate();\r\nlet tdyMth = dateOfToday.getMonth() + 1;\r\nconst tdyYear = dateOfToday.getFullYear();\r\nconst tdyHour = dateOfToday.getHours();\r\nconst tdyMinute = dateOfToday.getMinutes();\r\n\r\n//make the date and/or month in 2-digit format\r\nif (tdyDate < 10) {\r\n  tdyDate = \"0\" + tdyDate;\r\n}\r\nif (tdyMth < 10) {\r\n  tdyMth = \"0\" + tdyMth;\r\n}\r\n\r\nconst today = tdyYear + \"-\" + tdyMth + \"-\" + tdyDate;\r\n\r\n// get date of tomorrow\r\nconst dateOfTmr = new Date(new Date().setDate(dateOfToday.getDate() + 1));\r\nlet tmrDate = dateOfTmr.getDate();\r\nlet tmrMth = dateOfTmr.getMonth() + 1;\r\nconst tmrYear = dateOfTmr.getFullYear();\r\n\r\n//make the date and/or month in 2-digit format\r\nif (tmrDate < 10) {\r\n  tmrDate = \"0\" + tmrDate;\r\n}\r\nif (tmrMth < 10) {\r\n  tmrMth = \"0\" + tmrMth;\r\n}\r\n\r\nconst tomorrow = tmrYear + \"-\" + tmrMth + \"-\" + tmrDate;\r\n\r\n\r\n// date picker - set default date (.value) and prevent choosing invalid dates (.min)\r\nconst dateInput = document.getElementById('date');\r\n\r\nfunction generateDefaultDate() {\r\n  switch (tdyDay) {\r\n    case 0: //Sunday\r\n      if ((tdyHour > 15) || (tdyHour === 15 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n      break;\r\n    case 5:\r\n    case 6: //Friday & Saturday\r\n      if ((tdyHour > 19) || (tdyHour === 19 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n      break;\r\n    default: //Monday to Thursday\r\n      if ((tdyHour > 18) || (tdyHour === 18 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n  }\r\n}\r\n\r\n// Generate default date when the page loads\r\ngenerateDefaultDate();\r\n\r\ndateInput.addEventListener('input', generateTimeOptions);\r\n\r\n\r\n// time picker - set default time\r\n// Function to pad single digit numbers with leading zero\r\nfunction pad(number) {\r\n  return (number < 10 ? '0' : '') + number;\r\n}\r\n\r\n// Function to check if current time is within restaurant opening hours\r\nfunction isWithinOpeningHours(day, hour, minute) {\r\n  const openingHours = {\r\n    Sunday: { start: 1200, end: 1700 },\r\n    Monday: { start: 1200, end: 2000 },\r\n    Tuesday: { start: 1200, end: 2000 },\r\n    Wednesday: { start: 1200, end: 2000 },\r\n    Thursday: { start: 1200, end: 2000 },\r\n    Friday: { start: 1200, end: 2100 },\r\n    Saturday: { start: 1200, end: 2100 }\r\n  };\r\n\r\n  const currentTime = hour * 100 + minute;\r\n  const { start, end } = openingHours[day];\r\n\r\n  return currentTime >= start && currentTime <= end;\r\n}\r\n\r\n// Function to generate time options based on current day and time\r\nfunction generateTimeOptions() {\r\n  const now = new Date();\r\n  const day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][now.getDay()];\r\n  const days = now.getDay();\r\n  const currentHour = now.getHours();\r\n  const currentMinute = now.getMinutes();\r\n  const timeSelect = document.getElementById('time');\r\n  const timeFirstOption = document.getElementById('time-first-option');\r\n\r\n  // Clear existing options (if any)\r\n  timeSelect.innerHTML = '';\r\n\r\n  // Add initial option\r\n  timeSelect.appendChild(timeFirstOption);\r\n\r\n  if (dateInput.value === today) {\r\n    switch (days) {\r\n      case 0:\r\n        for (let hour = 12; hour <= 16; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 4:15pm, 4:30pm, and 4:45pm\r\n            if (hour === 16 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        for (let hour = 12; hour <= 20; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 8:15pm, 8:30pm, and 8:45pm\r\n            if (hour === 20 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      default: //Monday to Thursday\r\n        for (let hour = 12; hour <= 19; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 7:15pm, 7:30pm, and 7:45pm\r\n            if (hour === 19 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n  else if (dateInput.value > today) {\r\n    const selectedDate = new Date(dateInput.value);\r\n    const chosenDay = selectedDate.getDay();\r\n    switch (chosenDay) {\r\n      case 0:\r\n        for (let hour = 12; hour <= 16; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 4:15pm, 4:30pm, and 4:45pm\r\n            if (hour === 16 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        for (let hour = 12; hour <= 20; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 8:15pm, 8:30pm, and 8:45pm\r\n            if (hour === 20 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n        break;\r\n      default: //Monday to Thursday\r\n        for (let hour = 12; hour <= 19; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 7:15pm, 7:30pm, and 7:45pm\r\n            if (hour === 19 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\n// Generate time options when the page loads\r\ngenerateTimeOptions();\r\n\r\n// update the default date and time at certain interval\r\nfunction updateAtSpecificTimes() {\r\n  let currentTime = new Date();\r\n  let currentHour = currentTime.getHours();\r\n  let currentMinute = currentTime.getMinutes();\r\n\r\n  // Check if the current time is between 11am and 8pm\r\n  if (currentHour >= 11 && currentHour < 20) {\r\n    // Check if the current minute is 01, 16, 31, or 46\r\n    if (currentMinute === 1 || currentMinute === 16 || currentMinute === 31 || currentMinute === 46) {\r\n      generateDefaultDate();\r\n      generateTimeOptions();\r\n    }\r\n  }\r\n}\r\n\r\nsetInterval(updateAtSpecificTimes, 60 * 1000);","'use strict';\r\n\r\nlet selectGuestNumberElement = document.getElementById('guest-number');\r\nlet selectTimeElement = document.getElementById('time');\r\n\r\nfunction optionSelected(selectedElement) {\r\n    // Check if a valid option (not the disabled one) is selected\r\n    if (selectedElement.value !== \"\") {\r\n        // If a valid option is selected, add the 'valid' class to change its color\r\n        selectedElement.classList.add('valid');\r\n    } else {\r\n        // If the disabled option is selected, remove the 'valid' class to revert to the default color\r\n        selectedElement.classList.remove('valid');\r\n    }\r\n}\r\n\r\nselectGuestNumberElement.addEventListener('change', function () {\r\n    optionSelected(selectGuestNumberElement);\r\n});\r\n\r\nselectTimeElement.addEventListener('change', function () {\r\n    optionSelected(selectTimeElement);\r\n});","'use strict';\r\n\r\n// textarea in reservation form\r\nconst textarea = document.getElementById('message');\r\n\r\nfunction clearPlaceholder() {\r\n  // Check if the current value is equal to the placeholder text\r\n  if (textarea.value.trim() === '(e.g. Dietary Restriction, Special Occasions)') {\r\n    textarea.value = ''; // Clear the text\r\n  }\r\n\r\n  // Remove the onfocus event to prevent further clearing\r\n  textarea.removeEventListener('focus', clearPlaceholder);\r\n}\r\n\r\n// Add an event listener to reset the placeholder if the textarea is empty when it loses focus\r\ntextarea.addEventListener('blur', function () {\r\n  if (textarea.value.trim() === '') {\r\n    textarea.value = '(e.g. Dietary Restriction, Special Occasions)';\r\n    textarea.addEventListener('focus', clearPlaceholder);\r\n  }\r\n});\r\n\r\n// change color of textarea when user inputs\r\ntextarea.addEventListener('input', function () {\r\n  if (textarea.value.trim() !== '') {\r\n    textarea.classList.add('input');\r\n  } else {\r\n    textarea.classList.remove('input');\r\n  }\r\n});","'use strict';\r\n\r\nconst submitButton = document.getElementById('formSumbitButton');\r\n\r\nconst nameInput = document.getElementById(\"name\");\r\nconst nameError = document.getElementById(\"name-error\");\r\nconst phoneNumberInput = document.getElementById(\"phone\");\r\nconst phoneNumberError = document.getElementById(\"phone-error\");\r\nconst emailInput = document.getElementById(\"email\");\r\nconst emailError = document.getElementById(\"email-error\");\r\nconst guestNumberInput = document.getElementById(\"guest-number\");\r\nconst guestNumberError = document.getElementById(\"guest-number-error\");\r\nconst dateError = document.getElementById(\"date-error\");\r\nconst timeInput = document.getElementById(\"time\");\r\nconst timeError = document.getElementById(\"time-error\");\r\n\r\n// first validation on submit\r\nsubmitButton.addEventListener('click', (event) => {\r\n\r\n    //validate name input\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (nameInput.validity.patternMismatch || trimmedValue.length < 2 || nameInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    } else {\r\n        nameInput.classList.remove('error-input');\r\n        nameError.style.display = \"none\";\r\n    }\r\n\r\n    //validate phone number input\r\n    if (phoneNumberInput.validity.patternMismatch || phoneNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    } else {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //validate email input\r\n    if (emailInput.validity.patternMismatch || emailInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    } else {\r\n        emailInput.classList.remove('error-input');\r\n        emailError.style.display = \"none\";\r\n    }\r\n\r\n    //validate guest number input\r\n    if (guestNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //validate date input\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    // Check if the selected date\r\n    if (selectedDate < minDate || selectedDate === '') {\r\n        event.preventDefault();\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    } else {\r\n        dateInput.classList.remove('error-input');\r\n        dateError.style.display = \"none\";\r\n    }\r\n\r\n    //validate time input\r\n    if (timeInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeError.style.display = \"none\";\r\n    }\r\n\r\n    if (nameError.style.display === \"block\" || phoneNumberError.style.display === \"block\" || emailError.style.display === \"block\" || guestNumberError.style.display === \"block\" || dateError.style.display === \"block\" || timeError.style.display === \"block\") {\r\n        alert(\"Please provide valid input.\");\r\n    }\r\n\r\n    // Add the input event listener after first submission\r\n    nameInput.addEventListener('input', nameInputEvent);\r\n    phoneNumberInput.addEventListener('input', phoneNumberInputEvent);\r\n    emailInput.addEventListener('input', emailInputEvent);\r\n    guestNumberInput.addEventListener('input', guestNumberInputEvent);\r\n    dateInput.addEventListener('input', dateInputEvent);\r\n    timeInput.addEventListener('input', timeInputEvent);\r\n});\r\n\r\nfunction nameInputEvent() {\r\n    const letterPattern = /^[A-Za-z\\.' \\-]+$/;\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (trimmedValue.length > 1 && letterPattern.test(trimmedValue)) {\r\n        nameInput.classList.remove('error-input');\r\n        nameInput.removeAttribute('aria-describedby', 'name-error');\r\n        nameInput.removeAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"none\";\r\n    } else {\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction phoneNumberInputEvent() {\r\n    const numberPattern = /[0-9+]/g;\r\n\r\n    if (phoneNumberInput.value.length > 6 && numberPattern.test(phoneNumberInput.value)) {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberInput.removeAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.removeAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"none\";\r\n    } else {\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction emailInputEvent() {\r\n    const emailPattern = /^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$/;\r\n\r\n    if (emailPattern.test(emailInput.value)) {\r\n        emailInput.classList.remove('error-input');\r\n        emailInput.removeAttribute('aria-describedby', 'email-error');\r\n        emailInput.removeAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"none\";\r\n    } else {\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction guestNumberInputEvent() {\r\n    if (guestNumberInput.value === '') {\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberInput.removeAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.removeAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n}\r\n\r\nfunction dateInputEvent() {\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate >= minDate) {\r\n        dateInput.classList.remove('error-input');\r\n        dateInput.removeAttribute('aria-describedby', 'date-error');\r\n        dateInput.removeAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"none\";\r\n    } else {\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction timeInputEvent() {\r\n    if (timeInput.value === '') {\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeInput.removeAttribute('aria-describedby', 'time-error');\r\n        timeInput.removeAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"none\";\r\n    }\r\n}","'use strict';\r\n\r\nconst confirmationMessage = document.getElementById(\"confirmation-message\");\r\nconst confirmButton = document.querySelector(\".confirmation-message__bottom-button--confirm\");\r\nconst closeButton = document.querySelector(\".confirmation-message__close-button\");\r\nconst cancelButton = document.querySelector(\".confirmation-message__bottom-button--cancel\");\r\n\r\nconst messageInput = document.getElementById(\"message\");\r\n\r\nlet nameValue = document.getElementById(\"name-value\");\r\nlet phoneValue = document.getElementById(\"phone-value\");\r\nlet emailValue = document.getElementById(\"email-value\");\r\nlet guestNumberValue = document.getElementById(\"guest-number-value\");\r\nlet dateValue = document.getElementById(\"date-value\");\r\nlet timeValue = document.getElementById(\"time-value\");\r\nlet messageValue = document.getElementById(\"optional-message-value\");\r\nlet messageTimer = document.getElementById(\"message-timer\");\r\n\r\n// Open the modal\r\nfunction openModal(event) {\r\n    event.preventDefault(); // Prevent default form submission\r\n    confirmationMessage.style.display = \"flex\";\r\n    confirmationMessage.setAttribute('aria-modal', 'true');\r\n\r\n    // Copy the input value or options of the form to the confirmation message\r\n    nameValue.textContent = nameInput.value;\r\n    phoneValue.textContent = phoneNumberInput.value;\r\n    emailValue.textContent = emailInput.value;\r\n    guestNumberValue.textContent = guestNumberInput.value;\r\n    dateValue.textContent = dateInput.value;\r\n    timeValue.textContent = timeInput.options[timeInput.selectedIndex].text\r\n\r\n    // If the message input value is blank or default value,\r\n    // the corresponding text in the confirmation message will be N/A\r\n    if (messageInput.value === '' || messageInput.value === '(e.g. Dietary Restriction, Special Occasions)') {\r\n        messageValue.textContent = \"N/A\";\r\n    } else {\r\n        // Encode the message input value to prevent HTML injection\r\n        const encodedMessage = encodeHTML(messageInput.value);\r\n        messageValue.innerHTML = encodedMessage;\r\n    }\r\n}\r\n\r\n// Function to encode HTML entities\r\nfunction encodeHTML(text) {\r\n    return text.replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/(\\r\\n|\\n|\\r)/g, '<br>'); // Preserve line breaks\r\n}\r\n\r\n// Submit form upon confirmation of information\r\nconfirmButton.addEventListener(\"click\", formSubmitted);\r\n\r\nfunction formSubmitted() {\r\n    // Parse the selected date and time values from the form\r\n    const selectedDateString = dateValue.innerText.trim();\r\n    const selectedDateComponents = selectedDateString.split('-');\r\n    const selectedYear = parseInt(selectedDateComponents[0]);\r\n    const selectedMonth = parseInt(selectedDateComponents[1]);\r\n    const selectedDate = parseInt(selectedDateComponents[2]);\r\n\r\n    const benchmarkDateComponents = today.split('-');\r\n    const benchmarkYear = parseInt(benchmarkDateComponents[0]);\r\n    const benchmarkMonth = parseInt(benchmarkDateComponents[1]);\r\n    const benchmarkDate = parseInt(benchmarkDateComponents[2]);\r\n    // console.log(\"selected date: \" + selectedDate);\r\n    // console.log(\"benchmark date: \" + benchmarkDate);\r\n\r\n    let currentTime = new Date();\r\n    let currentHour = currentTime.getHours();\r\n    let currentMinute = currentTime.getMinutes();\r\n\r\n\r\n    const timeString = timeValue.innerText.trim(); // Get the time string and remove leading/trailing spaces\r\n    const timeComponents = timeString.split(':');\r\n    const selectedHour = parseInt(timeComponents[0]);\r\n    const selectedMinute = parseInt(timeComponents[1]);\r\n\r\n    // console.log(\"selected time: \" + timeString);\r\n    // console.log(\"current hour: \" + currentHour);\r\n    // console.log(\"current minute: \" + currentMinute);\r\n\r\n    // Check if the selected date is before today's date or if it's today but the selected time has passed\r\n    if (selectedYear < benchmarkYear || selectedMonth < benchmarkMonth || selectedDate < benchmarkDate || (selectedDate === benchmarkDate && (selectedHour < currentHour + 1 || (selectedHour === currentHour + 1 && selectedMinute < currentMinute)))) {\r\n        alert(\"Please select another available day or time slot.\");\r\n        closeMessage();\r\n        generateDefaultDate();\r\n        generateTimeOptions();\r\n    } else {\r\n        // Trigger form submission\r\n        document.querySelector('form').submit();\r\n        alert(\"Thanks for choosing our restaurant!\\nWe will contact you shortly to confirm your reservation.\");\r\n\r\n        // Hide the following 2 lines if the PHP file is ready\r\n        closeMessage();\r\n        document.getElementById(\"myForm\").reset();\r\n    }\r\n}\r\n\r\n\r\n// Add an event listener to the close button and cancel button to close the message\r\ncloseButton.addEventListener(\"click\", closeMessage);\r\n\r\ncancelButton.addEventListener(\"click\", closeMessage);\r\n\r\n// Function to close the message\r\nfunction closeMessage() {\r\n    confirmationMessage.style.display = \"none\";\r\n    confirmationMessage.setAttribute('aria-modal', 'false');\r\n}\r\n\r\n// Add an event listener to the window to close the message\r\nwindow.addEventListener('keydown', closeMessageByEsc);\r\n\r\n// Function to close the message by hitting the \"ESC\" key\r\nfunction closeMessageByEsc(event) {\r\n    if (event.keyCode == 27) { // Check if the key pressed is 'esc'\r\n        closeMessage();\r\n    }\r\n}"]}