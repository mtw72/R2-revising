{"version":3,"sources":["footer.js","navbar.js","menu/accordion.js","menu/carousel.js","menu/menu.js","reservationForm/formdefaultValues.js","reservationForm/formSelect.js","reservationForm/formTextarea.js","reservationForm/formValidation.js","reservationForm/popUpMessage.js"],"names":["copyrightDate","Date","copyrightYear","getFullYear","document","getElementById","textContent","navBar","navbarToggler","querySelector","navList","navLinks","querySelectorAll","findusLink","home","togglerAriaExpanded","setAttribute","togglerAriaNotExpanded","togglerAriaRemoved","removeAttribute","navLinkAriaHidden","i","length","navLinkAriaNotHidden","navLinkAriaRemoved","closeNavbar","classList","contains","style","maxHeight","remove","closeNavbarByTab","event","keyCode","which","shiftKey","addEventListener","toggle","scrollHeight","stopPropagation","prevScrollPos","window","scrollY","adjustHeroImagePadding","screenWidth","innerWidth","paddingTop","checkScreenSize","onscroll","currentScrollPos","navbar","top","menuAccordion","getElementsByClassName","handlePanelState","button","isActive","isSmallScreen","menuPanel","nextElementSibling","add","border","openOrClosePanels","this","slideIndex","showSlides","n","slides","dots","className","replace","autoplay","timer","setInterval","resetTimer","clearInterval","plusSlides","currentSlide","openMenu","menuName","menutabs","menus","currentTarget","display","click","dateOfToday","tdyDay","getDay","tdyDate","getDate","tdyMth","getMonth","tdyYear","tdyHour","getHours","tdyMinute","getMinutes","today","dateOfTmr","setDate","tmrDate","tmrMth","tmrYear","tomorrow","dateInput","generateDefaultDate","value","min","pad","number","isWithinOpeningHours","day","hour","minute","currentTime","_openingHours$day","Sunday","start","end","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","generateTimeOptions","now","days","currentHour","currentMinute","timeSelect","timeFirstOption","innerHTML","appendChild","optionText","option","Option","updateAtSpecificTimes","selectGuestNumberElement","selectTimeElement","optionSelected","selectedElement","textarea","clearPlaceholder","trim","removeEventListener","submitButton","nameInput","nameError","phoneNumberInput","phoneNumberError","emailInput","emailError","guestNumberInput","guestNumberError","dateError","timeInput","timeError","nameInputEvent","trimmedValue","test","phoneNumberInputEvent","emailInputEvent","guestNumberInputEvent","dateInputEvent","timeInputEvent","validity","patternMismatch","preventDefault","selectedDate","alert","confirmationMessage","confirmButton","closeButton","cancelButton","messageInput","nameValue","phoneValue","emailValue","guestNumberValue","dateValue","timeValue","messageValue","messageTimer","openModal","options","selectedIndex","text","encodedMessage","encodeHTML","formSubmitted","selectedDateComponents","innerText","split","selectedYear","parseInt","selectedMonth","benchmarkDateComponents","benchmarkYear","benchmarkMonth","benchmarkDate","timeComponents","selectedHour","selectedMinute","closeMessage","submit","reset","closeMessageByEsc"],"mappings":"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","file":"non-critical-legacy-script.min.js","sourcesContent":["'use strict';\r\n\r\n// automatically update the year for the copyright in footer\r\nconst copyrightDate = new Date();\r\nlet copyrightYear = copyrightDate.getFullYear();\r\ndocument.getElementById(\"year\").textContent = copyrightYear;\r\n","'use strict';\r\n\r\n// Get the elements inside the navbar and the home section\r\nconst navBar = document.getElementById(\"navbar\");\r\nconst navbarToggler = document.querySelector('.navbar__toggler');\r\nconst navList = document.querySelector('.navbar__collapse');\r\nconst navLinks = document.querySelectorAll('.navbar__nav-link');\r\nconst findusLink = document.getElementById('findus-link');\r\nconst home = document.getElementById(\"home\");\r\n\r\n\r\n// Functions to set / remove the aria attribute(s) of toggler (aria-expanded)\r\nfunction togglerAriaExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'true');\r\n}\r\n\r\nfunction togglerAriaNotExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'false');\r\n}\r\n\r\nfunction togglerAriaRemoved() {\r\n  navbarToggler.removeAttribute('aria-expanded', 'true');\r\n  navbarToggler.removeAttribute('aria-expanded', 'false');\r\n}\r\n\r\n\r\n// Functions to set / remove the aria attributes of navlinks (tabindex and aria-hidden)\r\nfunction navLinkAriaHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '-1');\r\n    navLinks[i].setAttribute('aria-hidden', 'true');\r\n  }\r\n}\r\n\r\nfunction navLinkAriaNotHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '0');\r\n    navLinks[i].setAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\nfunction navLinkAriaRemoved() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].removeAttribute('tabindex', '0');\r\n    navLinks[i].removeAttribute('tabindex', '-1');\r\n    navLinks[i].removeAttribute('aria-hidden', 'true');\r\n    navLinks[i].removeAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\n\r\n// Function to close the collapsible navbar\r\nfunction closeNavbar() {\r\n  if (navList.classList.contains('is-opened')) {\r\n    navList.style.maxHeight = null;\r\n    navList.classList.remove('is-opened');\r\n    togglerAriaNotExpanded();\r\n    navLinkAriaHidden();\r\n  }\r\n}\r\n\r\n\r\n// Show or hide the collapsible navbar when toggler is clicked\r\nnavbarToggler.addEventListener('click', (event) => {\r\n  // Toggle the visibility of navList\r\n  navList.classList.toggle('is-opened');\r\n  if (navList.style.maxHeight) {\r\n    // If navList is open, close it\r\n    navList.style.maxHeight = null;\r\n    // Set the toggler NOT to be aria-expanded\r\n    togglerAriaNotExpanded();\r\n    // Set the navlinks to be aria-hidden and tab-index = -1\r\n    navLinkAriaHidden();\r\n  } else {\r\n    // If navList is closed, open it\r\n    navList.style.maxHeight = navList.scrollHeight + \"px\";\r\n    // Set the toggler to be aria-expanded\r\n    togglerAriaExpanded();\r\n    // Set the navlinks NOT to be aria-hidden and tab-index = 0\r\n    navLinkAriaNotHidden();\r\n  }\r\n  event.stopPropagation();\r\n});\r\n\r\n\r\n// Hide the collapsible navbar when the nav link is clicked \r\n// or when the user clicks anywhere outside of the navbar\r\ndocument.addEventListener('click', () => {\r\n  closeNavbar();\r\n});\r\n\r\n\r\n// For keyboard user, close the navbar if the key \"TAB\" is pressed\r\n// let the navbar stay open if the key \"SHIFT\" + \"TAB\" are pressed\r\nfunction closeNavbarByTab(event) {\r\n  const keyCode = event.keyCode || event.which;\r\n  // Check if the key pressed is 'tab'\r\n  if (event.shiftKey && event.keyCode == 9) {\r\n    // act normally if pressing \"shift\" + \"tab\" (going backwards)\r\n  } else if (keyCode === 9) {\r\n    closeNavbar();\r\n  }\r\n}\r\n\r\nfindusLink.addEventListener('keydown', closeNavbarByTab);\r\n\r\n\r\n// On Scroll\r\n// On screen wider than 900px, when the user scrolls down, hide the navbar. \r\n// Show the navbar when the user scrolls up\r\nlet prevScrollPos = window.scrollY;\r\n\r\nwindow.onscroll = function () {\r\n  let currentScrollPos = window.scrollY;\r\n  let screenWidth = window.innerWidth;\r\n\r\n  if (screenWidth > 900) {\r\n    if (prevScrollPos > currentScrollPos) {\r\n      navbar.style.top = \"0\";\r\n    } else {\r\n      navbar.style.top = \"-500px\";\r\n    }\r\n  }\r\n\r\n  prevScrollPos = currentScrollPos;\r\n}\r\n\r\n\r\n// Function to adjust the padding top of the hero image according to the screen size\r\nfunction adjustHeroImagePadding() {\r\n  // Update the screenWidth variable with the current window width\r\n  let screenWidth = window.innerWidth;\r\n\r\n  // Check the screenWidth and adjust value of paddingTop accordingly\r\n  if (screenWidth <= 350 || (screenWidth <= 600 && screenWidth > 450)) {\r\n    home.style.paddingTop = \"70px\";\r\n  } else {\r\n    home.style.paddingTop = \"0px\";\r\n  }\r\n}\r\n\r\n\r\n// Function to check the screen size and assign aria attributes to HTML elements\r\n// For use when onload and onresize\r\nfunction checkScreenSize() {\r\n  let screenWidth = window.innerWidth;\r\n  // On small screen, set the toggler to be aria-expanded,\r\n  // set the navlinks to be aria-hidden and tab-index = -1\r\n  if (screenWidth <= 576) {\r\n    togglerAriaNotExpanded();\r\n    navLinkAriaHidden();\r\n  }\r\n  // On large screen, remove the aria-expanded attribute of the toggler,\r\n  // remove aria-hidden and tab-index attributes of navlinks\r\n  else {\r\n    togglerAriaRemoved();\r\n    navLinkAriaRemoved();\r\n  }\r\n}\r\n\r\n\r\n// On screen resize,\r\n// 1. Close the navbar\r\n// 2. Check the screen size and assign appropriate aria attributes to HTML elements\r\n// 3. Check if needed to adjust the padding-top value of hero-image\r\nwindow.addEventListener('resize', function () {\r\n  closeNavbar();\r\n  checkScreenSize();\r\n  adjustHeroImagePadding();\r\n});\r\n\r\n\r\n//Check the screen size onload and assign appropriate aria attributes to HTML elements\r\nwindow.addEventListener('load', checkScreenSize);","'use strict';\r\n\r\n// Get all elements with the class \"accordion__button\"\r\nconst menuAccordion = document.getElementsByClassName(\"accordion__button\");\r\n\r\n// Add event listener for window load to open active panels\r\nwindow.addEventListener('load', openOrClosePanels);\r\n\r\n// Add event listener for window resize to open active panels or remove aria attributes\r\nwindow.addEventListener('resize', openOrClosePanels);\r\n\r\n// Function to handle panel state based on button and screen size\r\nfunction handlePanelState(button, isActive, isSmallScreen) {\r\n  const menuPanel = button.nextElementSibling;\r\n\r\n  // Set aria-expanded attribute\r\n  button.setAttribute('aria-expanded', isActive && isSmallScreen);\r\n\r\n  if (isActive && isSmallScreen) {\r\n    // Open the panel\r\n    menuPanel.classList.add(\"accordion__panel--open\");\r\n    menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n    menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n    menuPanel.setAttribute('role', 'region');\r\n  } else {\r\n    // Close the panel\r\n    menuPanel.classList.remove(\"accordion__panel--open\");\r\n    menuPanel.style.maxHeight = null;\r\n    menuPanel.style.border = \"none\";\r\n    menuPanel.removeAttribute('role', 'region');\r\n  }\r\n}\r\n\r\n// Function to open active panels when window width is <= 450px\r\nfunction openOrClosePanels() {\r\n  const isSmallScreen = window.innerWidth <= 450;\r\n\r\n  for (let i = 0; i < menuAccordion.length; i++) {\r\n    const button = menuAccordion[i];\r\n    const isActive = button.classList.contains(\"accordion__button--active\");\r\n    handlePanelState(button, isActive, isSmallScreen);\r\n  }\r\n}\r\n\r\n// Toggle panel open or close on click\r\nfor (let i = 0; i < menuAccordion.length; i++) {\r\n  menuAccordion[i].addEventListener(\"click\", function () {\r\n    this.classList.toggle(\"accordion__button--active\");\r\n    const isActive = this.classList.contains(\"accordion__button--active\");\r\n    handlePanelState(this, isActive, true); // Always handle click events as small screen actions\r\n  });\r\n}","'use strict';\r\n\r\n//Carousel for small & medium menu\r\n\r\n// Initialize the slide index to the first slide\r\nlet slideIndex = 1;\r\nshowSlides(slideIndex);\r\n\r\n// Function to display the slide corresponding to the given index 'n'\r\nfunction showSlides(n) {\r\n  let i;\r\n  let slides = document.getElementsByClassName(\"carousel__slide\");\r\n  let dots = document.getElementsByClassName(\"carousel__dot\");\r\n\r\n  // If 'n' is greater than the number of slides or the current slide index is greater than the number of slides, reset to the first slide\r\n  if (n > slides.length || slideIndex > slides.length) { slideIndex = 1 }\r\n  // If 'n' is less than 1, set the slide index to the last slide\r\n  if (n < 1) { slideIndex = slides.length }\r\n\r\n  // Hide all the slides by removing the 'current-slide' class\r\n  for (i = 0; i < slides.length; i++) {\r\n    slides[i].className = slides[i].className.replace(\" current-slide\", \"\");\r\n  }\r\n\r\n  // Remove the 'current-dot' class and 'aria-current' attribute from all dots\r\n  for (i = 0; i < dots.length; i++) {\r\n    dots[i].className = dots[i].className.replace(\" current-dot\", \"\");\r\n    dots[i].setAttribute('aria-current', 'false');\r\n  }\r\n\r\n  // Show the current slide by adding the 'current-slide' class\r\n  slides[slideIndex - 1].className += \" current-slide\";\r\n  // Highlight the current dot by adding the 'current-dot' class and setting 'aria-current' attribute to true\r\n  dots[slideIndex - 1].className += \" current-dot\";\r\n  dots[slideIndex - 1].setAttribute('aria-current', 'true');\r\n}\r\n\r\n// Function to automatically advance to the next slide\r\nfunction autoplay() {\r\n  showSlides(slideIndex);\r\n}\r\n\r\n// Set an interval to automatically advance the slides every 3500 milliseconds (3.5 seconds)\r\nlet timer = setInterval(autoplay, 3500);\r\n\r\n// Function to reset the automatic slide advance timer\r\nfunction resetTimer() {\r\n  // Clear the current interval\r\n  clearInterval(timer);\r\n  // Restart the interval with the same delay\r\n  timer = setInterval(autoplay, 3500);\r\n}\r\n\r\n// Function to advance the slide by a given number 'n' (positive or negative)\r\nfunction plusSlides(n) {\r\n  // Change the slide index and display the corresponding slide\r\n  showSlides(slideIndex += n);\r\n  // Reset the timer\r\n  resetTimer();\r\n}\r\n\r\n// Function to display the slide corresponding to a given dot\r\nfunction currentSlide(n) {\r\n  // Set the slide index to 'n' and display the corresponding slide\r\n  showSlides(slideIndex = n);\r\n  // Reset the timer\r\n  resetTimer();\r\n}","'use strict';\r\n\r\n// Function to open a menu based on a tab click event\r\nfunction openMenu(event, menuName) {\r\n  let i, menutabs, menus;\r\n  menutabs = document.getElementsByClassName(\"menu__tab\");\r\n\r\n  // Loop through each menu tab to deactivate it\r\n  for (i = 0; i < menutabs.length; i++) {\r\n    menutabs[i].classList.remove(\"menu__tab--active\");\r\n    menutabs[i].setAttribute('aria-selected', 'false');\r\n  }\r\n  // Activate the clicked tab by adding the active class\r\n  event.currentTarget.classList.add(\"menu__tab--active\");\r\n  event.currentTarget.setAttribute('aria-selected', 'true');\r\n\r\n  menus = document.getElementsByClassName(\"menu__panel\");\r\n  // Loop through each menu panel to hide it\r\n  for (i = 0; i < menus.length; i++) {\r\n    menus[i].style.display = \"none\";\r\n  }\r\n  // Display the selected menu panel by setting its display style to grid\r\n  document.getElementById(menuName).style.display = \"grid\";\r\n}\r\n\r\n// Automatically click the tab with the ID \"pasta-tab\" to initialize the menu on page load\r\ndocument.getElementById(\"pasta-tab\").click();","'use strict';\r\n\r\n// default date and time values in reservation form\r\n// get date of today\r\nconst dateOfToday = new Date();\r\nconst tdyDay = dateOfToday.getDay();\r\nlet tdyDate = dateOfToday.getDate();\r\nlet tdyMth = dateOfToday.getMonth() + 1;\r\nconst tdyYear = dateOfToday.getFullYear();\r\nconst tdyHour = dateOfToday.getHours();\r\nconst tdyMinute = dateOfToday.getMinutes();\r\n\r\n//make the date and/or month in 2-digit format\r\nif (tdyDate < 10) {\r\n  tdyDate = \"0\" + tdyDate;\r\n}\r\nif (tdyMth < 10) {\r\n  tdyMth = \"0\" + tdyMth;\r\n}\r\n\r\nconst today = tdyYear + \"-\" + tdyMth + \"-\" + tdyDate;\r\n\r\n// get date of tomorrow\r\nconst dateOfTmr = new Date(new Date().setDate(dateOfToday.getDate() + 1));\r\nlet tmrDate = dateOfTmr.getDate();\r\nlet tmrMth = dateOfTmr.getMonth() + 1;\r\nconst tmrYear = dateOfTmr.getFullYear();\r\n\r\n//make the date and/or month in 2-digit format\r\nif (tmrDate < 10) {\r\n  tmrDate = \"0\" + tmrDate;\r\n}\r\nif (tmrMth < 10) {\r\n  tmrMth = \"0\" + tmrMth;\r\n}\r\n\r\nconst tomorrow = tmrYear + \"-\" + tmrMth + \"-\" + tmrDate;\r\n\r\n\r\n// date picker - set default date (.value) and prevent choosing invalid dates (.min)\r\nconst dateInput = document.getElementById('date');\r\n\r\nfunction generateDefaultDate() {\r\n  switch (tdyDay) {\r\n    case 0: //Sunday\r\n      if ((tdyHour > 15) || (tdyHour === 15 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n      break;\r\n    case 5:\r\n    case 6: //Friday & Saturday\r\n      if ((tdyHour > 19) || (tdyHour === 19 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n      break;\r\n    default: //Monday to Thursday\r\n      if ((tdyHour > 18) || (tdyHour === 18 && tdyMinute >= 1)) {\r\n        dateInput.value = tomorrow;\r\n        dateInput.min = tomorrow;\r\n      } else {\r\n        dateInput.value = today;\r\n        dateInput.min = today;\r\n      }\r\n  }\r\n}\r\n\r\n// Generate default date when the page loads\r\ngenerateDefaultDate();\r\n\r\ndateInput.addEventListener('input', generateTimeOptions);\r\n\r\n\r\n// time picker - set default time\r\n// Function to pad single digit numbers with leading zero\r\nfunction pad(number) {\r\n  return (number < 10 ? '0' : '') + number;\r\n}\r\n\r\n// Function to check if current time is within restaurant opening hours\r\nfunction isWithinOpeningHours(day, hour, minute) {\r\n  const openingHours = {\r\n    Sunday: { start: 1200, end: 1700 },\r\n    Monday: { start: 1200, end: 2000 },\r\n    Tuesday: { start: 1200, end: 2000 },\r\n    Wednesday: { start: 1200, end: 2000 },\r\n    Thursday: { start: 1200, end: 2000 },\r\n    Friday: { start: 1200, end: 2100 },\r\n    Saturday: { start: 1200, end: 2100 }\r\n  };\r\n\r\n  const currentTime = hour * 100 + minute;\r\n  const { start, end } = openingHours[day];\r\n\r\n  return currentTime >= start && currentTime <= end;\r\n}\r\n\r\n// Function to generate time options based on current day and time\r\nfunction generateTimeOptions() {\r\n  const now = new Date();\r\n  const day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][now.getDay()];\r\n  const days = now.getDay();\r\n  const currentHour = now.getHours();\r\n  const currentMinute = now.getMinutes();\r\n  const timeSelect = document.getElementById('time');\r\n  const timeFirstOption = document.getElementById('time-first-option');\r\n\r\n  // Clear existing options (if any)\r\n  timeSelect.innerHTML = '';\r\n\r\n  // Add initial option\r\n  timeSelect.appendChild(timeFirstOption);\r\n\r\n  if (dateInput.value === today) {\r\n    switch (days) {\r\n      case 0:\r\n        for (let hour = 12; hour <= 16; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 4:15pm, 4:30pm, and 4:45pm\r\n            if (hour === 16 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        for (let hour = 12; hour <= 20; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 8:15pm, 8:30pm, and 8:45pm\r\n            if (hour === 20 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      default: //Monday to Thursday\r\n        for (let hour = 12; hour <= 19; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 7:15pm, 7:30pm, and 7:45pm\r\n            if (hour === 19 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            if (isWithinOpeningHours(day, hour, minute) && (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute))) {\r\n              const optionText = hour + ':' + pad(minute);\r\n              const option = new Option(optionText, optionText); // Set the value same as the text\r\n              timeSelect.add(option);\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n  else if (dateInput.value > today) {\r\n    const selectedDate = new Date(dateInput.value);\r\n    const chosenDay = selectedDate.getDay();\r\n    switch (chosenDay) {\r\n      case 0:\r\n        for (let hour = 12; hour <= 16; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 4:15pm, 4:30pm, and 4:45pm\r\n            if (hour === 16 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        for (let hour = 12; hour <= 20; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 8:15pm, 8:30pm, and 8:45pm\r\n            if (hour === 20 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n        break;\r\n      default: //Monday to Thursday\r\n        for (let hour = 12; hour <= 19; hour++) {\r\n          for (let minute = 0; minute < 60; minute += 15) {\r\n            // Skip generating options for 7:15pm, 7:30pm, and 7:45pm\r\n            if (hour === 19 && (minute === 15 || minute === 30 || minute === 45)) {\r\n              continue;\r\n            }\r\n\r\n            const optionText = hour + ':' + pad(minute);\r\n            const option = new Option(optionText, optionText); // Set the value same as the text\r\n            timeSelect.add(option);\r\n          }\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\n// Generate time options when the page loads\r\ngenerateTimeOptions();\r\n\r\n// update the default date and time at certain interval\r\nfunction updateAtSpecificTimes() {\r\n  let currentTime = new Date();\r\n  let currentHour = currentTime.getHours();\r\n  let currentMinute = currentTime.getMinutes();\r\n\r\n  // Check if the current time is between 11am and 8pm\r\n  if (currentHour >= 11 && currentHour < 20) {\r\n    // Check if the current minute is 01, 16, 31, or 46\r\n    if (currentMinute === 1 || currentMinute === 16 || currentMinute === 31 || currentMinute === 46) {\r\n      generateDefaultDate();\r\n      generateTimeOptions();\r\n    }\r\n  }\r\n}\r\n\r\nsetInterval(updateAtSpecificTimes, 60 * 1000);","'use strict';\r\n\r\nlet selectGuestNumberElement = document.getElementById('guest-number');\r\nlet selectTimeElement = document.getElementById('time');\r\n\r\nfunction optionSelected(selectedElement) {\r\n    // Check if a valid option (not the disabled one) is selected\r\n    if (selectedElement.value !== \"\") {\r\n        // If a valid option is selected, add the 'valid' class to change its color\r\n        selectedElement.classList.add('valid');\r\n    } else {\r\n        // If the disabled option is selected, remove the 'valid' class to revert to the default color\r\n        selectedElement.classList.remove('valid');\r\n    }\r\n}\r\n\r\nselectGuestNumberElement.addEventListener('change', function () {\r\n    optionSelected(selectGuestNumberElement);\r\n});\r\n\r\nselectTimeElement.addEventListener('change', function () {\r\n    optionSelected(selectTimeElement);\r\n});","'use strict';\r\n\r\n// textarea in reservation form\r\nconst textarea = document.getElementById('message');\r\n\r\nfunction clearPlaceholder() {\r\n  // Check if the current value is equal to the placeholder text\r\n  if (textarea.value.trim() === '(e.g. Dietary Restriction, Special Occasions)') {\r\n    textarea.value = ''; // Clear the text\r\n  }\r\n\r\n  // Remove the onfocus event to prevent further clearing\r\n  textarea.removeEventListener('focus', clearPlaceholder);\r\n}\r\n\r\n// Add an event listener to reset the placeholder if the textarea is empty when it loses focus\r\ntextarea.addEventListener('blur', function () {\r\n  if (textarea.value.trim() === '') {\r\n    textarea.value = '(e.g. Dietary Restriction, Special Occasions)';\r\n    textarea.addEventListener('focus', clearPlaceholder);\r\n  }\r\n});\r\n\r\n// change color of textarea when user inputs\r\ntextarea.addEventListener('input', function () {\r\n  if (textarea.value.trim() !== '') {\r\n    textarea.classList.add('input');\r\n  } else {\r\n    textarea.classList.remove('input');\r\n  }\r\n});","'use strict';\r\n\r\nconst submitButton = document.getElementById('formSumbitButton');\r\n\r\nconst nameInput = document.getElementById(\"name\");\r\nconst nameError = document.getElementById(\"name-error\");\r\nconst phoneNumberInput = document.getElementById(\"phone\");\r\nconst phoneNumberError = document.getElementById(\"phone-error\");\r\nconst emailInput = document.getElementById(\"email\");\r\nconst emailError = document.getElementById(\"email-error\");\r\nconst guestNumberInput = document.getElementById(\"guest-number\");\r\nconst guestNumberError = document.getElementById(\"guest-number-error\");\r\nconst dateError = document.getElementById(\"date-error\");\r\nconst timeInput = document.getElementById(\"time\");\r\nconst timeError = document.getElementById(\"time-error\");\r\n\r\n// first validation on submit\r\nsubmitButton.addEventListener('click', (event) => {\r\n\r\n    //validate name input\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (nameInput.validity.patternMismatch || trimmedValue.length < 2 || nameInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    } else {\r\n        nameInput.classList.remove('error-input');\r\n        nameError.style.display = \"none\";\r\n    }\r\n\r\n    //validate phone number input\r\n    if (phoneNumberInput.validity.patternMismatch || phoneNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    } else {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //validate email input\r\n    if (emailInput.validity.patternMismatch || emailInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    } else {\r\n        emailInput.classList.remove('error-input');\r\n        emailError.style.display = \"none\";\r\n    }\r\n\r\n    //validate guest number input\r\n    if (guestNumberInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //validate date input\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    // Check if the selected date\r\n    if (selectedDate < minDate || selectedDate === '') {\r\n        event.preventDefault();\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    } else {\r\n        dateInput.classList.remove('error-input');\r\n        dateError.style.display = \"none\";\r\n    }\r\n\r\n    //validate time input\r\n    if (timeInput.value === '') {\r\n        event.preventDefault(); // Prevent form submission if there are validation errors\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeError.style.display = \"none\";\r\n    }\r\n\r\n    if (nameError.style.display === \"block\" || phoneNumberError.style.display === \"block\" || emailError.style.display === \"block\" || guestNumberError.style.display === \"block\" || dateError.style.display === \"block\" || timeError.style.display === \"block\") {\r\n        alert(\"Please provide valid input.\");\r\n    }\r\n\r\n    // Add the input event listener after first submission\r\n    nameInput.addEventListener('input', nameInputEvent);\r\n    phoneNumberInput.addEventListener('input', phoneNumberInputEvent);\r\n    emailInput.addEventListener('input', emailInputEvent);\r\n    guestNumberInput.addEventListener('input', guestNumberInputEvent);\r\n    dateInput.addEventListener('input', dateInputEvent);\r\n    timeInput.addEventListener('input', timeInputEvent);\r\n});\r\n\r\nfunction nameInputEvent() {\r\n    const letterPattern = /^[A-Za-z\\.' \\-]+$/;\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (trimmedValue.length > 1 && letterPattern.test(trimmedValue)) {\r\n        nameInput.classList.remove('error-input');\r\n        nameInput.removeAttribute('aria-describedby', 'name-error');\r\n        nameInput.removeAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"none\";\r\n    } else {\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction phoneNumberInputEvent() {\r\n    const numberPattern = /[0-9+]/g;\r\n\r\n    if (phoneNumberInput.value.length > 6 && numberPattern.test(phoneNumberInput.value)) {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberInput.removeAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.removeAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"none\";\r\n    } else {\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction emailInputEvent() {\r\n    const emailPattern = /^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$/;\r\n\r\n    if (emailPattern.test(emailInput.value)) {\r\n        emailInput.classList.remove('error-input');\r\n        emailInput.removeAttribute('aria-describedby', 'email-error');\r\n        emailInput.removeAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"none\";\r\n    } else {\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction guestNumberInputEvent() {\r\n    if (guestNumberInput.value === '') {\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberInput.removeAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.removeAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n}\r\n\r\nfunction dateInputEvent() {\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate >= minDate) {\r\n        dateInput.classList.remove('error-input');\r\n        dateInput.removeAttribute('aria-describedby', 'date-error');\r\n        dateInput.removeAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"none\";\r\n    } else {\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction timeInputEvent() {\r\n    if (timeInput.value === '') {\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeInput.removeAttribute('aria-describedby', 'time-error');\r\n        timeInput.removeAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"none\";\r\n    }\r\n}","'use strict';\r\n\r\nconst confirmationMessage = document.getElementById(\"confirmation-message\");\r\nconst confirmButton = document.querySelector(\".confirmation-message__bottom-button--confirm\");\r\nconst closeButton = document.querySelector(\".confirmation-message__close-button\");\r\nconst cancelButton = document.querySelector(\".confirmation-message__bottom-button--cancel\");\r\n\r\nconst messageInput = document.getElementById(\"message\");\r\n\r\nlet nameValue = document.getElementById(\"name-value\");\r\nlet phoneValue = document.getElementById(\"phone-value\");\r\nlet emailValue = document.getElementById(\"email-value\");\r\nlet guestNumberValue = document.getElementById(\"guest-number-value\");\r\nlet dateValue = document.getElementById(\"date-value\");\r\nlet timeValue = document.getElementById(\"time-value\");\r\nlet messageValue = document.getElementById(\"optional-message-value\");\r\nlet messageTimer = document.getElementById(\"message-timer\");\r\n\r\n// Open the modal\r\nfunction openModal(event) {\r\n    event.preventDefault(); // Prevent default form submission\r\n    confirmationMessage.style.display = \"flex\";\r\n    confirmationMessage.setAttribute('aria-modal', 'true');\r\n\r\n    // Copy the input value or options of the form to the confirmation message\r\n    nameValue.textContent = nameInput.value;\r\n    phoneValue.textContent = phoneNumberInput.value;\r\n    emailValue.textContent = emailInput.value;\r\n    guestNumberValue.textContent = guestNumberInput.value;\r\n    dateValue.textContent = dateInput.value;\r\n    timeValue.textContent = timeInput.options[timeInput.selectedIndex].text\r\n\r\n    // If the message input value is blank or default value,\r\n    // the corresponding text in the confirmation message will be N/A\r\n    if (messageInput.value === '' || messageInput.value === '(e.g. Dietary Restriction, Special Occasions)') {\r\n        messageValue.textContent = \"N/A\";\r\n    } else {\r\n        // Encode the message input value to prevent HTML injection\r\n        const encodedMessage = encodeHTML(messageInput.value);\r\n        messageValue.innerHTML = encodedMessage;\r\n    }\r\n}\r\n\r\n// Function to encode HTML entities\r\nfunction encodeHTML(text) {\r\n    return text.replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/(\\r\\n|\\n|\\r)/g, '<br>'); // Preserve line breaks\r\n}\r\n\r\n// Submit form upon confirmation of information\r\nconfirmButton.addEventListener(\"click\", formSubmitted);\r\n\r\nfunction formSubmitted() {\r\n    // Parse the selected date and time values from the form\r\n    const selectedDateString = dateValue.innerText.trim();\r\n    const selectedDateComponents = selectedDateString.split('-');\r\n    const selectedYear = parseInt(selectedDateComponents[0]);\r\n    const selectedMonth = parseInt(selectedDateComponents[1]);\r\n    const selectedDate = parseInt(selectedDateComponents[2]);\r\n\r\n    const benchmarkDateComponents = today.split('-');\r\n    const benchmarkYear = parseInt(benchmarkDateComponents[0]);\r\n    const benchmarkMonth = parseInt(benchmarkDateComponents[1]);\r\n    const benchmarkDate = parseInt(benchmarkDateComponents[2]);\r\n    // console.log(\"selected date: \" + selectedDate);\r\n    // console.log(\"benchmark date: \" + benchmarkDate);\r\n\r\n    let currentTime = new Date();\r\n    let currentHour = currentTime.getHours();\r\n    let currentMinute = currentTime.getMinutes();\r\n\r\n\r\n    const timeString = timeValue.innerText.trim(); // Get the time string and remove leading/trailing spaces\r\n    const timeComponents = timeString.split(':');\r\n    const selectedHour = parseInt(timeComponents[0]);\r\n    const selectedMinute = parseInt(timeComponents[1]);\r\n\r\n    // console.log(\"selected time: \" + timeString);\r\n    // console.log(\"current hour: \" + currentHour);\r\n    // console.log(\"current minute: \" + currentMinute);\r\n\r\n    // Check if the selected date is before today's date or if it's today but the selected time has passed\r\n    if (selectedYear < benchmarkYear || selectedMonth < benchmarkMonth || selectedDate < benchmarkDate || (selectedDate === benchmarkDate && (selectedHour < currentHour + 1 || (selectedHour === currentHour + 1 && selectedMinute < currentMinute)))) {\r\n        alert(\"Please select another available day or time slot.\");\r\n        closeMessage();\r\n        generateDefaultDate();\r\n        generateTimeOptions();\r\n    } else {\r\n        // Trigger form submission\r\n        document.querySelector('form').submit();\r\n        alert(\"Thanks for choosing our restaurant!\\nWe will contact you shortly to confirm your reservation.\");\r\n\r\n        // Hide the following 2 lines if the PHP file is ready\r\n        closeMessage();\r\n        document.getElementById(\"myForm\").reset();\r\n    }\r\n}\r\n\r\n\r\n// Add an event listener to the close button and cancel button to close the message\r\ncloseButton.addEventListener(\"click\", closeMessage);\r\n\r\ncancelButton.addEventListener(\"click\", closeMessage);\r\n\r\n// Function to close the message\r\nfunction closeMessage() {\r\n    confirmationMessage.style.display = \"none\";\r\n    confirmationMessage.setAttribute('aria-modal', 'false');\r\n}\r\n\r\n// Add an event listener to the window to close the message\r\nwindow.addEventListener('keydown', closeMessageByEsc);\r\n\r\n// Function to close the message by hitting the \"ESC\" key\r\nfunction closeMessageByEsc(event) {\r\n    if (event.keyCode == 27) { // Check if the key pressed is 'esc'\r\n        closeMessage();\r\n    }\r\n}"]}