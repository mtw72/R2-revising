{"version":3,"sources":["navbar.js","accordion.js","carousel.js","menu.js","formVariables.js","formDefaultDate.js","formDefaultTime.js","formSelect.js","formValidation.js","popUpMessage.js","formTextarea.js","footer.js"],"names":["navbar","document","getElementById","navbarToggler","querySelector","navList","navLinks","querySelectorAll","home","addEventListener","event","classList","toggle","style","maxHeight","togglerAriaNotExpanded","navLinkAriaHidden","scrollHeight","togglerAriaExpanded","navLinkAriaNotHidden","stopPropagation","closeNavbar","length","shiftKey","key","window","checkScreenSize","debounce","adjustHeroImagePadding","prevScrollPos","scrollY","func","wait","timeout","_this","this","_len","arguments","args","Array","_key","clearTimeout","setTimeout","apply","setAttribute","togglerAriaRemoved","removeAttribute","i","navLinkAriaRemoved","contains","remove","screenWidth","innerWidth","paddingTop","currentScrollPos","top","menuAccordion","getElementsByClassName","openOrClosePanels","handlePanelState","button","isActive","isSmallScreen","menuPanel","nextElementSibling","add","border","memo","dynamicFrame","time","timeInterval","carouselTrack","slides","prevButton","nextButton","playButton","pauseButton","progressList","progressContainers","progressBars","bar1","bar2","bar3","currentProgressContainer","currentProgressBar","width","isPlay","slideIndex","showSlides","progressStart","plusSlides","progressPause","togglePlayPauseButtons","progressResume","focusProgress","preventDefault","currentSlide","focus","_loop","n","frame","setInterval","clearInterval","checkDotColor","resetProgressBar","preUpdateByUser","postUpdateByUser","pastaTab","riceTab","sidesTab","openMenu","menuName","menutabs","menus","currentTarget","display","click","reservationForm","submitButton","confirmationMessage","closeButton","confirmButton","cancelButton","modalTitle","nameInput","phoneNumberInput","emailInput","guestNumberInput","dateInput","timeInput","timeFirstOption","messageInput","placeholderText","nameError","phoneNumberError","emailError","guestNumberError","dateError","timeError","nameValue","phoneValue","emailValue","guestNumberValue","dateValue","timeValue","messageValue","dateOfToday","Date","today","getFormattedDate","dateOfTmr","setDate","getDate","tomorrow","pad","number","date","dd","mm","getMonth","getFullYear","generateDefaultDate","tdyDay","getDay","tdyHour","getHours","tdyMinute","getMinutes","isAfterCutoff","cutoffHour","setDefaultDate","value","min","generateOptionsForRange","endHour","currentHour","currentMinute","hour","minute","optionText","option","Option","generateTimeOptions","now","dayIndex","innerHTML","appendChild","updateAtSpecificTimes","currentTime","selectOption","selectedElement","validateUserImput","trimmedValue","trim","validity","patternMismatch","selectedDate","alert","nameInputEvent","phoneNumberInputEvent","emailInputEvent","guestNumberInputEvent","dateInputEvent","timeInputEvent","test","verifyInputs","openModal","textContent","options","selectedIndex","text","encodedMessage","encodeHTML","replace","submitForm","selectedDateComponents","innerText","split","selectedYear","parseInt","selectedMonth","benchmarkDateComponents","benchmarkYear","benchmarkMonth","benchmarkDate","timeComponents","selectedHour","selectedMinute","closeMessage","submit","reset"],"mappings":"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","file":"non-critical-legacy-script.min.js","sourcesContent":["'use strict';\r\n\r\n// the navbar is gone when the user scroll down and the screen is re - sized\r\n\r\n// ******** VARIABLES ******** //\r\n\r\n// Get the elements inside the navbar and the home section\r\nconst navbar = document.getElementById(\"navbar\");\r\nconst navbarToggler = document.querySelector('.navbar__toggler');\r\nconst navList = document.querySelector('.navbar__collapse');\r\nconst navLinks = document.querySelectorAll('.navbar__nav-link');\r\nconst home = document.getElementById(\"home\");\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Show or hide the collapsible navbar when toggler is clicked\r\nnavbarToggler.addEventListener('click', (event) => {\r\n  // Toggle the visibility of navList\r\n  navList.classList.toggle('is-opened');\r\n  if (navList.style.maxHeight) {\r\n    // If navList is open, close it\r\n    navList.style.maxHeight = null;\r\n    // Set the toggler NOT to be aria-expanded\r\n    togglerAriaNotExpanded();\r\n    // Set the navlinks to be aria-hidden and tab-index = -1\r\n    navLinkAriaHidden();\r\n  } else {\r\n    // If navList is closed, open it\r\n    navList.style.maxHeight = navList.scrollHeight + \"px\";\r\n    // Set the toggler to be aria-expanded\r\n    togglerAriaExpanded();\r\n    // Set the navlinks NOT to be aria-hidden and tab-index = 0\r\n    navLinkAriaNotHidden();\r\n  }\r\n  event.stopPropagation();\r\n});\r\n\r\n// Hide the collapsible navbar when the nav link is clicked or when the user clicks anywhere outside of the navbar\r\ndocument.addEventListener('click', closeNavbar);\r\n\r\n// For keyboard user, close the navbar if the key \"TAB\" is pressed\r\n// let the navbar stay open if the key \"SHIFT\" + \"TAB\" are pressed\r\n// Close the navbar on \"TAB\" key press\r\nnavLinks[navLinks.length - 1].addEventListener('keydown', (event) => {\r\n  if (!event.shiftKey && event.key === 'Tab') {\r\n    closeNavbar();\r\n  }\r\n});\r\n\r\n//Check the screen size onload and assign appropriate aria attributes to HTML elements\r\nwindow.addEventListener('load', checkScreenSize);\r\n\r\n// Handle resize event with debounce\r\n// 1. Close the navbar\r\n// 2. Check the screen size and assign appropriate aria attributes to HTML elements\r\n// 3. Check if needed to adjust the padding-top value of hero-image\r\nwindow.addEventListener('resize', debounce(() => {\r\n  closeNavbar();\r\n  checkScreenSize();\r\n  adjustHeroImagePadding();\r\n}, 50));\r\n\r\n// Handle scroll event with debounce\r\n// On screen wider than 900px, when the user scrolls down, hide the navbar.\r\n// Show the navbar when the user scrolls up\r\nlet prevScrollPos = window.scrollY;\r\nwindow.addEventListener('scroll', debounce(() => {\r\n  const currentScrollPos = window.scrollY;\r\n  if (window.innerWidth > 900) {\r\n    navbar.style.top = prevScrollPos > currentScrollPos ? \"0\" : \"-500px\";\r\n  }\r\n  prevScrollPos = currentScrollPos;\r\n}, 50));\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Debounce function\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function (...args) {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func.apply(this, args), wait);\r\n  };\r\n}\r\n\r\n// Functions to set / remove the aria attribute(s) of toggler (aria-expanded)\r\nfunction togglerAriaExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'true');\r\n}\r\n\r\nfunction togglerAriaNotExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'false');\r\n}\r\n\r\nfunction togglerAriaRemoved() {\r\n  navbarToggler.removeAttribute('aria-expanded', 'true');\r\n  navbarToggler.removeAttribute('aria-expanded', 'false');\r\n}\r\n\r\n// Functions to set / remove the aria attributes of navlinks (tabindex and aria-hidden)\r\nfunction navLinkAriaHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '-1');\r\n    navLinks[i].setAttribute('aria-hidden', 'true');\r\n  }\r\n}\r\n\r\nfunction navLinkAriaNotHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '0');\r\n    navLinks[i].setAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\nfunction navLinkAriaRemoved() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].removeAttribute('tabindex', '0');\r\n    navLinks[i].removeAttribute('tabindex', '-1');\r\n    navLinks[i].removeAttribute('aria-hidden', 'true');\r\n    navLinks[i].removeAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\n// Function to close the collapsible navbar\r\nfunction closeNavbar() {\r\n  if (navList.classList.contains('is-opened')) {\r\n    navList.style.maxHeight = null;\r\n    navList.classList.remove('is-opened');\r\n    togglerAriaNotExpanded();\r\n    navLinkAriaHidden();\r\n  }\r\n}\r\n\r\n// Function to adjust the padding top of the hero image according to the screen size\r\nfunction adjustHeroImagePadding() {\r\n  // Update the screenWidth variable with the current window width\r\n  let screenWidth = window.innerWidth;\r\n\r\n  // Check the screenWidth and adjust value of paddingTop accordingly\r\n  home.style.paddingTop = (screenWidth <= 350 || (screenWidth <= 600 && screenWidth > 450)) ? \"70px\" : \"0px\";\r\n}\r\n\r\n// Function to check the screen size and assign aria attributes to HTML elements\r\n// For use when onload and onresize\r\nfunction checkScreenSize() {\r\n  let screenWidth = window.innerWidth;\r\n  // On small screen, set the toggler to be aria-expanded,\r\n  // set the navlinks to be aria-hidden and tab-index = -1\r\n  if (screenWidth <= 576) {\r\n    togglerAriaNotExpanded();\r\n    navLinkAriaHidden();\r\n  }\r\n  // On large screen, remove the aria-expanded attribute of the toggler,\r\n  // remove aria-hidden and tab-index attributes of navlinks\r\n  else {\r\n    togglerAriaRemoved();\r\n    navLinkAriaRemoved();\r\n  }\r\n}","'use strict';\r\n\r\n// ******** VARIABLES ******** //\r\n\r\n// Get all elements with the class \"accordion__button\"\r\nconst menuAccordion = document.getElementsByClassName(\"accordion__button\");\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Add event listener for window load to open active panels\r\nwindow.addEventListener('load', openOrClosePanels);\r\n\r\n// Add event listener for window resize to open active panels or remove aria attributes\r\nwindow.addEventListener('resize', openOrClosePanels);\r\n\r\n// Add event listener to the menu accordion to toggle panel open or close\r\nfor (let i = 0; i < menuAccordion.length; i++) {\r\n  menuAccordion[i].addEventListener(\"click\", function () {\r\n    this.classList.toggle(\"accordion__button--active\");\r\n    const isActive = this.classList.contains(\"accordion__button--active\");\r\n    handlePanelState(this, isActive, true); // Always handle click events as small screen actions\r\n  });\r\n}\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to handle panel state based on button and screen size\r\nfunction handlePanelState(button, isActive, isSmallScreen) {\r\n  const menuPanel = button.nextElementSibling;\r\n\r\n  // Set aria-expanded attribute\r\n  button.setAttribute('aria-expanded', isActive && isSmallScreen);\r\n\r\n  if (isActive && isSmallScreen) {\r\n    // Open the panel\r\n    menuPanel.classList.add(\"accordion__panel--open\");\r\n    menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n    menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n    menuPanel.setAttribute('role', 'region');\r\n  } else {\r\n    // Close the panel\r\n    menuPanel.classList.remove(\"accordion__panel--open\");\r\n    menuPanel.style.maxHeight = null;\r\n    menuPanel.style.border = \"none\";\r\n    menuPanel.removeAttribute('role', 'region');\r\n  }\r\n}\r\n\r\n// Function to open active panels when window width is <= 450px\r\nfunction openOrClosePanels() {\r\n  const isSmallScreen = window.innerWidth <= 450;\r\n\r\n  for (let i = 0; i < menuAccordion.length; i++) {\r\n    const button = menuAccordion[i];\r\n    const isActive = button.classList.contains(\"accordion__button--active\");\r\n    handlePanelState(button, isActive, isSmallScreen);\r\n  }\r\n}","'use strict';\r\n\r\n// Carousel for small & medium menu\r\n\r\n// ******** VARIABLES ******** //\r\n\r\n// Set the time for autoplay\r\nconst time = 3.5; //3.5 seconds\r\nconst timeInterval = time * 1000 / 100;\r\n\r\n// Get the elements in carousel\r\nconst carouselTrack = document.getElementById(\"carousel__track\");\r\nconst slides = document.getElementsByClassName(\"carousel__slide\");\r\nconst prevButton = document.querySelector(\".carousel__prev-button\");\r\nconst nextButton = document.querySelector(\".carousel__next-button\");\r\nconst playButton = document.querySelector(\".carousel__play-button\");\r\nconst pauseButton = document.querySelector(\".carousel__pause-button\");\r\nconst progressList = document.querySelector(\".carousel__progress-list\");\r\nconst progressContainers = document.getElementsByClassName(\"carousel__progress-container\");\r\nconst progressBars = document.getElementsByClassName(\"carousel__progress-bar\");\r\nconst bar1 = document.getElementById(\"bar1\");\r\nconst bar2 = document.getElementById(\"bar2\");\r\nconst bar3 = document.getElementById(\"bar3\");\r\n\r\n// Create variables for progress bar\r\nlet currentProgressContainer = document.querySelector(\".carousel__progress-container.current-container\");\r\nlet currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\nlet width = 0, memo, dynamicFrame;\r\nlet isPlay = true;\r\n\r\n\r\n// ******** INITIALIZATION ******** //\r\n\r\n// Initialize the slide index to the first slide\r\nlet slideIndex = 1;\r\nshowSlides(slideIndex);\r\nprogressStart();\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Add event listeners to previous and next buttons\r\nprevButton.addEventListener(\"click\", () => {\r\n  plusSlides(-1);\r\n});\r\n\r\nnextButton.addEventListener(\"click\", () => {\r\n  plusSlides(1);\r\n});\r\n\r\n// Add event listeners to play and pause buttons\r\npauseButton.addEventListener(\"click\", () => {\r\n  progressPause();\r\n  togglePlayPauseButtons();\r\n});\r\n\r\nplayButton.addEventListener(\"click\", () => {\r\n  progressResume();\r\n  togglePlayPauseButtons();\r\n});\r\n\r\n// Add event listeners to progress list\r\nprogressList.addEventListener('keydown', (event) => {\r\n  switch (event.key) {\r\n    case 'ArrowLeft':\r\n      plusSlides(-1);\r\n      focusProgress();\r\n      break;\r\n    case 'ArrowRight':\r\n      plusSlides(1);\r\n      focusProgress();\r\n      break;\r\n    case 'Home':\r\n      event.preventDefault();\r\n      currentSlide(1);\r\n      focusProgress();\r\n      break;\r\n    case 'End':\r\n      event.preventDefault();\r\n      currentSlide(3);\r\n      focusProgress();\r\n      break;\r\n    case 'Tab':\r\n      event.preventDefault(); // Prevent default Tab behavior\r\n      if (event.shiftKey) {\r\n        // Handle Shift + Tab\r\n        if (playButton.classList.contains(\"hidden\")) {\r\n          pauseButton.focus();\r\n        } else {\r\n          playButton.focus();\r\n        }\r\n      } else {\r\n        // Handle regular Tab\r\n        let nameInput = document.getElementById(\"name\");\r\n        nameInput.focus();\r\n      }\r\n      break;\r\n  }\r\n});\r\n\r\n// Add event listeners to each progress container\r\nfor (let i = 0; i < progressContainers.length; i++) {\r\n  progressContainers[i].addEventListener(\"click\", () => {\r\n    currentSlide(1 + i);\r\n  });\r\n}\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to display the slide corresponding to the given index 'n'\r\nfunction showSlides(n) {\r\n\r\n  // If 'n' is greater than the number of slides or the current slide index is greater than the number of slides, reset to the first slide\r\n  if (n > slides.length || slideIndex > slides.length) { slideIndex = 1 }\r\n  // If 'n' is less than 1, set the slide index to the last slide\r\n  if (n < 1) { slideIndex = slides.length }\r\n\r\n  // Hide all the slides by removing the 'current-slide' class\r\n  for (let i = 0; i < slides.length; i++) {\r\n    slides[i].classList.remove(\"current-slide\");\r\n    progressContainers[i].classList.remove(\"current-container\");\r\n    progressBars[i].classList.remove(\"current-bar\");\r\n    progressContainers[i].setAttribute(\"aria-selected\", \"false\");\r\n    progressContainers[i].setAttribute(\"tab-index\", \"-1\");\r\n  }\r\n\r\n  // Show the current slide by adding the 'current-slide' class, and setting 'aria-current' attribute to true\r\n  slides[slideIndex - 1].classList.add(\"current-slide\");\r\n  progressContainers[slideIndex - 1].classList.add(\"current-container\");\r\n  progressBars[slideIndex - 1].classList.add(\"current-bar\");\r\n  progressContainers[slideIndex - 1].setAttribute(\"aria-selected\", \"true\");\r\n  progressContainers[slideIndex - 1].removeAttribute(\"tab-index\", \"-1\");\r\n}\r\n\r\n// Function to start the progress initially\r\nfunction progressStart() {\r\n  frame();\r\n  dynamicFrame = setInterval(frame, timeInterval);\r\n}\r\n\r\n// Function for the progress bar to advance\r\nfunction frame() {\r\n  currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  if (width < 100) {\r\n    width++;\r\n    currentProgressBar.style.width = width + \"%\";\r\n    memo = width;\r\n  } else {\r\n    clearInterval(dynamicFrame); // Clear the coming round\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    slideIndex++; // Advance to the next slide\r\n    showSlides(slideIndex);\r\n    checkDotColor(slideIndex);\r\n    resetProgressBar();\r\n    progressStart();\r\n    carouselTrack.setAttribute(\"aria-live\", \"off\");\r\n  }\r\n}\r\n\r\n// Function to change the dot color according to the slide position\r\nfunction checkDotColor(slideIndex) {\r\n  for (let i = 0; i < progressBars.length; i++) {\r\n    progressBars[i].classList.remove(\"finished-bar\");\r\n  }\r\n  if (slideIndex === 2) {\r\n    bar1.classList.add(\"finished-bar\");\r\n  }\r\n  if (slideIndex === 3) {\r\n    bar1.classList.add(\"finished-bar\");\r\n    bar2.classList.add(\"finished-bar\");\r\n  }\r\n}\r\n\r\n// Helper function to reset the progress bar\r\nfunction resetProgressBar() {\r\n  currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  width = 0; // Reset width\r\n  currentProgressBar.style.width = width + \"%\";\r\n  memo = width;\r\n}\r\n\r\n// Function to pause the progress bar running\r\nfunction progressPause() {\r\n  carouselTrack.setAttribute(\"aria-live\", \"polite\");\r\n  isPlay = false;\r\n  clearInterval(dynamicFrame);\r\n}\r\n\r\n// Function to resume the progress bar running\r\nfunction progressResume() {\r\n  carouselTrack.setAttribute(\"aria-live\", \"off\");\r\n  isPlay = true;\r\n  currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  width = memo; // Restore the width from memo\r\n  if (width < 100) {\r\n    currentProgressBar.style.width = width + \"%\";\r\n    progressStart();\r\n  } else {\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    slideIndex++; // Advance to the next slide\r\n    showSlides(slideIndex);\r\n    resetProgressBar();\r\n    progressStart();\r\n  }\r\n}\r\n\r\n// Helper function to pre-update the carousel initiated by user\r\nfunction preUpdateByUser() {\r\n  clearInterval(dynamicFrame);\r\n  carouselTrack.setAttribute(\"aria-live\", \"polite\");\r\n  currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  currentProgressBar.style.width = \"0.75rem\";\r\n}\r\n\r\n// Function to advance the slide by a given number 'n' (positive or negative)\r\nfunction plusSlides(n) {\r\n  preUpdateByUser();\r\n  slideIndex += n;\r\n  showSlides(slideIndex);\r\n  postUpdateByUser();\r\n}\r\n\r\n// Function to display the slide corresponding to a given dot\r\nfunction currentSlide(n) {\r\n  preUpdateByUser();\r\n  slideIndex = n;\r\n  showSlides(slideIndex);\r\n  postUpdateByUser();\r\n}\r\n\r\n// Helper function to post-update the carousel initiated by user\r\nfunction postUpdateByUser() {\r\n  checkDotColor(slideIndex);\r\n  resetProgressBar();\r\n  if (isPlay) {\r\n    progressStart();\r\n  }\r\n}\r\n\r\n// Function to toggle play/pause button visibility and aria-hidden attribute\r\nfunction togglePlayPauseButtons() {\r\n  playButton.classList.toggle(\"hidden\");\r\n  pauseButton.classList.toggle(\"hidden\");\r\n  playButton.setAttribute('aria-hidden', playButton.classList.contains(\"hidden\"));\r\n  pauseButton.setAttribute('aria-hidden', pauseButton.classList.contains(\"hidden\"));\r\n}\r\n\r\n// Function to focus the progress container\r\nfunction focusProgress() {\r\n  currentProgressContainer = document.querySelector(\".carousel__progress-container.current-container\");\r\n  currentProgressContainer.focus();\r\n}","'use strict';\r\n\r\n// ******** VARIABLES ******** //\r\n\r\nconst pastaTab = document.getElementById(\"pasta-tab\");\r\nconst riceTab = document.getElementById(\"rice-tab\");\r\nconst sidesTab = document.getElementById(\"sides-tab\");\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\npastaTab.addEventListener(\"click\", (event) => {\r\n  openMenu(event, \"pasta-menu\");\r\n});\r\n\r\nriceTab.addEventListener(\"click\", (event) => {\r\n  openMenu(event, \"rice-menu\");\r\n});\r\n\r\nsidesTab.addEventListener(\"click\", (event) => {\r\n  openMenu(event, \"sides-menu\");\r\n});\r\n\r\n\r\n// ******** INITIALIZATION ******** //\r\n\r\n// Automatically click the tab with the ID \"pasta-tab\" to initialize the menu on page load\r\npastaTab.click();\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to open a menu based on a tab click event\r\nfunction openMenu(event, menuName) {\r\n  let i, menutabs, menus;\r\n  menutabs = document.getElementsByClassName(\"menu__tab\");\r\n\r\n  // Loop through each menu tab to deactivate it\r\n  for (i = 0; i < menutabs.length; i++) {\r\n    menutabs[i].classList.remove(\"menu__tab--active\");\r\n    menutabs[i].setAttribute('aria-selected', 'false');\r\n  }\r\n  // Activate the clicked tab\r\n  event.currentTarget.classList.add(\"menu__tab--active\");\r\n  event.currentTarget.setAttribute('aria-selected', 'true');\r\n\r\n  menus = document.getElementsByClassName(\"menu__panel\");\r\n  // Loop through each menu panel to hide it\r\n  for (i = 0; i < menus.length; i++) {\r\n    menus[i].style.display = \"none\";\r\n  }\r\n  // Display the selected menu panel\r\n  document.getElementById(menuName).style.display = \"grid\";\r\n}","'use strict';\r\n\r\n// ******** FORM VARIABLES ******** //\r\n\r\n// Get the form elements\r\nconst reservationForm = document.getElementById(\"reservation-form\");\r\nlet submitButton = document.getElementById('formSumbitButton');\r\nlet confirmationMessage = document.getElementById(\"confirmation-message\");\r\nconst closeButton = document.querySelector(\".confirmation-message__close-button\");\r\nlet confirmButton = document.querySelector(\".confirmation-message__bottom-button--confirm\");\r\nconst cancelButton = document.querySelector(\".confirmation-message__bottom-button--cancel\");\r\nlet modalTitle = document.getElementById(\"modalTitle\");\r\n\r\n// Get the form input elements\r\nlet nameInput = document.getElementById(\"name\");\r\nlet phoneNumberInput = document.getElementById(\"phone\");\r\nlet emailInput = document.getElementById(\"email\");\r\nlet guestNumberInput = document.getElementById('guest-number');\r\nlet dateInput = document.getElementById('date');\r\nlet timeInput = document.getElementById('time');\r\nconst timeFirstOption = document.getElementById('time-first-option');\r\nlet messageInput = document.getElementById(\"optional-message\");\r\nconst placeholderText = '(e.g. Dietary Restriction, Special Occasions)';\r\n\r\n// Get the form error message of input elements\r\nconst nameError = document.getElementById(\"name-error\");\r\nconst phoneNumberError = document.getElementById(\"phone-error\");\r\nconst emailError = document.getElementById(\"email-error\");\r\nconst guestNumberError = document.getElementById(\"guest-number-error\");\r\nconst dateError = document.getElementById(\"date-error\");\r\nconst timeError = document.getElementById(\"time-error\");\r\n\r\n// Get the form output elements\r\nlet nameValue = document.getElementById(\"name-value\");\r\nlet phoneValue = document.getElementById(\"phone-value\");\r\nlet emailValue = document.getElementById(\"email-value\");\r\nlet guestNumberValue = document.getElementById(\"guest-number-value\");\r\nlet dateValue = document.getElementById(\"date-value\");\r\nlet timeValue = document.getElementById(\"time-value\");\r\nlet messageValue = document.getElementById(\"optional-message-value\");","'use strict';\r\n\r\n// Set default date for date picker\r\n// If the cutoff time has yet to be reached, set today as default date\r\n// If the cutoff time has been reached, set tomorrow as default date\r\n\r\n\r\n// ******** VARIABLES ******** //\r\n\r\n// Get date of today\r\nconst dateOfToday = new Date();\r\nconst today = getFormattedDate(dateOfToday);\r\n\r\n// Get date of tomorrow\r\nconst dateOfTmr = new Date(new Date().setDate(dateOfToday.getDate() + 1));\r\nconst tomorrow = getFormattedDate(dateOfTmr);\r\n\r\n\r\n// ******** INITIALIZATION ******** //\r\n\r\n// Generate default date when the page loads\r\ngenerateDefaultDate();\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Helper function to pad single digit numbers with leading zero\r\nfunction pad(number) {\r\n  return (number < 10 ? '0' : '') + number;\r\n}\r\n\r\n// Function to get the formatted date string (yyyy-mm-dd)\r\nfunction getFormattedDate(date) {\r\n  const dd = date.getDate();\r\n  const mm = date.getMonth() + 1;\r\n  const yyyy = date.getFullYear();\r\n  return yyyy + \"-\" + pad(mm) + \"-\" + pad(dd);\r\n}\r\n\r\n// Function to set default date (.value) and prevent choosing invalid dates (.min)\r\nfunction generateDefaultDate() {\r\n  const tdyDay = dateOfToday.getDay();\r\n  const tdyHour = dateOfToday.getHours();\r\n  const tdyMinute = dateOfToday.getMinutes();\r\n\r\n  const isAfterCutoff = (cutoffHour) => {\r\n    return tdyHour > cutoffHour || (tdyHour === cutoffHour && tdyMinute >= 1);\r\n  };\r\n\r\n  switch (tdyDay) {\r\n    case 0: // Sunday\r\n      setDefaultDate(isAfterCutoff(15));\r\n      break;\r\n    case 5: // Friday\r\n    case 6: // Saturday\r\n      setDefaultDate(isAfterCutoff(19));\r\n      break;\r\n    default: // Monday to Thursday\r\n      setDefaultDate(isAfterCutoff(18));\r\n  }\r\n\r\n  // Helper function to set the default date and min date\r\n  function setDefaultDate(isAfterCutoff) {\r\n    if (isAfterCutoff) {\r\n      dateInput.value = tomorrow;\r\n      dateInput.min = tomorrow;\r\n    } else {\r\n      dateInput.value = today;\r\n      dateInput.min = today;\r\n    }\r\n  }\r\n}","'use strict';\r\n\r\n// Set default time for time picker\r\n\r\n// ******** INITIALIZATION ******** //\r\n\r\n// Generate time options when the page loads\r\ngenerateTimeOptions();\r\n\r\n// Update default date and time every minute\r\n// to ensure the booking time is not outdated\r\nsetInterval(updateAtSpecificTimes, 60 * 1000);\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Add event listener to date input to generate time options\r\ndateInput.addEventListener('input', generateTimeOptions);\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Helper function to generate time options for a specific range\r\nfunction generateOptionsForRange(endHour, currentHour, currentMinute) {\r\n  for (let hour = 12; hour <= endHour; hour++) {\r\n    for (let minute = 0; minute < 60; minute += 15) {\r\n      if (hour === endHour && (minute === 15 || minute === 30 || minute === 45)) {\r\n        continue;\r\n      }\r\n      if (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute)) {\r\n        const optionText = hour + ':' + pad(minute);\r\n        const option = new Option(optionText, optionText); // Set the value same as the text\r\n        timeInput.add(option);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Function to generate time options based on current day and time\r\nfunction generateTimeOptions() {\r\n  const now = new Date();\r\n  const dayIndex = now.getDay();\r\n  const currentHour = now.getHours();\r\n  const currentMinute = now.getMinutes();\r\n\r\n  // Clear existing options (if any)\r\n  timeInput.innerHTML = '';\r\n\r\n  // Add initial option for time (placeholder: Select Time)\r\n  timeInput.appendChild(timeFirstOption);\r\n\r\n  if (dateInput.value === today) {\r\n    switch (dayIndex) {\r\n      case 0: // Sunday\r\n        generateOptionsForRange(16, currentHour, currentMinute);\r\n        break;\r\n      case 5:\r\n      case 6: // Friday & Saturday\r\n        generateOptionsForRange(20, currentHour, currentMinute);\r\n        break;\r\n      default: // Monday to Thursday\r\n        generateOptionsForRange(19, currentHour, currentMinute);\r\n    }\r\n  }\r\n  else if (dateInput.value > today) {\r\n    // If the chosen day is not today\r\n    const selectedDate = new Date(dateInput.value);\r\n    const chosenDay = selectedDate.getDay();\r\n    switch (chosenDay) {\r\n      case 0: // Sunday\r\n        generateOptionsForRange(16, -1, -1);\r\n        break;\r\n      case 5:\r\n      case 6: // Friday & Saturday\r\n        generateOptionsForRange(20, -1, -1);\r\n        break;\r\n      default: // Monday to Thursday\r\n        generateOptionsForRange(19, -1, -1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAtSpecificTimes() {\r\n  let currentTime = new Date();\r\n  let currentHour = currentTime.getHours();\r\n  let currentMinute = currentTime.getMinutes();\r\n\r\n  // Check if the current time is between 11am and 8pm\r\n  if (currentHour >= 11 && currentHour < 20) {\r\n    // Check if the current minute is 01, 16, 31, or 46\r\n    if (currentMinute === 1 || currentMinute === 16 || currentMinute === 31 || currentMinute === 46) {\r\n      generateDefaultDate();\r\n      generateTimeOptions();\r\n    }\r\n  }\r\n}","'use strict';\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Add event listeners to option elements to change the text color to solid black color\r\nguestNumberInput.addEventListener('change', function () {\r\n    selectOption(guestNumberInput);\r\n});\r\n\r\ntimeInput.addEventListener('change', function () {\r\n    selectOption(timeInput);\r\n});\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to change the text color of selected option\r\nfunction selectOption(selectedElement) {\r\n    // Check if a valid option (not the disabled one) is selected\r\n    if (selectedElement.value !== \"\") {\r\n        // If a valid option is selected, add the 'valid' class to change its color\r\n        selectedElement.classList.add('valid');\r\n    } else {\r\n        // If a valid option is yet to be selected, remove the 'valid' class to revert to its default color\r\n        selectedElement.classList.remove('valid');\r\n    }\r\n}","'use strict';\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n// the event listener for the form validation is in the popUpMessage.js\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Form validation on clicking or pressing the submit button\r\n// If the input is incorrect or empty, \r\n// show the error message and attach relevant class (styling) and aria-attributes to the elements\r\nfunction validateUserImput() {\r\n\r\n    //Validate name input\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (nameInput.validity.patternMismatch || trimmedValue.length < 2 || nameInput.value === '') {\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    } else {\r\n        nameInput.classList.remove('error-input');\r\n        nameError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate phone number input\r\n    if (phoneNumberInput.validity.patternMismatch || phoneNumberInput.value === '') {\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    } else {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate email input\r\n    if (emailInput.validity.patternMismatch || emailInput.value === '') {\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    } else {\r\n        emailInput.classList.remove('error-input');\r\n        emailError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate guest number input\r\n    if (guestNumberInput.value === '') {\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate date input\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate < minDate || selectedDate === '') {\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    } else {\r\n        dateInput.classList.remove('error-input');\r\n        dateError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate time input\r\n    if (timeInput.value === '') {\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeError.style.display = \"none\";\r\n    }\r\n\r\n    // Alert the user about the erroneous input\r\n    if (nameError.style.display === \"block\" || phoneNumberError.style.display === \"block\" || emailError.style.display === \"block\" || guestNumberError.style.display === \"block\" || dateError.style.display === \"block\" || timeError.style.display === \"block\") {\r\n        alert(\"Please provide valid input.\");\r\n    }\r\n\r\n    // Add event listeners to form elements after the first submission of form,\r\n    // for ongoing validation of inputs\r\n    nameInput.addEventListener('input', nameInputEvent);\r\n    phoneNumberInput.addEventListener('input', phoneNumberInputEvent);\r\n    emailInput.addEventListener('input', emailInputEvent);\r\n    guestNumberInput.addEventListener('input', guestNumberInputEvent);\r\n    dateInput.addEventListener('input', dateInputEvent);\r\n    timeInput.addEventListener('input', timeInputEvent);\r\n};\r\n\r\n// Helper function to continuously validate name input after first submission\r\nfunction nameInputEvent() {\r\n    const letterPattern = /^[A-Za-z\\.' \\-]+$/;\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (trimmedValue.length > 1 && letterPattern.test(trimmedValue)) {\r\n        nameInput.classList.remove('error-input');\r\n        nameInput.removeAttribute('aria-describedby', 'name-error');\r\n        nameInput.removeAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"none\";\r\n    } else {\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate phone number input after first submission\r\nfunction phoneNumberInputEvent() {\r\n    const numberPattern = /[0-9+]/g;\r\n\r\n    if (phoneNumberInput.value.length > 6 && numberPattern.test(phoneNumberInput.value)) {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberInput.removeAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.removeAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"none\";\r\n    } else {\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate email input after first submission\r\nfunction emailInputEvent() {\r\n    const emailPattern = /^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$/;\r\n\r\n    if (emailPattern.test(emailInput.value)) {\r\n        emailInput.classList.remove('error-input');\r\n        emailInput.removeAttribute('aria-describedby', 'email-error');\r\n        emailInput.removeAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"none\";\r\n    } else {\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate guest number input after first submission\r\nfunction guestNumberInputEvent() {\r\n    if (guestNumberInput.value === '') {\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberInput.removeAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.removeAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate date input after first submission\r\nfunction dateInputEvent() {\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate >= minDate) {\r\n        dateInput.classList.remove('error-input');\r\n        dateInput.removeAttribute('aria-describedby', 'date-error');\r\n        dateInput.removeAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"none\";\r\n    } else {\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate time input after first submission\r\nfunction timeInputEvent() {\r\n    if (timeInput.value === '') {\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeInput.removeAttribute('aria-describedby', 'time-error');\r\n        timeInput.removeAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"none\";\r\n    }\r\n}","'use strict';\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Submit form upon confirmation of information\r\nconfirmButton.addEventListener(\"click\", submitForm);\r\n\r\n// Add an event listeners to the submit button to verify the inputs before the confirmation message pops up\r\nsubmitButton.addEventListener('click', verifyInputs);\r\n\r\nsubmitButton.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case ' ':\r\n        case 'Enter':\r\n            verifyInputs(event);\r\n            modalTitle = document.getElementById(\"modalTitle\");\r\n            modalTitle.focus();\r\n            break;\r\n    }\r\n})\r\n\r\n// Add an event listeners to the close button to close the message\r\ncloseButton.addEventListener(\"click\", closeMessage);\r\n\r\ncloseButton.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case ' ':\r\n        case 'Enter':\r\n            event.preventDefault();\r\n            closeMessage();\r\n            break;\r\n    }\r\n})\r\n\r\n// Add an event listeners to the cancel button to close the message\r\ncancelButton.addEventListener(\"click\", closeMessage);\r\n\r\ncancelButton.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case ' ':\r\n        case 'Enter':\r\n            event.preventDefault();\r\n            closeMessage();\r\n            break;\r\n    }\r\n})\r\n\r\n// Keep the focus within the confirmation message when navigating by keyboard\r\n// modalTitle is the first focusable element\r\n// confirmButton is the last focusable element\r\nmodalTitle.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case 'Tab':\r\n            if (event.shiftKey) {\r\n                // Handle Shift + Tab\r\n                event.preventDefault(); // Prevent default Tab behavior\r\n                confirmButton = document.querySelector(\".confirmation-message__bottom-button--confirm\");\r\n                confirmButton.focus();\r\n            }\r\n            break;\r\n    }\r\n});\r\n\r\nconfirmButton.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case 'Tab':\r\n            if (event.shiftKey) {\r\n                // Handle Shift + Tab\r\n                // Default setting\r\n            } else {\r\n                event.preventDefault(); // Prevent default Tab behavior\r\n                modalTitle = document.getElementById(\"modalTitle\");\r\n                modalTitle.focus();\r\n            }\r\n            break;\r\n    }\r\n});\r\n\r\n// Add an event listener to the window to close the message\r\n// If the confirmation message is popped up\r\nwindow.addEventListener('keydown', (event) => {\r\n    if (confirmationMessage.style.display === \"flex\") {\r\n        if (event.key === 'Escape') {\r\n            event.preventDefault();\r\n            closeMessage();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to verify the inputs before the confirmation message pops up\r\nfunction verifyInputs(event) {\r\n    event.preventDefault();\r\n    validateUserImput();\r\n    if (nameError.style.display === \"block\" || phoneNumberError.style.display === \"block\" || emailError.style.display === \"block\" || guestNumberError.style.display === \"block\" || dateError.style.display === \"block\" || timeError.style.display === \"block\") {\r\n\r\n    } else {\r\n        openModal();\r\n    }\r\n}\r\n\r\n// Function to open the modal when the user clicks the form submit button\r\nfunction openModal() {\r\n    confirmationMessage.style.display = \"flex\";\r\n    confirmationMessage.setAttribute('aria-modal', 'true');\r\n\r\n    // Copy the value of inputs or options in the form to confirmation message\r\n    nameValue.textContent = nameInput.value;\r\n    phoneValue.textContent = phoneNumberInput.value;\r\n    emailValue.textContent = emailInput.value;\r\n    guestNumberValue.textContent = guestNumberInput.value;\r\n    dateValue.textContent = dateInput.value;\r\n    timeValue.textContent = timeInput.options[timeInput.selectedIndex].text\r\n\r\n    // If the message input value is blank or default value,\r\n    // the corresponding text in the confirmation message will be N/A\r\n    if (messageInput.value === '' || messageInput.value === '(e.g. Dietary Restriction, Special Occasions)') {\r\n        messageValue.textContent = \"N/A\";\r\n    } else {\r\n        // Encode the message input value to prevent HTML injection\r\n        const encodedMessage = encodeHTML(messageInput.value);\r\n        messageValue.innerHTML = encodedMessage;\r\n    }\r\n}\r\n\r\n// Function to encode HTML entities\r\nfunction encodeHTML(text) {\r\n    return text.replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/(\\r\\n|\\n|\\r)/g, '<br>'); // Preserve line breaks\r\n}\r\n\r\n// Function to submit form\r\nfunction submitForm() {\r\n    // Parse the selected date value from the form\r\n    const selectedDateString = dateValue.innerText.trim(); // Get the date string and remove leading/trailing spaces\r\n    const selectedDateComponents = selectedDateString.split('-');\r\n    const selectedYear = parseInt(selectedDateComponents[0]);\r\n    const selectedMonth = parseInt(selectedDateComponents[1]);\r\n    const selectedDate = parseInt(selectedDateComponents[2]);\r\n\r\n    // Set date of today as a benchmark date to do comparison\r\n    const benchmarkDateComponents = today.split('-');\r\n    const benchmarkYear = parseInt(benchmarkDateComponents[0]);\r\n    const benchmarkMonth = parseInt(benchmarkDateComponents[1]);\r\n    const benchmarkDate = parseInt(benchmarkDateComponents[2]);\r\n\r\n    // console.log(\"selected date: \" + selectedDate);\r\n    // console.log(\"benchmark date: \" + benchmarkDate);\r\n\r\n    // Parse the selected time value from the form\r\n    const timeString = timeValue.innerText.trim(); // Get the time string and remove leading/trailing spaces\r\n    const timeComponents = timeString.split(':');\r\n    const selectedHour = parseInt(timeComponents[0]);\r\n    const selectedMinute = parseInt(timeComponents[1]);\r\n\r\n    let currentTime = new Date();\r\n    let currentHour = currentTime.getHours();\r\n    let currentMinute = currentTime.getMinutes();\r\n\r\n    // console.log(\"selected time: \" + timeString);\r\n    // console.log(\"current hour: \" + currentHour);\r\n    // console.log(\"current minute: \" + currentMinute);\r\n\r\n    // Check if the selected date is before today's date or if it's today but the selected time has passed\r\n    if (selectedYear < benchmarkYear || selectedMonth < benchmarkMonth || selectedDate < benchmarkDate || (selectedDate === benchmarkDate && (selectedHour < currentHour + 1 || (selectedHour === currentHour + 1 && selectedMinute < currentMinute)))) {\r\n        alert(\"Please select another available day or time slot.\");\r\n        closeMessage();\r\n        generateDefaultDate();\r\n        generateTimeOptions();\r\n    } else {\r\n        // Trigger form submission\r\n        reservationForm.submit();\r\n        alert(\"Thanks for choosing our restaurant!\\nWe will contact you shortly to confirm your reservation.\");\r\n\r\n        // Hide the following 2 lines if the PHP file is ready\r\n        closeMessage();\r\n        reservationForm.reset();\r\n    }\r\n}\r\n\r\n// Function to close the message\r\nfunction closeMessage() {\r\n    confirmationMessage = document.getElementById(\"confirmation-message\");\r\n    submitButton = document.getElementById('formSumbitButton');\r\n    confirmationMessage.style.display = \"none\";\r\n    confirmationMessage.setAttribute('aria-modal', 'false');\r\n    submitButton.focus();\r\n}","'use strict';\r\n// Textarea in reservation form\r\n// 1. When on focus, clear placeholder \r\n// 2. When input is detected, change the text to solid color\r\n// 3. When it is empty and loses focus, reset the placeholder\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Clear placeholder when on focus\r\nmessageInput.addEventListener('focus', () => {\r\n  if (messageInput.value.trim() === placeholderText) {\r\n    messageInput.value = ''; // Clear the text\r\n  }\r\n});\r\n\r\n// Change color of messageInput when user inputs\r\nmessageInput.addEventListener('input', () => {\r\n  messageInput.classList.toggle('input', messageInput.value.trim() !== '');\r\n});\r\n\r\n// Reset the placeholder if the messageInput is empty when it loses focus\r\nmessageInput.addEventListener('blur', () => {\r\n  if (messageInput.value.trim() === '') {\r\n    messageInput.value = placeholderText;\r\n    messageInput.classList.remove('input');\r\n  }\r\n});","'use strict';\r\n\r\n// Automatically update the year for the copyright in footer\r\ndocument.getElementById(\"year\").textContent = dateOfToday.getFullYear();"]}